/******/!function(e){// webpackBootstrap
/******/ // The module cache
/******/var t={};
/******/
/******/ // The require function
/******/function r(n){
/******/
/******/ // Check if module is in cache
/******/if(t[n])
/******/return t[n].exports;
/******/
/******/ // Create a new module (and put it into the cache)
/******/var o=t[n]={
/******/i:n,
/******/l:0,
/******/exports:{}
/******/};
/******/
/******/ // Execute the module function
/******/
/******/
/******/ // Return the exports of the module
/******/return e[n].call(o.exports,o,o.exports,r),
/******/
/******/ // Flag the module as loaded
/******/o.l=1,o.exports;
/******/}
/******/
/******/
/******/ // expose the modules object (__webpack_modules__)
/******/
/******/
/******/
/******/ // Load entry module and return exports
/******/r.m=e,
/******/
/******/ // expose the module cache
/******/r.c=t,
/******/
/******/ // define getter function for harmony exports
/******/r.d=function(e,t,n){
/******/r.o(e,t)||
/******/Object.defineProperty(e,t,{enumerable:1,get:n})
/******/},
/******/
/******/ // define __esModule on exports
/******/r.r=function(e){
/******/"undefined"!=typeof Symbol&&Symbol.toStringTag&&
/******/Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})
/******/,Object.defineProperty(e,"__esModule",{value:1})},
/******/
/******/ // create a fake namespace object
/******/ // mode & 1: value is a module id, require it
/******/ // mode & 2: merge all properties of value into the ns
/******/ // mode & 4: return value when already ns object
/******/ // mode & 8|1: behave like require
/******/r.t=function(e,t){
/******/if(
/******/1&t&&(e=r(e)),8&t)return e;
/******/if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;
/******/var n=Object.create(null);
/******/
/******/if(r.r(n),
/******/Object.defineProperty(n,"default",{enumerable:1,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));
/******/return n;
/******/},
/******/
/******/ // getDefaultExport function for compatibility with non-harmony modules
/******/r.n=function(e){
/******/var t=e&&e.__esModule?
/******/function(){return e.default}:
/******/function(){return e};
/******/
/******/return r.d(t,"a",t),t;
/******/},
/******/
/******/ // Object.prototype.hasOwnProperty.call
/******/r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},
/******/
/******/ // __webpack_public_path__
/******/r.p="./",r(r.s=90);
/******/}
/************************************************************************/
/******/([
/* 0 */
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */
/***/,function(e,t){
/*!
 * Chai - flag utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .flag(object, key, [value])
 *
 * Get or set a flag value on an object. If a
 * value is provided it will be set, else it will
 * return the currently set value or `undefined` if
 * the value is not set.
 *
 *     utils.flag(this, 'foo', 'bar'); // setter
 *     utils.flag(this, 'foo'); // getter, returns `bar`
 *
 * @param {Object} object constructed Assertion
 * @param {String} key
 * @param {Mixed} value (optional)
 * @namespace Utils
 * @name flag
 * @api private
 */
e.exports=function(e,t,r){var n=e.__flags||(e.__flags=Object.create(null));if(3!==arguments.length)return n[t];n[t]=r};
/***/},
/* 6 */
/* 7 */,
/* 8 */
/***/,function(e,t,r){"use strict";
/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
e.exports=function(e){var t=[];// return the list of modules as css string
return t.toString=function(){return this.map((function(t){var r=function(e,t){var r=e[1]||"",n=e[3];// eslint-disable-next-line prefer-destructuring
if(!n)return r;if(t&&"function"==typeof btoa){var o=(a=n,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(u," */")),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[r].concat(i).concat([o]).join("\n")}// Adapted from convert-source-map (MIT)
var a,s,u;
/***/return[r].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(r,"}"):r})).join("")},// import a list of modules into the list
// eslint-disable-next-line func-names
t.i=function(e,r,n){"string"==typeof e&&(
// eslint-disable-next-line no-param-reassign
e=[[null,e,""]]);var o={};if(n)for(var i=0;i<this.length;i++){
// eslint-disable-next-line prefer-destructuring
var a=this[i][0];null!=a&&(o[a]=1)}for(var s=0;s<e.length;s++){var u=[].concat(e[s]);n&&o[u[0]]||(r&&(u[2]?u[2]="".concat(r," and ").concat(u[2]):u[2]=r),t.push(u))}},t}},
/* 9 */
/***/function(e,t){var r;// This works in non-strict mode
r=function(){return this}();try{
// This works if eval is allowed (see CSP)
r=r||new Function("return this")()}catch(e){
// This works if the window reference is available
"object"==typeof window&&(r=window)}// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}
e.exports=r},
/* 10 */
/* 11 */
/***/,function(e,t,r){
/*!
 * chai
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
var n=[];
/*!
 * Chai version
 */t.version="4.2.0",
/*!
 * Assertion Error
 */
t.AssertionError=r(50);
/*!
 * Utils for plugins (not exported)
 */
var o=r(96);
/**
 * # .use(function)
 *
 * Provides a way to extend the internals of Chai.
 *
 * @param {Function}
 * @returns {this} for chaining
 * @api public
 */t.use=function(e){return~n.indexOf(e)||(e(t,o),n.push(e)),t},
/*!
 * Utility Functions
 */
t.util=o;
/*!
 * Configuration
 */
var i=r(16);t.config=i;
/*!
 * Primary `Assertion` prototype
 */
var a=r(113);t.use(a);
/*!
 * Core Assertions
 */
var s=r(114);t.use(s);
/*!
 * Expect interface
 */
var u=r(115);t.use(u);
/*!
 * Should interface
 */
var c=r(116);t.use(c);
/*!
 * Assert interface
 */
var l=r(117);t.use(l)},
/* 12 */
/***/function(e,t){
/*!
 * Chai - transferFlags utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .transferFlags(assertion, object, includeAll = true)
 *
 * Transfer all the flags for `assertion` to `object`. If
 * `includeAll` is set to `false`, then the base Chai
 * assertion flags (namely `object`, `ssfi`, `lockSsfi`,
 * and `message`) will not be transferred.
 *
 *
 *     var newAssertion = new Assertion();
 *     utils.transferFlags(assertion, newAssertion);
 *
 *     var anotherAssertion = new Assertion(myObj);
 *     utils.transferFlags(assertion, anotherAssertion, false);
 *
 * @param {Assertion} assertion the assertion to transfer the flags from
 * @param {Object} object the object to transfer the flags to; usually a new assertion
 * @param {Boolean} includeAll
 * @namespace Utils
 * @name transferFlags
 * @api private
 */
e.exports=function(e,t,r){var n=e.__flags||(e.__flags=Object.create(null));for(var o in t.__flags||(t.__flags=Object.create(null)),r=3===arguments.length?r:1,n)(r||"object"!==o&&"ssfi"!==o&&"lockSsfi"!==o&&"message"!=o)&&(t.__flags[o]=n[o])};
/***/},
/* 13 */
/* 14 */,
/* 15 */,
/* 16 */
/***/,function(e,t){e.exports={
/**
   * ### config.includeStack
   *
   * User configurable property, influences whether stack trace
   * is included in Assertion error message. Default of false
   * suppresses stack trace in the error message.
   *
   *     chai.config.includeStack = true;  // enable stack on error
   *
   * @param {Boolean}
   * @api public
   */
includeStack:0,
/**
   * ### config.showDiff
   *
   * User configurable property, influences whether or not
   * the `showDiff` flag should be included in the thrown
   * AssertionErrors. `false` will always be `false`; `true`
   * will be true when the assertion has requested a diff
   * be shown.
   *
   * @param {Boolean}
   * @api public
   */
showDiff:1,
/**
   * ### config.truncateThreshold
   *
   * User configurable property, sets length threshold for actual and
   * expected values in assertion errors. If this threshold is exceeded, for
   * example for large data structures, the value is replaced with something
   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.
   *
   * Set it to zero if you want to disable truncating altogether.
   *
   * This is especially userful when doing assertions on arrays: having this
   * set to a reasonable large value makes the failure messages readily
   * inspectable.
   *
   *     chai.config.truncateThreshold = 0;  // disable truncating
   *
   * @param {Number}
   * @api public
   */
truncateThreshold:40,
/**
   * ### config.useProxy
   *
   * User configurable property, defines if chai will use a Proxy to throw
   * an error when a non-existent property is read, which protects users
   * from typos when using property-based assertions.
   *
   * Set it to false if you want to disable this feature.
   *
   *     chai.config.useProxy = false;  // disable use of Proxy
   *
   * This feature is automatically disabled regardless of this config value
   * in environments that don't support proxies.
   *
   * @param {Boolean}
   * @api public
   */
useProxy:1,
/**
   * ### config.proxyExcludedKeys
   *
   * User configurable property, defines which properties should be ignored
   * instead of throwing an error if they do not exist on the assertion.
   * This is only applied if the environment Chai is running in supports proxies and
   * if the `useProxy` configuration setting is enabled.
   * By default, `then` and `inspect` will not throw an error if they do not exist on the
   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when
   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.
   *
   *     // By default these keys will not throw an error if they do not exist on the assertion object
   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];
   *
   * @param {Array}
   * @api public
   */
proxyExcludedKeys:["then","catch","inspect","toJSON"]};
/***/},
/* 17 */
/***/function(e,t,r){"use strict";var n,o=function(){return void 0===n&&(
// Test for IE <= 9 as proposed by Browserhacks
// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
// Tests for existence of standard globals is to allow style-loader
// to operate correctly into non-standard environments
// @see https://github.com/webpack-contrib/style-loader/issues/177
n=Boolean(window&&document&&document.all&&!window.atob)),n},i=function(){var e={};return function(t){if(void 0===e[t]){var r=document.querySelector(t);// Special case to return head of iframe instead of iframe itself
if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{
// This will throw an exception if access to iframe is blocked
// due to cross-origin restrictions
r=r.contentDocument.head}catch(e){
// istanbul ignore next
r=null}e[t]=r}return e[t]}}(),a=[];function s(e){for(var t=-1,r=0;r<a.length;r++)if(a[r].identifier===e){t=r;break}return t}function u(e,t){for(var r={},n=[],o=0;o<e.length;o++){var i=e[o],u=t.base?i[0]+t.base:i[0],c=r[u]||0,l="".concat(u," ").concat(c);r[u]=c+1;var f=s(l),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(a[f].references++,a[f].updater(p)):a.push({identifier:l,updater:m(p,t),references:1}),n.push(l)}return n}function c(e){var t=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var o=r.nc;o&&(n.nonce=o)}if(Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}
/* istanbul ignore next  */
var l,f=(l=[],function(e,t){return l[e]=t,l.filter(Boolean).join("\n")});function p(e,t,r,n){var o=r?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;// For old IE
/* istanbul ignore if  */if(e.styleSheet)e.styleSheet.cssText=f(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function h(e,t,r){var n=r.css,o=r.media,i=r.sourceMap;// For old IE
/* istanbul ignore if  */
if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var d=null,g=0;function m(e,t){var r,n,o;if(t.singleton){var i=g++;r=d||(d=c(t)),n=p.bind(null,r,i,0),o=p.bind(null,r,i,1)}else r=c(t),n=h.bind(null,r,t),o=function(){!function(e){
// istanbul ignore if
if(null===e.parentNode)return 0;e.parentNode.removeChild(e)}(r)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else o()}}e.exports=function(e,t){// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var r=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var n=0;n<r.length;n++){var o=s(r[n]);a[o].references--}for(var i=u(e,t),c=0;c<r.length;c++){var l=s(r[c]);0===a[l].references&&(a[l].updater(),a.splice(l,1))}r=i}}}},
/* 18 */
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */
/***/,function(e,t,r){var n=r(16);
/*!
 * Chai - isProxyEnabled helper
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .isProxyEnabled()
 *
 * Helper function to check if Chai's proxy protection feature is enabled. If
 * proxies are unsupported or disabled via the user's Chai config, then return
 * false. Otherwise, return true.
 *
 * @namespace Utils
 * @name isProxyEnabled
 */e.exports=function(){return n.useProxy&&"undefined"!=typeof Proxy&&"undefined"!=typeof Reflect}},
/* 24 */
/***/function(e,t){var r=Object.getOwnPropertyDescriptor((function(){}),"length");
/*!
 * Chai - addLengthGuard utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .addLengthGuard(fn, assertionName, isChainable)
 *
 * Define `length` as a getter on the given uninvoked method assertion. The
 * getter acts as a guard against chaining `length` directly off of an uninvoked
 * method assertion, which is a problem because it references `function`'s
 * built-in `length` property instead of Chai's `length` assertion. When the
 * getter catches the user making this mistake, it throws an error with a
 * helpful message.
 *
 * There are two ways in which this mistake can be made. The first way is by
 * chaining the `length` assertion directly off of an uninvoked chainable
 * method. In this case, Chai suggests that the user use `lengthOf` instead. The
 * second way is by chaining the `length` assertion directly off of an uninvoked
 * non-chainable method. Non-chainable methods must be invoked prior to
 * chaining. In this case, Chai suggests that the user consult the docs for the
 * given assertion.
 *
 * If the `length` property of functions is unconfigurable, then return `fn`
 * without modification.
 *
 * Note that in ES6, the function's `length` property is configurable, so once
 * support for legacy environments is dropped, Chai's `length` property can
 * replace the built-in function's `length` property, and this length guard will
 * no longer be necessary. In the mean time, maintaining consistency across all
 * environments is the priority.
 *
 * @param {Function} fn
 * @param {String} assertionName
 * @param {Boolean} isChainable
 * @namespace Utils
 * @name addLengthGuard
 */e.exports=function(e,t,n){return r.configurable?(Object.defineProperty(e,"length",{get:function(){if(n)throw Error("Invalid Chai property: "+t+'.length. Due to a compatibility issue, "length" cannot directly follow "'+t+'". Use "'+t+'.lengthOf" instead.');throw Error("Invalid Chai property: "+t+'.length. See docs for proper usage of "'+t+'".')}}),e):e}},
/* 25 */
/***/function(e,t,r){var n=r(16),o=r(5),i=r(54),a=r(23),s=["__flags","__methods","_obj","assert"];e.exports=function(e,t){return a()?new Proxy(e,{get:function e(r,a){
// This check is here because we should not throw errors on Symbol properties
// such as `Symbol.toStringTag`.
// The values for which an error should be thrown can be configured using
// the `config.proxyExcludedKeys` setting.
if("string"==typeof a&&-1===n.proxyExcludedKeys.indexOf(a)&&!Reflect.has(r,a)){
// Special message for invalid property access of non-chainable methods.
if(t)throw Error("Invalid Chai property: "+t+"."+a+'. See docs for proper usage of "'+t+'".');// If the property is reasonably close to an existing Chai property,
// suggest that property to the user. Only suggest properties with a
// distance less than 4.
var u=null,c=4;throw i(r).forEach((function(e){if(!Object.prototype.hasOwnProperty(e)&&-1===s.indexOf(e)){var t=
/**
 * # stringDistanceCapped(strA, strB, cap)
 * Return the Levenshtein distance between two strings, but no more than cap.
 * @param {string} strA
 * @param {string} strB
 * @param {number} number
 * @return {number} min(string distance between strA and strB, cap)
 * @api private
 */
function(e,t,r){if(Math.abs(e.length-t.length)>=r)return r;// `memo` is a two-dimensional array containing distances.
// memo[i][j] is the distance between strA.slice(0, i) and
// strB.slice(0, j).
for(var n=[],o=0;o<=e.length;o++)n[o]=Array(t.length+1).fill(0),n[o][0]=o;for(var i=0;i<t.length;i++)n[0][i]=i;for(o=1;o<=e.length;o++){var a=e.charCodeAt(o-1);for(i=1;i<=t.length;i++)Math.abs(o-i)>=r?n[o][i]=r:n[o][i]=Math.min(n[o-1][i]+1,n[o][i-1]+1,n[o-1][i-1]+(a===t.charCodeAt(i-1)?0:1))}return n[e.length][t.length]}
/***/(a,e,c);t<c&&(u=e,c=t)}})),null!==u?Error("Invalid Chai property: "+a+'. Did you mean "'+u+'"?'):Error("Invalid Chai property: "+a)}// Use this proxy getter as the starting point for removing implementation
// frames from the stack trace of a failed assertion. For property
// assertions, this prevents the proxy getter from showing up in the stack
// trace since it's invoked before the property getter. For method and
// chainable method assertions, this flag will end up getting changed to
// the method wrapper, which is good since this frame will no longer be in
// the stack once the method is invoked. Note that Chai builtin assertion
// properties such as `__flags` are skipped since this is only meant to
// capture the starting point of an assertion. This step is also skipped
// if the `lockSsfi` flag is set, thus indicating that this assertion is
// being called from within another assertion. In that case, the `ssfi`
// flag is already set to the outer assertion's starting point.
return-1!==s.indexOf(a)||o(r,"lockSsfi")||o(r,"ssfi",e),Reflect.get(r,a)}}):e}},
/* 26 */
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */
/***/,function(e,t,r){
/* WEBPACK VAR INJECTION */(function(t){var r;r=function(){"use strict";
/* !
   * type-detect
   * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>
   * MIT Licensed
   */var e="function"==typeof Promise,r="object"==typeof self?self:t,n="undefined"!=typeof Symbol,o="undefined"!=typeof Map,i="undefined"!=typeof Set,a="undefined"!=typeof WeakMap,s="undefined"!=typeof WeakSet,u="undefined"!=typeof DataView,c=n&&void 0!==Symbol.iterator,l=n&&void 0!==Symbol.toStringTag,f=i&&"function"==typeof Set.prototype.entries,p=o&&"function"==typeof Map.prototype.entries,h=f&&Object.getPrototypeOf((new Set).entries()),d=p&&Object.getPrototypeOf((new Map).entries()),g=c&&"function"==typeof Array.prototype[Symbol.iterator],m=g&&Object.getPrototypeOf([][Symbol.iterator]()),y=c&&"function"==typeof String.prototype[Symbol.iterator],v=y&&Object.getPrototypeOf(""[Symbol.iterator]());
/* eslint-disable no-undef */
/**
   * ### typeOf (obj)
   *
   * Uses `Object.prototype.toString` to determine the type of an object,
   * normalising behaviour across engine versions & well optimised.
   *
   * @param {Mixed} object
   * @return {String} object type
   * @api public
   */
return function(t){
/* ! Speed optimisation
     * Pre:
     *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)
     *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)
     *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)
     *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)
     *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)
     * Post:
     *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)
     *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)
     *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)
     *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)
     *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)
     */
var n=typeof t;if("object"!==n)return n;
/* ! Speed optimisation
     * Pre:
     *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)
     * Post:
     *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)
     */if(null===t)return"null";
/* ! Spec Conformance
     * Test: `Object.prototype.toString.call(window)``
     *  - Node === "[object global]"
     *  - Chrome === "[object global]"
     *  - Firefox === "[object Window]"
     *  - PhantomJS === "[object Window]"
     *  - Safari === "[object Window]"
     *  - IE 11 === "[object Window]"
     *  - IE Edge === "[object Window]"
     * Test: `Object.prototype.toString.call(this)``
     *  - Chrome Worker === "[object global]"
     *  - Firefox Worker === "[object DedicatedWorkerGlobalScope]"
     *  - Safari Worker === "[object DedicatedWorkerGlobalScope]"
     *  - IE 11 Worker === "[object WorkerGlobalScope]"
     *  - IE Edge Worker === "[object WorkerGlobalScope]"
     */if(t===r)return"global";
/* ! Speed optimisation
     * Pre:
     *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)
     * Post:
     *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)
     */if(Array.isArray(t)&&(0==l||!(Symbol.toStringTag in t)))return"Array";// Not caching existence of `window` and related properties due to potential
// for `window` to be unset before tests in quasi-browser environments.
if("object"==typeof window&&null!==window){
/* ! Spec Conformance
       * (https://html.spec.whatwg.org/multipage/browsers.html#location)
       * WhatWG HTML$7.7.3 - The `Location` interface
       * Test: `Object.prototype.toString.call(window.location)``
       *  - IE <=11 === "[object Object]"
       *  - IE Edge <=13 === "[object Object]"
       */
if("object"==typeof window.location&&t===window.location)return"Location";
/* ! Spec Conformance
       * (https://html.spec.whatwg.org/#document)
       * WhatWG HTML$3.1.1 - The `Document` object
       * Note: Most browsers currently adher to the W3C DOM Level 2 spec
       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)
       *       which suggests that browsers should use HTMLTableCellElement for
       *       both TD and TH elements. WhatWG separates these.
       *       WhatWG HTML states:
       *         > For historical reasons, Window objects must also have a
       *         > writable, configurable, non-enumerable property named
       *         > HTMLDocument whose value is the Document interface object.
       * Test: `Object.prototype.toString.call(document)``
       *  - Chrome === "[object HTMLDocument]"
       *  - Firefox === "[object HTMLDocument]"
       *  - Safari === "[object HTMLDocument]"
       *  - IE <=10 === "[object Document]"
       *  - IE 11 === "[object HTMLDocument]"
       *  - IE Edge <=13 === "[object HTMLDocument]"
       */if("object"==typeof window.document&&t===window.document)return"Document";if("object"==typeof window.navigator){
/* ! Spec Conformance
         * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)
         * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray
         * Test: `Object.prototype.toString.call(navigator.mimeTypes)``
         *  - IE <=10 === "[object MSMimeTypesCollection]"
         */
if("object"==typeof window.navigator.mimeTypes&&t===window.navigator.mimeTypes)return"MimeTypeArray";
/* ! Spec Conformance
         * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)
         * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray
         * Test: `Object.prototype.toString.call(navigator.plugins)``
         *  - IE <=10 === "[object MSPluginsCollection]"
         */if("object"==typeof window.navigator.plugins&&t===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&t instanceof window.HTMLElement){
/* ! Spec Conformance
        * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)
        * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`
        * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``
        *  - IE <=10 === "[object HTMLBlockElement]"
        */
if("BLOCKQUOTE"===t.tagName)return"HTMLQuoteElement";
/* ! Spec Conformance
         * (https://html.spec.whatwg.org/#htmltabledatacellelement)
         * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`
         * Note: Most browsers currently adher to the W3C DOM Level 2 spec
         *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)
         *       which suggests that browsers should use HTMLTableCellElement for
         *       both TD and TH elements. WhatWG separates these.
         * Test: Object.prototype.toString.call(document.createElement('td'))
         *  - Chrome === "[object HTMLTableCellElement]"
         *  - Firefox === "[object HTMLTableCellElement]"
         *  - Safari === "[object HTMLTableCellElement]"
         */if("TD"===t.tagName)return"HTMLTableDataCellElement";
/* ! Spec Conformance
         * (https://html.spec.whatwg.org/#htmltableheadercellelement)
         * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`
         * Note: Most browsers currently adher to the W3C DOM Level 2 spec
         *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)
         *       which suggests that browsers should use HTMLTableCellElement for
         *       both TD and TH elements. WhatWG separates these.
         * Test: Object.prototype.toString.call(document.createElement('th'))
         *  - Chrome === "[object HTMLTableCellElement]"
         *  - Firefox === "[object HTMLTableCellElement]"
         *  - Safari === "[object HTMLTableCellElement]"
         */if("TH"===t.tagName)return"HTMLTableHeaderCellElement"}}
/* ! Speed optimisation
    * Pre:
    *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)
    *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)
    *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)
    *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)
    *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)
    *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)
    *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)
    *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)
    *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)
    * Post:
    *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)
    *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)
    *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)
    *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)
    *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)
    *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)
    *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)
    *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)
    *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)
    */var c=l&&t[Symbol.toStringTag];if("string"==typeof c)return c;var f=Object.getPrototypeOf(t);
/* ! Speed optimisation
    * Pre:
    *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)
    *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)
    * Post:
    *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)
    *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)
    */return f===RegExp.prototype?"RegExp":
/* ! Speed optimisation
    * Pre:
    *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)
    * Post:
    *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)
    */
f===Date.prototype?"Date":
/* ! Spec Conformance
     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)
     * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be "Promise":
     * Test: `Object.prototype.toString.call(Promise.resolve())``
     *  - Chrome <=47 === "[object Object]"
     *  - Edge <=20 === "[object Object]"
     *  - Firefox 29-Latest === "[object Promise]"
     *  - Safari 7.1-Latest === "[object Promise]"
     */
e&&f===Promise.prototype?"Promise":
/* ! Speed optimisation
    * Pre:
    *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)
    * Post:
    *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)
    */
i&&f===Set.prototype?"Set":
/* ! Speed optimisation
    * Pre:
    *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)
    * Post:
    *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)
    */
o&&f===Map.prototype?"Map":
/* ! Speed optimisation
    * Pre:
    *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)
    * Post:
    *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)
    */
s&&f===WeakSet.prototype?"WeakSet":
/* ! Speed optimisation
    * Pre:
    *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)
    * Post:
    *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)
    */
a&&f===WeakMap.prototype?"WeakMap":
/* ! Spec Conformance
     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)
     * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be "DataView":
     * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``
     *  - Edge <=13 === "[object Object]"
     */
u&&f===DataView.prototype?"DataView":
/* ! Spec Conformance
     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)
     * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be "Map Iterator":
     * Test: `Object.prototype.toString.call(new Map().entries())``
     *  - Edge <=13 === "[object Object]"
     */
o&&f===d?"Map Iterator":
/* ! Spec Conformance
     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)
     * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be "Set Iterator":
     * Test: `Object.prototype.toString.call(new Set().entries())``
     *  - Edge <=13 === "[object Object]"
     */
i&&f===h?"Set Iterator":
/* ! Spec Conformance
     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)
     * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be "Array Iterator":
     * Test: `Object.prototype.toString.call([][Symbol.iterator]())``
     *  - Edge <=13 === "[object Object]"
     */
g&&f===m?"Array Iterator":
/* ! Spec Conformance
     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)
     * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be "String Iterator":
     * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``
     *  - Edge <=13 === "[object Object]"
     */
y&&f===v?"String Iterator":
/* ! Speed optimisation
    * Pre:
    *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)
    * Post:
    *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)
    */
null===f?"Object":Object.prototype.toString.call(t).slice(8,-1)}},e.exports=r()}).call(this,r(9))
/***/},
/* 36 */
/***/function(e,t,r){
// This is (almost) directly from Node.js utils
// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js
var n=r(53),o=r(54),i=r(101),a=r(16);e.exports=
/**
 * ### .inspect(obj, [showHidden], [depth], [colors])
 *
 * Echoes the value of a value. Tries to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Boolean} showHidden Flag that shows hidden (not enumerable)
 *    properties of objects. Default is false.
 * @param {Number} depth Depth in which to descend in object. Default is 2.
 * @param {Boolean} colors Flag to turn on ANSI escape codes to color the
 *    output. Default is false (no coloring).
 * @namespace Utils
 * @name inspect
 */
function(e,t,r,n){return s({showHidden:t,seen:[],stylize:function(e){return e}},e,void 0===r?2:r)}// Returns true if object is a DOM element.;
function s(e,r,d){
// Provide a hook for user-specified inspect functions.
// Check that value is an object with an inspect function on it
if(r&&"function"==typeof r.inspect&&// Filter out the util module, it's inspect function is special
r.inspect!==t.inspect&&(!r.constructor||r.constructor.prototype!==r)){var g=r.inspect(d,e);return"string"!=typeof g&&(g=s(e,g,d)),g}// Primitive types cannot have properties
var m,y=function(e,t){switch(typeof t){case"undefined":return e.stylize("undefined","undefined");case"string":var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(r,"string");case"number":return 0===t&&1/t==-1/0?e.stylize("-0","number"):e.stylize(""+t,"number");case"boolean":return e.stylize(""+t,"boolean");case"symbol":return e.stylize(t.toString(),"symbol")}// For some reason typeof null is "object", so special case here.
if(null===t)return e.stylize("null","null")}(e,r);if(y)return y;// If this is a DOM element, try to get the outer HTML.
if(m=r,"object"==typeof HTMLElement?m instanceof HTMLElement:m&&"object"==typeof m&&"nodeType"in m&&1===m.nodeType&&"string"==typeof m.nodeName){if("outerHTML"in r)return r.outerHTML;// This value does not have an outerHTML attribute,
//   it could still be an XML element
// Attempt to serialize it
try{if(document.xmlVersion)return(new XMLSerializer).serializeToString(r);
// Firefox 11- do not support outerHTML
//   It does, however, support innerHTML
//   Use the following to render the element
var v=document.createElementNS("http://www.w3.org/1999/xhtml","_");v.appendChild(r.cloneNode(0));var b=v.innerHTML.replace("><",">"+r.innerHTML+"<");return v.innerHTML="",b}catch(e){// This could be a non-native DOM implementation,
//   continue with the normal flow:
//   printing the element as if it is an object.
}}// Look up the keys of the object.
var w,E,A=i(r),T=e.showHidden?o(r):A;// Some type of object without properties can be shortcut.
// In IE, errors have a single `stack` property, or if they are vanilla `Error`,
// a `stack` plus `description` property; ignore those for consistency.
if(0===T.length||p(r)&&(1===T.length&&"stack"===T[0]||2===T.length&&"description"===T[0]&&"stack"===T[1])){if("function"==typeof r)return E=(w=n(r))?": "+w:"",e.stylize("[Function"+E+"]","special");if(l(r))return e.stylize(RegExp.prototype.toString.call(r),"regexp");if(f(r))return e.stylize(Date.prototype.toUTCString.call(r),"date");if(p(r))return u(r)}var x,S,_="",N=0,D=0,C=["{","}"];// Make error with message first say the error
if("object"==typeof(x=r)&&/\w+Array]$/.test(h(x))&&(D=1,C=["[","]"]),// Make Array say that they are Array
function(e){return Array.isArray(e)||"object"==typeof e&&"[object Array]"===h(e)}(r)&&(N=1,C=["[","]"]),// Make functions say that they are functions
"function"==typeof r&&(_=" [Function"+(E=(w=n(r))?": "+w:"")+"]"),// Make RegExps say that they are RegExps
l(r)&&(_=" "+RegExp.prototype.toString.call(r)),// Make dates with properties first say the date
f(r)&&(_=" "+Date.prototype.toUTCString.call(r)),p(r))return u(r);if(0===T.length&&(!N||0==r.length))return C[0]+_+C[1];if(d<0)return l(r)?e.stylize(RegExp.prototype.toString.call(r),"regexp"):e.stylize("[Object]","special");if(e.seen.push(r),N)S=function(e,t,r,n,o){for(var i=[],a=0,s=t.length;a<s;++a)Object.prototype.hasOwnProperty.call(t,String(a))?i.push(c(e,t,r,n,String(a),1)):i.push("");return o.forEach((function(o){o.match(/^\d+$/)||i.push(c(e,t,r,n,o,1))})),i}(e,r,d,A,T);else{if(D)return function(e){for(var t="[ ",r=0;r<e.length;++r){if(t.length>=a.truncateThreshold-7){t+="...";break}t+=e[r]+", "}// Removing trailing `, ` if the array was not truncated
-1!==(t+=" ]").indexOf(",  ]")&&(t=t.replace(",  ]"," ]"));return t}(r);S=T.map((function(t){return c(e,r,d,A,t,N)}))}return e.seen.pop(),function(e,t,r){if(e.reduce((function(e,t){return e+t.length+1}),0)>60)return r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1];return r[0]+t+" "+e.join(", ")+" "+r[1]}(S,_,C)}function u(e){return"["+Error.prototype.toString.call(e)+"]"}function c(e,t,r,n,o,i){var a,u,c=Object.getOwnPropertyDescriptor(t,o);if(c&&(c.get?u=c.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):c.set&&(u=e.stylize("[Setter]","special"))),n.indexOf(o)<0&&(a="["+o+"]"),u||(e.seen.indexOf(t[o])<0?(u=s(e,t[o],null===r?null:r-1)).indexOf("\n")>-1&&(u=i?u.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+u.split("\n").map((function(e){return"   "+e})).join("\n")):u=e.stylize("[Circular]","special")),void 0===a){if(i&&o.match(/^\d+$/))return u;(a=JSON.stringify(""+o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=e.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=e.stylize(a,"string"))}return a+": "+u}function l(e){return"object"==typeof e&&"[object RegExp]"===h(e)}function f(e){return"object"==typeof e&&"[object Date]"===h(e)}function p(e){return"object"==typeof e&&"[object Error]"===h(e)}function h(e){return Object.prototype.toString.call(e)}
/***/},
/* 37 */
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */
/***/,function(e,t){
/*!
 * assertion-error
 * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>
 * MIT Licensed
 */
/*!
 * Return a function that will copy properties from
 * one object to another excluding any originally
 * listed. Returned function will create a new `{}`.
 *
 * @param {String} excluded properties ...
 * @return {Function}
 */
function r(){var e=[].slice.call(arguments);function t(t,r){Object.keys(r).forEach((function(n){~e.indexOf(n)||(t[n]=r[n])}))}return function(){for(var e=[].slice.call(arguments),r=0,n={};r<e.length;r++)t(n,e[r]);return n}}
/**
 * ### AssertionError
 *
 * An extension of the JavaScript `Error` constructor for
 * assertion and validation scenarios.
 *
 * @param {String} message
 * @param {Object} properties to include (optional)
 * @param {callee} start stack function (optional)
 */
function n(e,t,o){var i=r("name","message","stack","constructor","toJSON")(t||{});// default values
// copy from properties
for(var a in this.message=e||"Unspecified AssertionError",this.showDiff=0,i)this[a]=i[a];// capture stack trace
if(o=o||n,Error.captureStackTrace)Error.captureStackTrace(this,o);else try{throw new Error}catch(e){this.stack=e.stack}}
/*!
 * Inherit from Error.prototype
 */
/*!
 * Primary Exports
 */
e.exports=n,n.prototype=Object.create(Error.prototype),
/*!
 * Statically set name
 */
n.prototype.name="AssertionError",
/*!
 * Ensure correct constructor
 */
n.prototype.constructor=n,
/**
 * Allow errors to be converted to JSON for static transfer.
 *
 * @param {Boolean} include stack (default: `true`)
 * @return {Object} object that can be `JSON.stringify`
 */
n.prototype.toJSON=function(e){var t=r("constructor","toJSON","stack")({name:this.name},this);// include stack if exists and not turned off
return 0!=e&&this.stack&&(t.stack=this.stack),t}},
/* 51 */
/***/function(e,t){
/*!
 * Chai - getActual utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .getActual(object, [actual])
 *
 * Returns the `actual` value for an Assertion.
 *
 * @param {Object} object (constructed Assertion)
 * @param {Arguments} chai.Assertion.prototype.assert arguments
 * @namespace Utils
 * @name getActual
 */
e.exports=function(e,t){return t.length>4?t[4]:e._obj};
/***/},
/* 52 */
/***/function(e,t,r){
/*!
 * Chai - flag utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/*!
 * Module dependencies
 */
var n=r(36),o=r(16);
/**
 * ### .objDisplay(object)
 *
 * Determines if an object or an array matches
 * criteria to be inspected in-line for error
 * messages or should be truncated.
 *
 * @param {Mixed} javascript object to inspect
 * @name objDisplay
 * @namespace Utils
 * @api public
 */
e.exports=function(e){var t=n(e),r=Object.prototype.toString.call(e);if(o.truncateThreshold&&t.length>=o.truncateThreshold){if("[object Function]"===r)return e.name&&""!==e.name?"[Function: "+e.name+"]":"[Function]";if("[object Array]"===r)return"[ Array("+e.length+") ]";if("[object Object]"===r){var i=Object.keys(e);return"{ Object ("+(i.length>2?i.splice(0,2).join(", ")+", ...":i.join(", "))+") }"}return t}return t}},
/* 53 */
/***/function(e,t,r){"use strict";
/* !
 * Chai - getFuncName utility
 * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .getFuncName(constructorFn)
 *
 * Returns the name of a function.
 * When a non-function instance is passed, returns `null`.
 * This also includes a polyfill function if `aFunc.name` is not defined.
 *
 * @name getFuncName
 * @param {Function} funct
 * @namespace Utils
 * @api public
 */var n=Function.prototype.toString,o=/\s*function(?:\s|\s*\/\*[^(?:*\/)]+\*\/\s*)*([^\s\(\/]+)/;e.exports=function(e){if("function"!=typeof e)return null;var t="";if(void 0===Function.prototype.name&&void 0===e.name){
// Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined
var r=n.call(e).match(o);r&&(t=r[1])}else
// If we've got a `name` property we just use it
t=e.name;return t}},
/* 54 */
/***/function(e,t){
/*!
 * Chai - getProperties utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .getProperties(object)
 *
 * This allows the retrieval of property names of an object, enumerable or not,
 * inherited or not.
 *
 * @param {Object} object
 * @returns {Array}
 * @namespace Utils
 * @name getProperties
 * @api public
 */
e.exports=function(e){var t=Object.getOwnPropertyNames(e);function r(e){-1===t.indexOf(e)&&t.push(e)}for(var n=Object.getPrototypeOf(e);null!==n;)Object.getOwnPropertyNames(n).forEach(r),n=Object.getPrototypeOf(n);return t};
/***/},
/* 55 */
/***/function(e,t){
/*!
 * Chai - getOwnEnumerablePropertySymbols utility
 * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .getOwnEnumerablePropertySymbols(object)
 *
 * This allows the retrieval of directly-owned enumerable property symbols of an
 * object. This function is necessary because Object.getOwnPropertySymbols
 * returns both enumerable and non-enumerable property symbols.
 *
 * @param {Object} object
 * @returns {Array}
 * @namespace Utils
 * @name getOwnEnumerablePropertySymbols
 * @api public
 */
e.exports=function(e){return"function"!=typeof Object.getOwnPropertySymbols?[]:Object.getOwnPropertySymbols(e).filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))};
/***/},
/* 56 */
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */
/***/,function(e,t,r){e.exports=r(11);
/***/},
/* 61 */
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */
/***/,function(e,t,r){e.exports=r(91);
/***/},
/* 91 */
/***/function(e,t,r){r(92);var n=r(94);(window.mocha||n).setup({ui:"bdd"}),r(95),r(118)},
/* 92 */
/***/function(e,t,r){var n=r(17),o=r(93);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:0};n(o,i);e.exports=o.locals||{}},
/* 93 */
/***/function(e,t,r){"use strict";r.r(t);
/* harmony import */var n=r(8),o=r.n(n)()(1);
/* harmony import */
// Module
o.push([e.i,"@charset \"utf-8\";\n\nbody {\n  margin:0;\n}\n\n#mocha {\n  font: 20px/1.5 \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: 60px 50px;\n}\n\n#mocha ul,\n#mocha li {\n  margin: 0;\n  padding: 0;\n}\n\n#mocha ul {\n  list-style: none;\n}\n\n#mocha h1,\n#mocha h2 {\n  margin: 0;\n}\n\n#mocha h1 {\n  margin-top: 15px;\n  font-size: 1em;\n  font-weight: 200;\n}\n\n#mocha h1 a {\n  text-decoration: none;\n  color: inherit;\n}\n\n#mocha h1 a:hover {\n  text-decoration: underline;\n}\n\n#mocha .suite .suite h1 {\n  margin-top: 0;\n  font-size: .8em;\n}\n\n#mocha .hidden {\n  display: none;\n}\n\n#mocha h2 {\n  font-size: 12px;\n  font-weight: normal;\n  cursor: pointer;\n}\n\n#mocha .suite {\n  margin-left: 15px;\n}\n\n#mocha .test {\n  margin-left: 15px;\n  overflow: hidden;\n}\n\n#mocha .test.pending:hover h2::after {\n  content: '(pending)';\n  font-family: arial, sans-serif;\n}\n\n#mocha .test.pass.medium .duration {\n  background: #c09853;\n}\n\n#mocha .test.pass.slow .duration {\n  background: #b94a48;\n}\n\n#mocha .test.pass::before {\n  content: '✓';\n  font-size: 12px;\n  display: block;\n  float: left;\n  margin-right: 5px;\n  color: #00d6b2;\n}\n\n#mocha .test.pass .duration {\n  font-size: 9px;\n  margin-left: 5px;\n  padding: 2px 5px;\n  color: #fff;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\n  -moz-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  border-radius: 5px;\n}\n\n#mocha .test.pass.fast .duration {\n  display: none;\n}\n\n#mocha .test.pending {\n  color: #0b97c4;\n}\n\n#mocha .test.pending::before {\n  content: '◦';\n  color: #0b97c4;\n}\n\n#mocha .test.fail {\n  color: #c00;\n}\n\n#mocha .test.fail pre {\n  color: black;\n}\n\n#mocha .test.fail::before {\n  content: '✖';\n  font-size: 12px;\n  display: block;\n  float: left;\n  margin-right: 5px;\n  color: #c00;\n}\n\n#mocha .test pre.error {\n  color: #c00;\n  max-height: 300px;\n  overflow: auto;\n}\n\n#mocha .test .html-error {\n  overflow: auto;\n  color: black;\n  display: block;\n  float: left;\n  clear: left;\n  font: 12px/1.5 monaco, monospace;\n  margin: 5px;\n  padding: 15px;\n  border: 1px solid #eee;\n  max-width: 85%; /*(1)*/\n  max-width: -webkit-calc(100% - 42px);\n  max-width: -moz-calc(100% - 42px);\n  max-width: calc(100% - 42px); /*(2)*/\n  max-height: 300px;\n  word-wrap: break-word;\n  border-bottom-color: #ddd;\n  -webkit-box-shadow: 0 1px 3px #eee;\n  -moz-box-shadow: 0 1px 3px #eee;\n  box-shadow: 0 1px 3px #eee;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n}\n\n#mocha .test .html-error pre.error {\n  border: none;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n  -webkit-box-shadow: 0;\n  -moz-box-shadow: 0;\n  box-shadow: 0;\n  padding: 0;\n  margin: 0;\n  margin-top: 18px;\n  max-height: none;\n}\n\n/**\n * (1): approximate for browsers not supporting calc\n * (2): 42 = 2*15 + 2*10 + 2*1 (padding + margin + border)\n *      ^^ seriously\n */\n#mocha .test pre {\n  display: block;\n  float: left;\n  clear: left;\n  font: 12px/1.5 monaco, monospace;\n  margin: 5px;\n  padding: 15px;\n  border: 1px solid #eee;\n  max-width: 85%; /*(1)*/\n  max-width: -webkit-calc(100% - 42px);\n  max-width: -moz-calc(100% - 42px);\n  max-width: calc(100% - 42px); /*(2)*/\n  word-wrap: break-word;\n  border-bottom-color: #ddd;\n  -webkit-box-shadow: 0 1px 3px #eee;\n  -moz-box-shadow: 0 1px 3px #eee;\n  box-shadow: 0 1px 3px #eee;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n}\n\n#mocha .test h2 {\n  position: relative;\n}\n\n#mocha .test a.replay {\n  position: absolute;\n  top: 3px;\n  right: 0;\n  text-decoration: none;\n  vertical-align: middle;\n  display: block;\n  width: 15px;\n  height: 15px;\n  line-height: 15px;\n  text-align: center;\n  background: #eee;\n  font-size: 15px;\n  -webkit-border-radius: 15px;\n  -moz-border-radius: 15px;\n  border-radius: 15px;\n  -webkit-transition:opacity 200ms;\n  -moz-transition:opacity 200ms;\n  -o-transition:opacity 200ms;\n  transition: opacity 200ms;\n  opacity: 0.3;\n  color: #888;\n}\n\n#mocha .test:hover a.replay {\n  opacity: 1;\n}\n\n#mocha-report.pass .test.fail {\n  display: none;\n}\n\n#mocha-report.fail .test.pass {\n  display: none;\n}\n\n#mocha-report.pending .test.pass,\n#mocha-report.pending .test.fail {\n  display: none;\n}\n#mocha-report.pending .test.pass.pending {\n  display: block;\n}\n\n#mocha-error {\n  color: #c00;\n  font-size: 1.5em;\n  font-weight: 100;\n  letter-spacing: 1px;\n}\n\n#mocha-stats {\n  position: fixed;\n  top: 15px;\n  right: 10px;\n  font-size: 12px;\n  margin: 0;\n  color: #888;\n  z-index: 1;\n}\n\n#mocha-stats .progress {\n  float: right;\n  padding-top: 0;\n\n  /**\n   * Set safe initial values, so mochas .progress does not inherit these\n   * properties from Bootstrap .progress (which causes .progress height to\n   * equal line height set in Bootstrap).\n   */\n  height: auto;\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n  background-color: initial;\n}\n\n#mocha-stats em {\n  color: black;\n}\n\n#mocha-stats a {\n  text-decoration: none;\n  color: inherit;\n}\n\n#mocha-stats a:hover {\n  border-bottom: 1px solid #eee;\n}\n\n#mocha-stats li {\n  display: inline-block;\n  margin: 0 5px;\n  list-style: none;\n  padding-top: 11px;\n}\n\n#mocha-stats canvas {\n  width: 40px;\n  height: 40px;\n}\n\n#mocha code .comment { color: #ddd; }\n#mocha code .init { color: #2f6fad; }\n#mocha code .string { color: #5890ad; }\n#mocha code .keyword { color: #8a6343; }\n#mocha code .number { color: #2f6fad; }\n\n@media screen and (max-device-width: 480px) {\n  #mocha {\n    margin: 60px 0px;\n  }\n\n  #mocha #stats {\n    position: absolute;\n  }\n}\n","",{version:3,sources:["mocha.css"],names:[],mappings:"AAAA,gBAAgB;;AAEhB;EACE,QAAQ;AACV;;AAEA;EACE,6DAA6D;EAC7D,iBAAiB;AACnB;;AAEA;;EAEE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;EACpB,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,cAAc;EACd,WAAW;EACX,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,gBAAgB;EAChB,gBAAgB;EAChB,WAAW;EACX,kDAAkD;EAClD,+CAA+C;EAC/C,0CAA0C;EAC1C,0BAA0B;EAC1B,uBAAuB;EACvB,sBAAsB;EACtB,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,cAAc;EACd,WAAW;EACX,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,cAAc;EACd,WAAW;EACX,WAAW;EACX,gCAAgC;EAChC,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,cAAc,EAAE,MAAM;EACtB,oCAAoC;EACpC,iCAAiC;EACjC,4BAA4B,EAAE,MAAM;EACpC,iBAAiB;EACjB,qBAAqB;EACrB,yBAAyB;EACzB,kCAAkC;EAClC,+BAA+B;EAC/B,0BAA0B;EAC1B,0BAA0B;EAC1B,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,qBAAqB;EACrB,kBAAkB;EAClB,aAAa;EACb,UAAU;EACV,SAAS;EACT,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;;;;EAIE;AACF;EACE,cAAc;EACd,WAAW;EACX,WAAW;EACX,gCAAgC;EAChC,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,cAAc,EAAE,MAAM;EACtB,oCAAoC;EACpC,iCAAiC;EACjC,4BAA4B,EAAE,MAAM;EACpC,qBAAqB;EACrB,yBAAyB;EACzB,kCAAkC;EAClC,+BAA+B;EAC/B,0BAA0B;EAC1B,0BAA0B;EAC1B,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,QAAQ;EACR,qBAAqB;EACrB,sBAAsB;EACtB,cAAc;EACd,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,2BAA2B;EAC3B,wBAAwB;EACxB,mBAAmB;EACnB,gCAAgC;EAChC,6BAA6B;EAC7B,2BAA2B;EAC3B,yBAAyB;EACzB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,aAAa;AACf;AACA;EACE,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,SAAS;EACT,WAAW;EACX,eAAe;EACf,SAAS;EACT,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,cAAc;;EAEd;;;;IAIE;EACF,YAAY;EACZ,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,qBAAqB;EACrB,aAAa;EACb,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA,uBAAuB,WAAW,EAAE;AACpC,oBAAoB,cAAc,EAAE;AACpC,sBAAsB,cAAc,EAAE;AACtC,uBAAuB,cAAc,EAAE;AACvC,sBAAsB,cAAc,EAAE;;AAEtC;EACE;IACE,gBAAgB;EAClB;;EAEA;IACE,kBAAkB;EACpB;AACF",file:"mocha.css",sourcesContent:["@charset \"utf-8\";\n\nbody {\n  margin:0;\n}\n\n#mocha {\n  font: 20px/1.5 \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: 60px 50px;\n}\n\n#mocha ul,\n#mocha li {\n  margin: 0;\n  padding: 0;\n}\n\n#mocha ul {\n  list-style: none;\n}\n\n#mocha h1,\n#mocha h2 {\n  margin: 0;\n}\n\n#mocha h1 {\n  margin-top: 15px;\n  font-size: 1em;\n  font-weight: 200;\n}\n\n#mocha h1 a {\n  text-decoration: none;\n  color: inherit;\n}\n\n#mocha h1 a:hover {\n  text-decoration: underline;\n}\n\n#mocha .suite .suite h1 {\n  margin-top: 0;\n  font-size: .8em;\n}\n\n#mocha .hidden {\n  display: none;\n}\n\n#mocha h2 {\n  font-size: 12px;\n  font-weight: normal;\n  cursor: pointer;\n}\n\n#mocha .suite {\n  margin-left: 15px;\n}\n\n#mocha .test {\n  margin-left: 15px;\n  overflow: hidden;\n}\n\n#mocha .test.pending:hover h2::after {\n  content: '(pending)';\n  font-family: arial, sans-serif;\n}\n\n#mocha .test.pass.medium .duration {\n  background: #c09853;\n}\n\n#mocha .test.pass.slow .duration {\n  background: #b94a48;\n}\n\n#mocha .test.pass::before {\n  content: '✓';\n  font-size: 12px;\n  display: block;\n  float: left;\n  margin-right: 5px;\n  color: #00d6b2;\n}\n\n#mocha .test.pass .duration {\n  font-size: 9px;\n  margin-left: 5px;\n  padding: 2px 5px;\n  color: #fff;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\n  -moz-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  border-radius: 5px;\n}\n\n#mocha .test.pass.fast .duration {\n  display: none;\n}\n\n#mocha .test.pending {\n  color: #0b97c4;\n}\n\n#mocha .test.pending::before {\n  content: '◦';\n  color: #0b97c4;\n}\n\n#mocha .test.fail {\n  color: #c00;\n}\n\n#mocha .test.fail pre {\n  color: black;\n}\n\n#mocha .test.fail::before {\n  content: '✖';\n  font-size: 12px;\n  display: block;\n  float: left;\n  margin-right: 5px;\n  color: #c00;\n}\n\n#mocha .test pre.error {\n  color: #c00;\n  max-height: 300px;\n  overflow: auto;\n}\n\n#mocha .test .html-error {\n  overflow: auto;\n  color: black;\n  display: block;\n  float: left;\n  clear: left;\n  font: 12px/1.5 monaco, monospace;\n  margin: 5px;\n  padding: 15px;\n  border: 1px solid #eee;\n  max-width: 85%; /*(1)*/\n  max-width: -webkit-calc(100% - 42px);\n  max-width: -moz-calc(100% - 42px);\n  max-width: calc(100% - 42px); /*(2)*/\n  max-height: 300px;\n  word-wrap: break-word;\n  border-bottom-color: #ddd;\n  -webkit-box-shadow: 0 1px 3px #eee;\n  -moz-box-shadow: 0 1px 3px #eee;\n  box-shadow: 0 1px 3px #eee;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n}\n\n#mocha .test .html-error pre.error {\n  border: none;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n  -webkit-box-shadow: 0;\n  -moz-box-shadow: 0;\n  box-shadow: 0;\n  padding: 0;\n  margin: 0;\n  margin-top: 18px;\n  max-height: none;\n}\n\n/**\n * (1): approximate for browsers not supporting calc\n * (2): 42 = 2*15 + 2*10 + 2*1 (padding + margin + border)\n *      ^^ seriously\n */\n#mocha .test pre {\n  display: block;\n  float: left;\n  clear: left;\n  font: 12px/1.5 monaco, monospace;\n  margin: 5px;\n  padding: 15px;\n  border: 1px solid #eee;\n  max-width: 85%; /*(1)*/\n  max-width: -webkit-calc(100% - 42px);\n  max-width: -moz-calc(100% - 42px);\n  max-width: calc(100% - 42px); /*(2)*/\n  word-wrap: break-word;\n  border-bottom-color: #ddd;\n  -webkit-box-shadow: 0 1px 3px #eee;\n  -moz-box-shadow: 0 1px 3px #eee;\n  box-shadow: 0 1px 3px #eee;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n}\n\n#mocha .test h2 {\n  position: relative;\n}\n\n#mocha .test a.replay {\n  position: absolute;\n  top: 3px;\n  right: 0;\n  text-decoration: none;\n  vertical-align: middle;\n  display: block;\n  width: 15px;\n  height: 15px;\n  line-height: 15px;\n  text-align: center;\n  background: #eee;\n  font-size: 15px;\n  -webkit-border-radius: 15px;\n  -moz-border-radius: 15px;\n  border-radius: 15px;\n  -webkit-transition:opacity 200ms;\n  -moz-transition:opacity 200ms;\n  -o-transition:opacity 200ms;\n  transition: opacity 200ms;\n  opacity: 0.3;\n  color: #888;\n}\n\n#mocha .test:hover a.replay {\n  opacity: 1;\n}\n\n#mocha-report.pass .test.fail {\n  display: none;\n}\n\n#mocha-report.fail .test.pass {\n  display: none;\n}\n\n#mocha-report.pending .test.pass,\n#mocha-report.pending .test.fail {\n  display: none;\n}\n#mocha-report.pending .test.pass.pending {\n  display: block;\n}\n\n#mocha-error {\n  color: #c00;\n  font-size: 1.5em;\n  font-weight: 100;\n  letter-spacing: 1px;\n}\n\n#mocha-stats {\n  position: fixed;\n  top: 15px;\n  right: 10px;\n  font-size: 12px;\n  margin: 0;\n  color: #888;\n  z-index: 1;\n}\n\n#mocha-stats .progress {\n  float: right;\n  padding-top: 0;\n\n  /**\n   * Set safe initial values, so mochas .progress does not inherit these\n   * properties from Bootstrap .progress (which causes .progress height to\n   * equal line height set in Bootstrap).\n   */\n  height: auto;\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n  background-color: initial;\n}\n\n#mocha-stats em {\n  color: black;\n}\n\n#mocha-stats a {\n  text-decoration: none;\n  color: inherit;\n}\n\n#mocha-stats a:hover {\n  border-bottom: 1px solid #eee;\n}\n\n#mocha-stats li {\n  display: inline-block;\n  margin: 0 5px;\n  list-style: none;\n  padding-top: 11px;\n}\n\n#mocha-stats canvas {\n  width: 40px;\n  height: 40px;\n}\n\n#mocha code .comment { color: #ddd; }\n#mocha code .init { color: #2f6fad; }\n#mocha code .string { color: #5890ad; }\n#mocha code .keyword { color: #8a6343; }\n#mocha code .number { color: #2f6fad; }\n\n@media screen and (max-device-width: 480px) {\n  #mocha {\n    margin: 60px 0px;\n  }\n\n  #mocha #stats {\n    position: absolute;\n  }\n}\n"]}]),
// Exports
/* harmony default export */t.default=o},
/* 94 */
/***/function(e,t,r){
/* WEBPACK VAR INJECTION */(function(t){var r;r=function(){"use strict";var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t?t:"undefined"!=typeof self?self:{};function r(e,t,r){return e(r={path:t,exports:{},require:function(e,t){return o(null==t&&r.path)}},r.exports),r.exports}function n(e){return e&&e.default||e}function o(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var i=function(e){return e&&e.Math==Math&&e},a=
// eslint-disable-next-line no-undef
i("object"==typeof globalThis&&globalThis)||i("object"==typeof window&&window)||i("object"==typeof self&&self)||i("object"==typeof e&&e)||
// eslint-disable-next-line no-new-func
Function("return this")(),s=function(e){try{return!!e()}catch(e){return 1}},u=!s((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),c={}.propertyIsEnumerable,l=Object.getOwnPropertyDescriptor,f={f:l&&!c.call({1:2},1)?function(e){var t=l(this,e);return!!t&&t.enumerable}:c},p=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},h={}.toString,d=function(e){return h.call(e).slice(8,-1)},g="".split,m=s((function(){
// throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
// eslint-disable-next-line no-prototype-builtins
return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==d(e)?g.call(e,""):Object(e)}:Object,y=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},v=function(e){return m(y(e))},b=function(e){return"object"==typeof e?null!==e:"function"==typeof e},w=function(e,t){if(!b(e))return e;var r,n;if(t&&"function"==typeof(r=e.toString)&&!b(n=r.call(e)))return n;if("function"==typeof(r=e.valueOf)&&!b(n=r.call(e)))return n;if(!t&&"function"==typeof(r=e.toString)&&!b(n=r.call(e)))return n;throw TypeError("Can't convert object to primitive value")},E={}.hasOwnProperty,A=function(e,t){return E.call(e,t)},T=a.document,x=b(T)&&b(T.createElement),S=function(e){return x?T.createElement(e):{}},_=!u&&!s((function(){return 7!=Object.defineProperty(S("div"),"a",{get:function(){return 7}}).a})),N=Object.getOwnPropertyDescriptor,D={f:u?N:function(e,t){if(e=v(e),t=w(t,1),_)try{return N(e,t)}catch(e){/* empty */}if(A(e,t))return p(!f.f.call(e,t),e[t])}},C=function(e){if(!b(e))throw TypeError(String(e)+" is not an object");return e},k=Object.defineProperty,O={f:u?k:function(e,t,r){if(C(e),t=w(t,1),C(r),_)try{return k(e,t,r)}catch(e){/* empty */}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},R=u?function(e,t,r){return O.f(e,t,p(1,r))}:function(e,t,r){return e[t]=r,e},L=function(e,t){try{R(a,e,t)}catch(r){a[e]=t}return t},q=a["__core-js_shared__"]||L("__core-js_shared__",{}),I=Function.toString;
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
"function"!=typeof q.inspectSource&&(q.inspectSource=function(e){return I.call(e)});var B,P,j,F=q.inspectSource,U=a.WeakMap,V="function"==typeof U&&/native code/.test(F(U)),M=r((function(e){(e.exports=function(e,t){return q[e]||(q[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.5",mode:"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})})),H=0,z=Math.random(),G=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++H+z).toString(36)},Y=M("keys"),W=function(e){return Y[e]||(Y[e]=G(e))},$={},J=a.WeakMap;if(V){var K=new J,Z=K.get,Q=K.has,X=K.set;B=function(e,t){return X.call(K,e,t),t},P=function(e){return Z.call(K,e)||{}},j=function(e){return Q.call(K,e)}}else{var ee=W("state");$[ee]=1,B=function(e,t){return R(e,ee,t),t},P=function(e){return A(e,ee)?e[ee]:{}},j=function(e){return A(e,ee)}}var te,re,ne={set:B,get:P,has:j,enforce:function(e){return j(e)?P(e):B(e,{})},getterFor:function(e){return function(t){var r;if(!b(t)||(r=P(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return r}}},oe=r((function(e){var t=ne.get,r=ne.enforce,n=String(String).split("String");(e.exports=function(e,t,o,i){var s=i?!!i.unsafe:0,u=i?!!i.enumerable:0,c=i?!!i.noTargetGet:0;"function"==typeof o&&("string"!=typeof t||A(o,"name")||R(o,"name",t),r(o).source=n.join("string"==typeof t?t:"")),e!==a?(s?!c&&e[t]&&(u=1):delete e[t],u?e[t]=o:R(e,t,o)):u?e[t]=o:L(t,o)})(Function.prototype,"toString",(function(){return"function"==typeof this&&t(this).source||F(this)}))})),ie=a,ae=function(e){return"function"==typeof e?e:void 0},se=function(e,t){return arguments.length<2?ae(ie[e])||ae(a[e]):ie[e]&&ie[e][t]||a[e]&&a[e][t]},ue=Math.ceil,ce=Math.floor,le=function(e){return isNaN(e=+e)?0:(e>0?ce:ue)(e)},fe=Math.min,pe=function(e){return e>0?fe(le(e),9007199254740991):0;// 2 ** 53 - 1 == 9007199254740991
},he=Math.max,de=Math.min,ge=function(e,t){var r=le(e);return r<0?he(r+t,0):de(r,t)},me=function(e){return function(t,r,n){var o,i=v(t),a=pe(i.length),s=ge(n,a);
// Array#includes uses SameValueZero equality algorithm
// eslint-disable-next-line no-self-compare
if(e&&r!=r){for(;a>s;)
// eslint-disable-next-line no-self-compare
if((o=i[s++])!=o)return 1;
// Array#indexOf ignores holes, Array#includes - not
}else for(;a>s;s++)if((e||s in i)&&i[s]===r)return e||s||0;return!e&&-1}},ye={
// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
includes:me(1),
// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
indexOf:me(0)},ve=ye.indexOf,be=function(e,t){var r,n=v(e),o=0,i=[];for(r in n)!A($,r)&&A(n,r)&&i.push(r);
// Don't enum bug & hidden keys
for(;t.length>o;)A(n,r=t[o++])&&(~ve(i,r)||i.push(r));return i},we=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Ee=we.concat("length","prototype"),Ae={f:Object.getOwnPropertyNames||function(e){return be(e,Ee)}},Te={f:Object.getOwnPropertySymbols},xe=se("Reflect","ownKeys")||function(e){var t=Ae.f(C(e)),r=Te.f;return r?t.concat(r(e)):t},Se=function(e,t){for(var r=xe(t),n=O.f,o=D.f,i=0;i<r.length;i++){var a=r[i];A(e,a)||n(e,a,o(t,a))}},_e=/#|\.prototype\./,Ne=function(e,t){var r=Ce[De(e)];return r==Oe?1:r==ke?0:"function"==typeof t?s(t):!!t},De=Ne.normalize=function(e){return String(e).replace(_e,".").toLowerCase()},Ce=Ne.data={},ke=Ne.NATIVE="N",Oe=Ne.POLYFILL="P",Re=Ne,Le=D.f,qe=function(e,t){var r,n,o,i,s,u=e.target,c=e.global,l=e.stat;if(r=c?a:l?a[u]||L(u,{}):(a[u]||{}).prototype)for(n in t){
// contained in target
if(i=t[n],o=e.noTargetGet?(s=Le(r,n))&&s.value:r[n],!Re(c?n:u+(l?".":"#")+n,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;Se(i,o)}
// add a flag to not completely full polyfills
(e.sham||o&&o.sham)&&R(i,"sham",1),
// extend global
oe(r,n,i,e)}},Ie=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e},Be=function(e,t,r){if(Ie(e),void 0===t)return e;switch(r){case 0:return function(){return e.call(t)};case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}},Pe=function(e){return Object(y(e))},je=Array.isArray||function(e){return"Array"==d(e)},Fe=!!Object.getOwnPropertySymbols&&!s((function(){
// Chrome 38 Symbol has incorrect toString conversion
// eslint-disable-next-line no-undef
return!String(Symbol())})),Ue=Fe&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Ve=M("wks"),Me=a.Symbol,He=Ue?Me:Me&&Me.withoutSetter||G,ze=function(e){return A(Ve,e)||(Fe&&A(Me,e)?Ve[e]=Me[e]:Ve[e]=He("Symbol."+e)),Ve[e]},Ge=ze("species"),Ye=function(e,t){var r;return je(e)&&(
// cross-realm fallback
"function"!=typeof(r=e.constructor)||r!==Array&&!je(r.prototype)?b(r)&&null===(r=r[Ge])&&(r=void 0):r=void 0),new(void 0===r?Array:r)(0===t?0:t)},We=[].push,$e=function(e){var t=1==e,r=2==e,n=3==e,o=4==e,i=6==e,a=5==e||i;return function(s,u,c,l){for(var f,p,h=Pe(s),d=m(h),g=Be(u,c,3),y=pe(d.length),v=0,b=l||Ye,w=t?b(s,y):r?b(s,0):void 0;y>v;v++)if((a||v in d)&&(p=g(f=d[v],v,h),e))if(t)w[v]=p;// map
else if(p)switch(e){case 3:return 1;// some
case 5:return f;// find
case 6:return v;// findIndex
case 2:We.call(w,f);// filter
}else if(o)return 0;// every
return i?-1:n||o?o:w}},Je={
// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
forEach:$e(0),
// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
map:$e(1),
// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
filter:$e(2),
// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
some:$e(3),
// `Array.prototype.every` method
// https://tc39.github.io/ecma262/#sec-array.prototype.every
every:$e(4),
// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
find:$e(5),
// `Array.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
findIndex:$e(6)},Ke=se("navigator","userAgent")||"",Ze=a.process,Qe=Ze&&Ze.versions,Xe=Qe&&Qe.v8;Xe?re=(te=Xe.split("."))[0]+te[1]:Ke&&(!(te=Ke.match(/Edge\/(\d+)/))||te[1]>=74)&&(te=Ke.match(/Chrome\/(\d+)/))&&(re=te[1]);var et=re&&+re,tt=ze("species"),rt=function(e){
// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/677
return et>=51||!s((function(){var t=[];return(t.constructor={})[tt]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},nt=Object.defineProperty,ot={},it=function(e){throw e},at=function(e,t){if(A(ot,e))return ot[e];t||(t={});var r=[][e],n=A(t,"ACCESSORS")?t.ACCESSORS:0,o=A(t,0)?t[0]:it,i=A(t,1)?t[1]:void 0;return ot[e]=!!r&&!s((function(){if(n&&!u)return 1;var e={length:-1};n?nt(e,1,{enumerable:1,get:it}):e[1]=1,r.call(e,o,i)}))},st=Je.filter,ut=rt("filter"),ct=at("filter");
// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
qe({target:"Array",proto:1,forced:!ut||!ct},{filter:function(e/* , thisArg */){return st(this,e,arguments.length>1?arguments[1]:void 0)}});var lt=function(e,t){var r=[][e];return!!r&&s((function(){
// eslint-disable-next-line no-useless-call,no-throw-literal
r.call(null,t||function(){throw 1},1)}))},ft=Je.forEach,pt=lt("forEach"),ht=at("forEach"),dt=pt&&ht?[].forEach:function(e/* , thisArg */){return ft(this,e,arguments.length>1?arguments[1]:void 0)};
// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
qe({target:"Array",proto:1,forced:[].forEach!=dt},{forEach:dt});var gt=ye.indexOf,mt=[].indexOf,yt=!!mt&&1/[1].indexOf(1,-0)<0,vt=lt("indexOf"),bt=at("indexOf",{ACCESSORS:1,1:0});
// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
qe({target:"Array",proto:1,forced:yt||!vt||!bt},{indexOf:function(e/* , fromIndex = 0 */){return yt?mt.apply(this,arguments)||0:gt(this,e,arguments.length>1?arguments[1]:void 0)}});var wt=function(e,t,r){var n=w(t);n in e?O.f(e,n,p(0,r)):e[n]=r},Et=rt("splice"),At=at("splice",{ACCESSORS:1,0:0,1:2}),Tt=Math.max,xt=Math.min;
// `Array.prototype.splice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.splice
// with adding support of @@species
qe({target:"Array",proto:1,forced:!Et||!At},{splice:function(e,t/* , ...items */){var r,n,o,i,a,s,u=Pe(this),c=pe(u.length),l=ge(e,c),f=arguments.length;if(0===f?r=n=0:1===f?(r=0,n=c-l):(r=f-2,n=xt(Tt(le(t),0),c-l)),c+r-n>9007199254740991)throw TypeError("Maximum allowed length exceeded");for(o=Ye(u,n),i=0;i<n;i++)(a=l+i)in u&&wt(o,i,u[a]);if(o.length=n,r<n){for(i=l;i<c-n;i++)s=i+r,(a=i+n)in u?u[s]=u[a]:delete u[s];for(i=c;i>c-n+r;i--)delete u[i-1]}else if(r>n)for(i=c-n;i>l;i--)s=i+r-1,(a=i+n-1)in u?u[s]=u[a]:delete u[s];for(i=0;i<r;i++)u[i+l]=arguments[i+2];return u.length=c-n+r,o}});
// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
var St=Object.keys||function(e){return be(e,we)},_t=Object.assign,Nt=Object.defineProperty,Dt=!_t||s((function(){
// should have correct order of operations (Edge bug)
if(u&&1!==_t({b:1},_t(Nt({},"a",{enumerable:1,get:function(){Nt(this,"b",{value:3,enumerable:0})}}),{b:2})).b)return 1;
// should work with symbols and should have deterministic property order (V8 bug)
var e={},t={},r=Symbol();return e[r]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=_t({},e)[r]||"abcdefghijklmnopqrst"!=St(_t({},t)).join("")}))?function(e,t){for(// eslint-disable-line no-unused-vars
var r=Pe(e),n=arguments.length,o=1,i=Te.f,a=f.f;n>o;)for(var s,c=m(arguments[o++]),l=i?St(c).concat(i(c)):St(c),p=l.length,h=0;p>h;)s=l[h++],u&&!a.call(c,s)||(r[s]=c[s]);return r}:_t;
// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
qe({target:"Object",stat:1,forced:Object.assign!==Dt},{assign:Dt});var Ct=s((function(){St(1)}));
// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
qe({target:"Object",stat:1,forced:Ct},{keys:function(e){return St(Pe(e))}});
// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
var kt=function(){var e=C(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t};
// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
function Ot(e,t){return RegExp(e,t)}var Rt={UNSUPPORTED_Y:s((function(){
// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var e=Ot("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),BROKEN_CARET:s((function(){
// https://bugzilla.mozilla.org/show_bug.cgi?id=773687
var e=Ot("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},Lt=RegExp.prototype.exec,qt=String.prototype.replace,It=Lt,Bt=function(){var e=/a/,t=/b*/g;return Lt.call(e,"a"),Lt.call(t,"a"),0!==e.lastIndex||0!==t.lastIndex}(),Pt=Rt.UNSUPPORTED_Y||Rt.BROKEN_CARET,jt=void 0!==/()??/.exec("")[1];(Bt||jt||Pt)&&(It=function(e){var t,r,n,o,i=this,a=Pt&&i.sticky,s=kt.call(i),u=i.source,c=0,l=e;return a&&(-1===(s=s.replace("y","")).indexOf("g")&&(s+="g"),l=String(e).slice(i.lastIndex),
// Support anchored sticky behavior.
i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==e[i.lastIndex-1])&&(u="(?: "+u+")",l=" "+l,c++),
// ^(? + rx + ) is needed, in combination with some str slicing, to
// simulate the 'y' flag.
r=new RegExp("^(?:"+u+")",s)),jt&&(r=new RegExp("^"+u+"$(?!\\s)",s)),Bt&&(t=i.lastIndex),n=Lt.call(a?r:i,l),a?n?(n.input=n.input.slice(c),n[0]=n[0].slice(c),n.index=i.lastIndex,i.lastIndex+=n[0].length):i.lastIndex=0:Bt&&n&&(i.lastIndex=i.global?n.index+n[0].length:t),jt&&n&&n.length>1&&
// Fix browsers whose `exec` methods don't consistently return `undefined`
// for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
qt.call(n[0],r,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(n[o]=void 0)})),n});var Ft=It;qe({target:"RegExp",proto:1,forced:/./.exec!==Ft},{exec:Ft});
// TODO: Remove from `core-js@4` since it's moved to entry points
var Ut=ze("species"),Vt=!s((function(){
// #replace needs built-in support for named groups.
// #match works fine because it just return the exec results, even if it has
// a "grops" property.
var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),Mt="$0"==="a".replace(/./,"$0"),Ht=ze("replace"),zt=/./[Ht]?""===/./[Ht]("a","$0"):0,Gt=!s((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var r="ab".split(e);return 2!==r.length||"a"!==r[0]||"b"!==r[1]})),Yt=function(e,t,r,n){var o=ze(e),i=!s((function(){
// String methods call symbol-named RegEp methods
var t={};return t[o]=function(){return 7},7!=""[e](t)})),a=i&&!s((function(){
// Symbol-named RegExp methods call .exec
var t=0,r=/a/;return"split"===e&&(
// We can't use real regex here since it causes deoptimization
// and serious performance degradation in V8
// https://github.com/zloirock/core-js/issues/306
// RegExp[@@split] doesn't call the regex's exec method, but first creates
// a new one. We need to return the patched regex when creating the new one.
(r={}).constructor={},r.constructor[Ut]=function(){return r},r.flags="",r[o]=/./[o]),r.exec=function(){return t=1,null},r[o](""),!t}));if(!i||!a||"replace"===e&&(!Vt||!Mt||zt)||"split"===e&&!Gt){var u=/./[o],c=r(o,""[e],(function(e,t,r,n,o){return t.exec===Ft?i&&!o?{done:1,value:u.call(t,r,n)}:{done:1,value:e.call(r,t,n)}:{done:0}}),{REPLACE_KEEPS_$0:Mt,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:zt}),l=c[0],f=c[1];oe(String.prototype,e,l),oe(RegExp.prototype,o,2==t?function(e,t){return f.call(e,this,t)}
// 21.2.5.6 RegExp.prototype[@@match](string)
// 21.2.5.9 RegExp.prototype[@@search](string)
:function(e){return f.call(e,this)})}n&&R(RegExp.prototype[o],"sham",1)},Wt=Object.is||function(e,t){
// eslint-disable-next-line no-self-compare
return e===t?0!==e||1/e==1/t:e!=e&&t!=t},$t=function(e,t){var r=e.exec;if("function"==typeof r){var n=r.call(e,t);if("object"!=typeof n)throw TypeError("RegExp exec method returned something other than an Object or null");return n}if("RegExp"!==d(e))throw TypeError("RegExp#exec called on incompatible receiver");return Ft.call(e,t)};
// @@search logic
Yt("search",1,(function(e,t,r){return[
// `String.prototype.search` method
// https://tc39.github.io/ecma262/#sec-string.prototype.search
function(t){var r=y(this),n=null==t?void 0:t[e];return void 0!==n?n.call(t,r):new RegExp(t)[e](String(r))},
// `RegExp.prototype[@@search]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
function(e){var n=r(t,e,this);if(n.done)return n.value;var o=C(e),i=String(this),a=o.lastIndex;Wt(a,0)||(o.lastIndex=0);var s=$t(o,i);return Wt(o.lastIndex,a)||(o.lastIndex=a),null===s?-1:s.index}]}));
// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
var Jt={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0};for(var Kt in Jt){var Zt=a[Kt],Qt=Zt&&Zt.prototype;
// some Chrome versions have non-configurable methods on DOMTokenList
if(Qt&&Qt.forEach!==dt)try{R(Qt,"forEach",dt)}catch(e){Qt.forEach=dt}}var Xt=ze("isConcatSpreadable"),er=et>=51||!s((function(){var e=[];return e[Xt]=0,e.concat()[0]!==e})),tr=rt("concat"),rr=function(e){if(!b(e))return 0;var t=e[Xt];return void 0!==t?!!t:je(e)};
// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
qe({target:"Array",proto:1,forced:!er||!tr},{concat:function(e){// eslint-disable-line no-unused-vars
var t,r,n,o,i,a=Pe(this),s=Ye(a,0),u=0;for(t=-1,n=arguments.length;t<n;t++)if(rr(i=-1===t?a:arguments[t])){if(u+(o=pe(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(r=0;r<o;r++,u++)r in i&&wt(s,u,i[r])}else{if(u>=9007199254740991)throw TypeError("Maximum allowed index exceeded");wt(s,u++,i)}return s.length=u,s}});var nr=void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};
// based off https://github.com/defunctzombie/node-process/blob/master/browser.js
function or(){throw new Error("setTimeout has not been defined")}function ir(){throw new Error("clearTimeout has not been defined")}var ar=or,sr=ir;function ur(e){if(ar===setTimeout)
//normal enviroments in sane situations
return setTimeout(e,0);// if setTimeout wasn't available but was latter defined
if((ar===or||!ar)&&setTimeout)return ar=setTimeout,setTimeout(e,0);try{
// when when somebody has screwed with setTimeout but no I.E. maddness
return ar(e,0)}catch(t){try{
// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return ar.call(null,e,0)}catch(t){
// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return ar.call(this,e,0)}}}"function"==typeof nr.setTimeout&&(ar=setTimeout),"function"==typeof nr.clearTimeout&&(sr=clearTimeout);var cr,lr=[],fr=0,pr=-1;function hr(){fr&&cr&&(fr=0,cr.length?lr=cr.concat(lr):pr=-1,lr.length&&dr())}function dr(){if(!fr){var e=ur(hr);fr=1;for(var t=lr.length;t;){for(cr=lr,lr=[];++pr<t;)cr&&cr[pr].run();pr=-1,t=lr.length}cr=null,fr=0,function(e){if(sr===clearTimeout)
//normal enviroments in sane situations
return clearTimeout(e);// if clearTimeout wasn't available but was latter defined
if((sr===ir||!sr)&&clearTimeout)return sr=clearTimeout,clearTimeout(e);try{
// when when somebody has screwed with setTimeout but no I.E. maddness
sr(e)}catch(t){try{
// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return sr.call(null,e)}catch(t){
// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return sr.call(this,e)}}}(e)}}function gr(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];lr.push(new mr(e,t)),1!==lr.length||fr||ur(dr)}// v8 likes predictible objects
function mr(e,t){this.fun=e,this.array=t}function yr(){}mr.prototype.run=function(){this.fun.apply(null,this.array)};var vr=yr,br=yr,wr=yr,Er=yr,Ar=yr,Tr=yr,xr=yr,Sr=nr.performance||{},_r=Sr.now||Sr.mozNow||Sr.msNow||Sr.oNow||Sr.webkitNow||function(){return(new Date).getTime()},Nr=new Date,Dr={nextTick:gr,title:"browser",browser:1,env:{},argv:[],version:"",versions:{},on:vr,addListener:br,once:wr,off:Er,removeListener:Ar,removeAllListeners:Tr,emit:xr,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0}// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js
,hrtime:// generate timestamp or delta
// see http://nodejs.org/api/process.html#process_process_hrtime
function(e){var t=.001*_r.call(Sr),r=Math.floor(t),n=Math.floor(t%1*1e9);return e&&(r-=e[0],(n-=e[1])<0&&(r--,n+=1e9)),[r,n]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-Nr)/1e3}},Cr={};Cr[ze("toStringTag")]="z";var kr="[object z]"===String(Cr),Or=ze("toStringTag"),Rr="Arguments"==d(function(){return arguments}()),Lr=kr?d:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){/* empty */}}(t=Object(e),Or))?r:Rr?d(t):"Object"==(n=d(t))&&"function"==typeof t.callee?"Arguments":n},qr=kr?{}.toString:function(){return"[object "+Lr(this)+"]"};
// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
kr||oe(Object.prototype,"toString",qr,{unsafe:1});var Ir=RegExp.prototype,Br=Ir.toString,Pr=s((function(){return"/a/b"!=Br.call({source:"a",flags:"b"})})),jr="toString"!=Br.name;
// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
(Pr||jr)&&oe(RegExp.prototype,"toString",(function(){var e=C(this),t=String(e.source),r=e.flags;return"/"+t+"/"+String(void 0===r&&e instanceof RegExp&&!("flags"in Ir)?kt.call(e):r)}),{unsafe:1});var Fr=O.f,Ur=Function.prototype,Vr=Ur.toString,Mr=/^\s*function ([^ (]*)/;
// Function instances `.name` property
// https://tc39.github.io/ecma262/#sec-function-instances-name
u&&!("name"in Ur)&&Fr(Ur,"name",{configurable:1,get:function(){try{return Vr.call(this).match(Mr)[1]}catch(e){return""}}});var Hr=!s((function(){function e(){/* empty */}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),zr=W("IE_PROTO"),Gr=Object.prototype,Yr=Hr?Object.getPrototypeOf:function(e){return e=Pe(e),A(e,zr)?e[zr]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?Gr:null},Wr=s((function(){Yr(1)}));// This constructor is used to store event handlers. Instantiating this is
// faster than explicitly calling `Object.create(null)` to get a "clean" empty
// object (tested with v8 v4.9).
function $r(){}function Jr(){Jr.init.call(this)}
// require('events') === require('events').EventEmitter
function Kr(e){return void 0===e._maxListeners?Jr.defaultMaxListeners:e._maxListeners}// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function Zr(e,t,r){if(t)e.call(r);else for(var n=e.length,o=an(e,n),i=0;i<n;++i)o[i].call(r)}function Qr(e,t,r,n){if(t)e.call(r,n);else for(var o=e.length,i=an(e,o),a=0;a<o;++a)i[a].call(r,n)}function Xr(e,t,r,n,o){if(t)e.call(r,n,o);else for(var i=e.length,a=an(e,i),s=0;s<i;++s)a[s].call(r,n,o)}function en(e,t,r,n,o,i){if(t)e.call(r,n,o,i);else for(var a=e.length,s=an(e,a),u=0;u<a;++u)s[u].call(r,n,o,i)}function tn(e,t,r,n){if(t)e.apply(r,n);else for(var o=e.length,i=an(e,o),a=0;a<o;++a)i[a].apply(r,n)}function rn(e,t,r,n){var o,i,a,s;if("function"!=typeof r)throw new TypeError('"listener" argument must be a function');if((i=e._events)?(
// To avoid recursion in the case that type === "newListener"! Before
// adding it to the listeners, first emit "newListener".
i.newListener&&(e.emit("newListener",t,r.listener?r.listener:r),// Re-assign `events` because a newListener handler could have caused the
// this._events to be assigned to a new object
i=e._events),a=i[t]):(i=e._events=new $r,e._eventsCount=0),a){// Check for listener leak
if("function"==typeof a?
// Adding the second element, need to change to array.
a=i[t]=n?[r,a]:[a,r]:
// If we've already got an array, just append.
n?a.unshift(r):a.push(r),!a.warned&&(o=Kr(e))&&o>0&&a.length>o){a.warned=1;var u=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+t+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=a.length,s=u,"function"==typeof console.warn?console.warn(s):console.log(s)}}else
// Optimize the case of one listener. Don't need the extra array object.
a=i[t]=r,++e._eventsCount;return e}function nn(e,t,r){var n=0;function o(){e.removeListener(t,o),n||(n=1,r.apply(e,arguments))}return o.listener=r,o}function on(e){var t=this._events;if(t){var r=t[e];if("function"==typeof r)return 1;if(r)return r.length}return 0}function an(e,t){for(var r=new Array(t);t--;)r[t]=e[t];return r}
// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
qe({target:"Object",stat:1,forced:Wr,sham:!Hr},{getPrototypeOf:function(e){return Yr(Pe(e))}}),
// `Reflect.ownKeys` method
// https://tc39.github.io/ecma262/#sec-reflect.ownkeys
qe({target:"Reflect",stat:1},{ownKeys:xe}),$r.prototype=Object.create(null),Jr.EventEmitter=Jr,Jr.usingDomains=0,Jr.prototype.domain=void 0,Jr.prototype._events=void 0,Jr.prototype._maxListeners=void 0,// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
Jr.defaultMaxListeners=10,Jr.init=function(){this.domain=null,Jr.usingDomains&&(void 0).active,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new $r,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
Jr.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=e,this},Jr.prototype.getMaxListeners=function(){return Kr(this)},Jr.prototype.emit=function(e){var t,r,n,o,i,a,s,u="error"===e;if(a=this._events)u=u&&null==a.error;else if(!u)return 0;// If there is no 'error' event listener then throw.
if(s=this.domain,u){if(t=arguments[1],!s){if(t instanceof Error)throw t;// Unhandled 'error' event
// At least give some kind of context to the user
var c=new Error('Uncaught, unspecified "error" event. ('+t+")");throw c.context=t,c}return t||(t=new Error('Uncaught, unspecified "error" event')),t.domainEmitter=this,t.domain=s,t.domainThrown=0,s.emit("error",t),0}if(!(r=a[e]))return 0;var l="function"==typeof r;switch(n=arguments.length){
// fast cases
case 1:Zr(r,l,this);break;case 2:Qr(r,l,this,arguments[1]);break;case 3:Xr(r,l,this,arguments[1],arguments[2]);break;case 4:en(r,l,this,arguments[1],arguments[2],arguments[3]);break;
// slower
default:for(o=new Array(n-1),i=1;i<n;i++)o[i-1]=arguments[i];tn(r,l,this,o)}return 1},Jr.prototype.addListener=function(e,t){return rn(this,e,t,0)},Jr.prototype.on=Jr.prototype.addListener,Jr.prototype.prependListener=function(e,t){return rn(this,e,t,1)},Jr.prototype.once=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.on(e,nn(this,e,t)),this},Jr.prototype.prependOnceListener=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.prependListener(e,nn(this,e,t)),this},// emits a 'removeListener' event iff the listener was removed
Jr.prototype.removeListener=function(e,t){var r,n,o,i,a;if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');if(!(n=this._events))return this;if(!(r=n[e]))return this;if(r===t||r.listener&&r.listener===t)0==--this._eventsCount?this._events=new $r:(delete n[e],n.removeListener&&this.emit("removeListener",e,r.listener||t));else if("function"!=typeof r){for(o=-1,i=r.length;i-- >0;)if(r[i]===t||r[i].listener&&r[i].listener===t){a=r[i].listener,o=i;break}if(o<0)return this;if(1===r.length){if(r[0]=void 0,0==--this._eventsCount)return this._events=new $r,this;delete n[e]}else!// About 1.5x faster than the two-arg version of Array#splice().
function(e,t){for(var r=t,n=r+1,o=e.length;n<o;r+=1,n+=1)e[r]=e[n];e.pop()}(r,o);n.removeListener&&this.emit("removeListener",e,a||t)}return this},Jr.prototype.removeAllListeners=function(e){var t,r;if(!(r=this._events))return this;// not listening for removeListener, no need to emit
if(!r.removeListener)return 0===arguments.length?(this._events=new $r,this._eventsCount=0):r[e]&&(0==--this._eventsCount?this._events=new $r:delete r[e]),this;// emit removeListener for all listeners on all events
if(0===arguments.length){for(var n,o=Object.keys(r),i=0;i<o.length;++i)"removeListener"!==(n=o[i])&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=new $r,this._eventsCount=0,this}if("function"==typeof(t=r[e]))this.removeListener(e,t);else if(t)
// LIFO order
do{this.removeListener(e,t[t.length-1])}while(t[0]);return this},Jr.prototype.listeners=function(e){var t,r=this._events;return r&&(t=r[e])?"function"==typeof t?[t.listener||t]:function(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}(t):[]},Jr.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):on.call(e,t)},Jr.prototype.listenerCount=on,Jr.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};var sn=[].join,un=m!=Object,cn=lt("join",",");
// `Array.prototype.join` method
// https://tc39.github.io/ecma262/#sec-array.prototype.join
qe({target:"Array",proto:1,forced:un||!cn},{join:function(e){return sn.call(v(this),void 0===e?",":e)}});var ln=Je.map,fn=rt("map"),pn=at("map");
// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
qe({target:"Array",proto:1,forced:!fn||!pn},{map:function(e/* , thisArg */){return ln(this,e,arguments.length>1?arguments[1]:void 0)}});
// `Array.prototype.{ reduce, reduceRight }` methods implementation
var hn=function(e){return function(t,r,n,o){Ie(r);var i=Pe(t),a=m(i),s=pe(i.length),u=e?s-1:0,c=e?-1:1;if(n<2)for(;;){if(u in a){o=a[u],u+=c;break}if(u+=c,e?u<0:s<=u)throw TypeError("Reduce of empty array with no initial value")}for(;e?u>=0:s>u;u+=c)u in a&&(o=r(o,a[u],u,i));return o}},dn={
// `Array.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduce
left:hn(0),
// `Array.prototype.reduceRight` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduceright
right:hn(1)},gn=dn.left,mn=lt("reduce"),yn=at("reduce",{1:0});
// `Array.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduce
qe({target:"Array",proto:1,forced:!mn||!yn},{reduce:function(e/* , initialValue */){return gn(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}});var vn,bn=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=0,r={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(r,[]),t=r instanceof Array}catch(e){/* empty */}return function(r,n){return C(r),function(e){if(!b(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype")}(n),t?e.call(r,n):r.__proto__=n,r}}():void 0),wn=function(e,t,r){var n,o;
// it can work only with native `setPrototypeOf`
return bn&&
// we haven't completely correct pre-ES6 way for getting `new.target`, so use this
"function"==typeof(n=t.constructor)&&n!==r&&b(o=n.prototype)&&o!==r.prototype&&bn(e,o),e},En=u?Object.defineProperties:function(e,t){C(e);for(var r,n=St(t),o=n.length,i=0;o>i;)O.f(e,r=n[i++],t[r]);return e},An=se("document","documentElement"),Tn=W("IE_PROTO"),xn=function(){/* empty */},Sn=function(e){return"<script>"+e+"<\/script>"},_n=function(){try{
/* global ActiveXObject */
vn=document.domain&&new ActiveXObject("htmlfile")}catch(e){/* ignore */}var e,t;_n=vn?function(e){e.write(Sn("")),e.close();var t=e.parentWindow.Object;// avoid memory leak
return e=null,t}(vn):((t=S("iframe")).style.display="none",An.appendChild(t),
// https://github.com/zloirock/core-js/issues/475
t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(Sn("document.F=Object")),e.close(),e.F);for(var r=we.length;r--;)delete _n.prototype[we[r]];return _n()};
// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */$[Tn]=1;
// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
var Nn=Object.create||function(e,t){var r;return null!==e?(xn.prototype=C(e),r=new xn,xn.prototype=null,
// add "__proto__" for Object.getPrototypeOf polyfill
r[Tn]=e):r=_n(),void 0===t?r:En(r,t)},Dn="\t\n\v\f\r                　\u2028\u2029\ufeff",Cn="["+Dn+"]",kn=RegExp("^"+Cn+Cn+"*"),On=RegExp(Cn+Cn+"*$"),Rn=function(e){return function(t){var r=String(y(t));return 1&e&&(r=r.replace(kn,"")),2&e&&(r=r.replace(On,"")),r}},Ln={
// `String.prototype.{ trimLeft, trimStart }` methods
// https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
start:Rn(1),
// `String.prototype.{ trimRight, trimEnd }` methods
// https://tc39.github.io/ecma262/#sec-string.prototype.trimend
end:Rn(2),
// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
trim:Rn(3)},qn=Ae.f,In=D.f,Bn=O.f,Pn=Ln.trim,jn=a.Number,Fn=jn.prototype,Un="Number"==d(Nn(Fn)),Vn=function(e){var t,r,n,o,i,a,s,u,c=w(e,0);if("string"==typeof c&&c.length>2)if(43===(t=(c=Pn(c)).charCodeAt(0))||45===t){if(88===(r=c.charCodeAt(2))||120===r)return NaN;// Number('+0x1') should be NaN, old V8 fix
}else if(48===t){switch(c.charCodeAt(1)){case 66:case 98:n=2,o=49;break;// fast equal of /^0b[01]+$/i
case 79:case 111:n=8,o=55;break;// fast equal of /^0o[0-7]+$/i
default:return+c}for(a=(i=c.slice(2)).length,s=0;s<a;s++)
// parseInt parses a string to a first unavailable symbol
// but ToNumber should return NaN if a string contains unavailable symbols
if((u=i.charCodeAt(s))<48||u>o)return NaN;return parseInt(i,n)}return+c};
// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
// `Number` constructor
// https://tc39.github.io/ecma262/#sec-number-constructor
if(Re("Number",!jn(" 0o1")||!jn("0b1")||jn("+0x1"))){for(var Mn,Hn=function(e){var t=arguments.length<1?0:e,r=this;return r instanceof Hn&&(Un?s((function(){Fn.valueOf.call(r)})):"Number"!=d(r))?wn(new jn(Vn(t)),r,Hn):Vn(t)},zn=u?qn(jn):
// ES3:
"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),Gn=0;zn.length>Gn;Gn++)A(jn,Mn=zn[Gn])&&!A(Hn,Mn)&&Bn(Hn,Mn,In(jn,Mn));Hn.prototype=Fn,Fn.constructor=Hn,oe(a,"Number",Hn)}var Yn=D.f,Wn=s((function(){Yn(1)}));
// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
qe({target:"Object",stat:1,forced:!u||Wn,sham:!u},{getOwnPropertyDescriptor:function(e,t){return Yn(v(e),t)}});var $n=Ae.f,Jn={}.toString,Kn="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],Zn={f:function(e){return Kn&&"[object Window]"==Jn.call(e)?function(e){try{return $n(e)}catch(e){return Kn.slice()}}(e):$n(v(e))}},Qn=Zn.f,Xn=s((function(){return!Object.getOwnPropertyNames(1)}));
// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
qe({target:"Object",stat:1,forced:Xn},{getOwnPropertyNames:Qn});var eo=ze("match"),to=function(e){var t;return b(e)&&(void 0!==(t=e[eo])?!!t:"RegExp"==d(e))},ro=ze("species"),no=function(e){var t=se(e),r=O.f;u&&t&&!t[ro]&&r(t,ro,{configurable:1,get:function(){return this}})},oo=O.f,io=Ae.f,ao=ne.set,so=ze("match"),uo=a.RegExp,co=uo.prototype,lo=/a/g,fo=/a/g,po=new uo(lo)!==lo,ho=Rt.UNSUPPORTED_Y;
// `IsRegExp` abstract operation
// https://tc39.github.io/ecma262/#sec-isregexp
// `RegExp` constructor
// https://tc39.github.io/ecma262/#sec-regexp-constructor
if(u&&Re("RegExp",!po||ho||s((function(){
// RegExp constructor can alter flags and IsRegExp works correct with @@match
return fo[so]=0,uo(lo)!=lo||uo(fo)==fo||"/a/i"!=uo(lo,"i")})))){for(var go=function(e,t){var r,n=this instanceof go,o=to(e),i=void 0===t;if(!n&&o&&e.constructor===go&&i)return e;po?o&&!i&&(e=e.source):e instanceof go&&(i&&(t=kt.call(e)),e=e.source),ho&&(r=!!t&&t.indexOf("y")>-1)&&(t=t.replace(/y/g,""));var a=wn(po?new uo(e,t):uo(e,t),n?this:co,go);return ho&&r&&ao(a,{sticky:r}),a},mo=function(e){e in go||oo(go,e,{configurable:1,get:function(){return uo[e]},set:function(t){uo[e]=t}})},yo=io(uo),vo=0;yo.length>vo;)mo(yo[vo++]);co.constructor=go,go.prototype=co,oe(a,"RegExp",go)}
// https://tc39.github.io/ecma262/#sec-get-regexp-@@species
no("RegExp");
// `String.prototype.{ codePointAt, at }` methods implementation
var bo=function(e){return function(t,r){var n,o,i=String(y(t)),a=le(r),s=i.length;return a<0||a>=s?e?"":void 0:(n=i.charCodeAt(a))<55296||n>56319||a+1===s||(o=i.charCodeAt(a+1))<56320||o>57343?e?i.charAt(a):n:e?i.slice(a,a+2):o-56320+(n-55296<<10)+65536}},wo={
// `String.prototype.codePointAt` method
// https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
codeAt:bo(0),
// `String.prototype.at` method
// https://github.com/mathiasbynens/String.prototype.at
charAt:bo(1)},Eo=wo.charAt,Ao=function(e,t,r){return t+(r?Eo(e,t).length:1)};
// @@match logic
Yt("match",1,(function(e,t,r){return[
// `String.prototype.match` method
// https://tc39.github.io/ecma262/#sec-string.prototype.match
function(t){var r=y(this),n=null==t?void 0:t[e];return void 0!==n?n.call(t,r):new RegExp(t)[e](String(r))},
// `RegExp.prototype[@@match]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
function(e){var n=r(t,e,this);if(n.done)return n.value;var o=C(e),i=String(this);if(!o.global)return $t(o,i);var a=o.unicode;o.lastIndex=0;for(var s,u=[],c=0;null!==(s=$t(o,i));){var l=String(s[0]);u[c]=l,""===l&&(o.lastIndex=Ao(i,pe(o.lastIndex),a)),c++}return 0===c?null:u}]}));var To=Math.max,xo=Math.min,So=Math.floor,_o=/\$([$&'`]|\d\d?|<[^>]*>)/g,No=/\$([$&'`]|\d\d?)/g,Do=function(e){return void 0===e?e:String(e)};
// @@replace logic
Yt("replace",2,(function(e,t,r,n){var o=n.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,i=n.REPLACE_KEEPS_$0,a=o?"$":"$0";return[
// `String.prototype.replace` method
// https://tc39.github.io/ecma262/#sec-string.prototype.replace
function(r,n){var o=y(this),i=null==r?void 0:r[e];return void 0!==i?i.call(r,o,n):t.call(String(o),r,n)},
// `RegExp.prototype[@@replace]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
function(e,n){if(!o&&i||"string"==typeof n&&-1===n.indexOf(a)){var u=r(t,e,this,n);if(u.done)return u.value}var c=C(e),l=String(this),f="function"==typeof n;f||(n=String(n));var p=c.global;if(p){var h=c.unicode;c.lastIndex=0}for(var d=[];;){var g=$t(c,l);if(null===g)break;if(d.push(g),!p)break;""===String(g[0])&&(c.lastIndex=Ao(l,pe(c.lastIndex),h))}for(var m="",y=0,v=0;v<d.length;v++){g=d[v];
// NOTE: This is equivalent to
//   captures = result.slice(1).map(maybeToString)
// but for some reason `nativeSlice.call(result, 1, result.length)` (called in
// the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
// causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
for(var b=String(g[0]),w=To(xo(le(g.index),l.length),0),E=[],A=1;A<g.length;A++)E.push(Do(g[A]));var T=g.groups;if(f){var x=[b].concat(E,w,l);void 0!==T&&x.push(T);var S=String(n.apply(void 0,x))}else S=s(b,l,w,E,T,n);w>=y&&(m+=l.slice(y,w)+S,y=w+b.length)}return m+l.slice(y)}];
// https://tc39.github.io/ecma262/#sec-getsubstitution
function s(e,r,n,o,i,a){var s=n+e.length,u=o.length,c=No;return void 0!==i&&(i=Pe(i),c=_o),t.call(a,c,(function(t,a){var c;switch(a.charAt(0)){case"$":return"$";case"&":return e;case"`":return r.slice(0,n);case"'":return r.slice(s);case"<":c=i[a.slice(1,-1)];break;default:// \d\d?
var l=+a;if(0===l)return t;if(l>u){var f=So(l/10);return 0===f?t:f<=u?void 0===o[f-1]?a.charAt(1):o[f-1]+a.charAt(1):t}c=o[l-1]}return void 0===c?"":c}))}}));var Co=ze("species"),ko=function(e,t){var r,n=C(e).constructor;return void 0===n||null==(r=C(n)[Co])?t:Ie(r)},Oo=[].push,Ro=Math.min,Lo=!s((function(){return!RegExp(4294967295,"y")}));
// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
function qo(e){return(qo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}
// @@split logic
Yt("split",2,(function(e,t,r){var n;
// based on es5-shim implementation, need to rework it
return n="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,r){var n=String(y(this)),o=void 0===r?4294967295:r>>>0;if(0===o)return[];if(void 0===e)return[n];
// If `separator` is not a regex, use native split
if(!to(e))return t.call(n,e,o);for(var i,a,s,u=[],c=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),l=0,f=new RegExp(e.source,c+"g");(i=Ft.call(f,n))&&!((a=f.lastIndex)>l&&(u.push(n.slice(l,i.index)),i.length>1&&i.index<n.length&&Oo.apply(u,i.slice(1)),s=i[0].length,l=a,u.length>=o));)f.lastIndex===i.index&&f.lastIndex++;// Avoid an infinite loop
return l===n.length?!s&&f.test("")||u.push(""):u.push(n.slice(l)),u.length>o?u.slice(0,o):u}:"0".split(void 0,0).length?function(e,r){return void 0===e&&0===r?[]:t.call(this,e,r)}:t,[
// `String.prototype.split` method
// https://tc39.github.io/ecma262/#sec-string.prototype.split
function(t,r){var o=y(this),i=null==t?void 0:t[e];return void 0!==i?i.call(t,o,r):n.call(String(o),t,r)},
// `RegExp.prototype[@@split]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
// NOTE: This cannot be properly polyfilled in engines that don't support
// the 'y' flag.
function(e,o){var i=r(n,e,this,o,n!==t);if(i.done)return i.value;var a=C(e),s=String(this),u=ko(a,RegExp),c=a.unicode,l=(a.ignoreCase?"i":"")+(a.multiline?"m":"")+(a.unicode?"u":"")+(Lo?"y":"g"),f=new u(Lo?a:"^(?:"+a.source+")",l),p=void 0===o?4294967295:o>>>0;if(0===p)return[];if(0===s.length)return null===$t(f,s)?[s]:[];for(var h=0,d=0,g=[];d<s.length;){f.lastIndex=Lo?d:0;var m,y=$t(f,Lo?s:s.slice(d));if(null===y||(m=Ro(pe(f.lastIndex+(Lo?0:d)),s.length))===h)d=Ao(s,d,c);else{if(g.push(s.slice(h,d)),g.length===p)return g;for(var v=1;v<=y.length-1;v++)if(g.push(y[v]),g.length===p)return g;d=h=m}}return g.push(s.slice(h)),g}]}),!Lo);var Io={f:ze},Bo=O.f,Po=function(e){var t=ie.Symbol||(ie.Symbol={});A(t,e)||Bo(t,e,{value:Io.f(e)})},jo=O.f,Fo=ze("toStringTag"),Uo=function(e,t,r){e&&!A(e=r?e:e.prototype,Fo)&&jo(e,Fo,{configurable:1,value:t})},Vo=Je.forEach,Mo=W("hidden"),Ho=ze("toPrimitive"),zo=ne.set,Go=ne.getterFor("Symbol"),Yo=Object.prototype,Wo=a.Symbol,$o=se("JSON","stringify"),Jo=D.f,Ko=O.f,Zo=Zn.f,Qo=f.f,Xo=M("symbols"),ei=M("op-symbols"),ti=M("string-to-symbol-registry"),ri=M("symbol-to-string-registry"),ni=M("wks"),oi=a.QObject,ii=!oi||!oi.prototype||!oi.prototype.findChild,ai=u&&s((function(){return 7!=Nn(Ko({},"a",{get:function(){return Ko(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=Jo(Yo,t);n&&delete Yo[t],Ko(e,t,r),n&&e!==Yo&&Ko(Yo,t,n)}:Ko,si=function(e,t){var r=Xo[e]=Nn(Wo.prototype);return zo(r,{type:"Symbol",tag:e,description:t}),u||(r.description=t),r},ui=Ue?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof Wo},ci=function(e,t,r){e===Yo&&ci(ei,t,r),C(e);var n=w(t,1);return C(r),A(Xo,n)?(r.enumerable?(A(e,Mo)&&e[Mo][n]&&(e[Mo][n]=0),r=Nn(r,{enumerable:p(0,0)})):(A(e,Mo)||Ko(e,Mo,p(1,{})),e[Mo][n]=1),ai(e,n,r)):Ko(e,n,r)},li=function(e,t){C(e);var r=v(t),n=St(r).concat(di(r));return Vo(n,(function(t){u&&!fi.call(r,t)||ci(e,t,r[t])})),e},fi=function(e){var t=w(e,1),r=Qo.call(this,t);return this===Yo&&A(Xo,t)&&!A(ei,t)?0:r||!A(this,t)||!A(Xo,t)||A(this,Mo)&&this[Mo][t]?r:1},pi=function(e,t){var r=v(e),n=w(t,1);if(r!==Yo||!A(Xo,n)||A(ei,n)){var o=Jo(r,n);return!o||!A(Xo,n)||A(r,Mo)&&r[Mo][n]||(o.enumerable=1),o}},hi=function(e){var t=Zo(v(e)),r=[];return Vo(t,(function(e){A(Xo,e)||A($,e)||r.push(e)})),r},di=function(e){var t=e===Yo,r=Zo(t?ei:v(e)),n=[];return Vo(r,(function(e){!A(Xo,e)||t&&!A(Yo,e)||n.push(Xo[e])})),n};
// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if(
// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
Fe||(oe((Wo=function(){if(this instanceof Wo)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=G(e),r=function(e){this===Yo&&r.call(ei,e),A(this,Mo)&&A(this[Mo],t)&&(this[Mo][t]=0),ai(this,t,p(1,e))};return u&&ii&&ai(Yo,t,{configurable:1,set:r}),si(t,e)}).prototype,"toString",(function(){return Go(this).tag})),oe(Wo,"withoutSetter",(function(e){return si(G(e),e)})),f.f=fi,O.f=ci,D.f=pi,Ae.f=Zn.f=hi,Te.f=di,Io.f=function(e){return si(ze(e),e)},u&&(
// https://github.com/tc39/proposal-Symbol-description
Ko(Wo.prototype,"description",{configurable:1,get:function(){return Go(this).description}}),oe(Yo,"propertyIsEnumerable",fi,{unsafe:1}))),qe({global:1,wrap:1,forced:!Fe,sham:!Fe},{Symbol:Wo}),Vo(St(ni),(function(e){Po(e)})),qe({target:"Symbol",stat:1,forced:!Fe},{
// `Symbol.for` method
// https://tc39.github.io/ecma262/#sec-symbol.for
for:function(e){var t=String(e);if(A(ti,t))return ti[t];var r=Wo(t);return ti[t]=r,ri[r]=t,r},
// `Symbol.keyFor` method
// https://tc39.github.io/ecma262/#sec-symbol.keyfor
keyFor:function(e){if(!ui(e))throw TypeError(e+" is not a symbol");if(A(ri,e))return ri[e]},useSetter:function(){ii=1},useSimple:function(){ii=0}}),qe({target:"Object",stat:1,forced:!Fe,sham:!u},{
// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
create:function(e,t){return void 0===t?Nn(e):li(Nn(e),t)},
// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
defineProperty:ci,
// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
defineProperties:li,
// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
getOwnPropertyDescriptor:pi}),qe({target:"Object",stat:1,forced:!Fe},{
// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
getOwnPropertyNames:hi,
// `Object.getOwnPropertySymbols` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
getOwnPropertySymbols:di}),
// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
qe({target:"Object",stat:1,forced:s((function(){Te.f(1)}))},{getOwnPropertySymbols:function(e){return Te.f(Pe(e))}}),$o){var gi=!Fe||s((function(){var e=Wo();
// MS Edge converts symbol values to JSON as {}
return"[null]"!=$o([e])||"{}"!=$o({a:e})||"{}"!=$o(Object(e))}));qe({target:"JSON",stat:1,forced:gi},{
// eslint-disable-next-line no-unused-vars
stringify:function(e,t,r){for(var n,o=[e],i=1;arguments.length>i;)o.push(arguments[i++]);if(n=t,(b(t)||void 0!==e)&&!ui(e))// IE8 returns string on undefined
return je(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!ui(t))return t}),o[1]=t,$o.apply(null,o)}})}
// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
Wo.prototype[Ho]||R(Wo.prototype,Ho,Wo.prototype.valueOf),
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
Uo(Wo,"Symbol"),$[Mo]=1;var mi=O.f,yi=a.Symbol;if(u&&"function"==typeof yi&&(!("description"in yi.prototype)||
// Safari 12 bug
void 0!==yi().description)){var vi={},bi=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof bi?new yi(e):void 0===e?yi():yi(e);return""===e&&(vi[t]=1),t};
// wrap Symbol constructor for correct work with undefined description
Se(bi,yi);var wi=bi.prototype=yi.prototype;wi.constructor=bi;var Ei=wi.toString,Ai="Symbol(test)"==String(yi("test")),Ti=/^Symbol\((.*)\)[^)]+$/;mi(wi,"description",{configurable:1,get:function(){var e=b(this)?this.valueOf():this,t=Ei.call(e);if(A(vi,e))return"";var r=Ai?t.slice(7,-1):t.replace(Ti,"$1");return""===r?void 0:r}}),qe({global:1,forced:1},{Symbol:bi})}
// `Symbol.species` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.species
Po("species");
// `Array.prototype.fill` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
var xi=function(e/* , start = 0, end = @length */){for(var t=Pe(this),r=pe(t.length),n=arguments.length,o=ge(n>1?arguments[1]:void 0,r),i=n>2?arguments[2]:void 0,a=void 0===i?r:ge(i,r);a>o;)t[o++]=e;return t},Si=ze("unscopables"),_i=Array.prototype;
// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
null==_i[Si]&&O.f(_i,Si,{configurable:1,value:Nn(null)});
// add a key to Array.prototype[@@unscopables]
var Ni=function(e){_i[Si][e]=1};
// `Array.prototype.fill` method
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
qe({target:"Array",proto:1},{fill:xi}),
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
Ni("fill");var Di=ye.includes,Ci=at("indexOf",{ACCESSORS:1,1:0});
// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
qe({target:"Array",proto:1,forced:!Ci},{includes:function(e/* , fromIndex = 0 */){return Di(this,e,arguments.length>1?arguments[1]:void 0)}}),
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
Ni("includes");var ki,Oi,Ri,Li={},qi=ze("iterator"),Ii=0;[].keys&&(
// Safari 8 has buggy iterators w/o `next`
"next"in(Ri=[].keys())?(Oi=Yr(Yr(Ri)))!==Object.prototype&&(ki=Oi):Ii=1),null==ki&&(ki={}),
// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
A(ki,qi)||R(ki,qi,(function(){return this}));var Bi={IteratorPrototype:ki,BUGGY_SAFARI_ITERATORS:Ii},Pi=Bi.IteratorPrototype,ji=function(){return this},Fi=Bi.IteratorPrototype,Ui=Bi.BUGGY_SAFARI_ITERATORS,Vi=ze("iterator"),Mi=function(){return this},Hi=function(e,t,r,n,o,i,a){!function(e,t,r){var n=t+" Iterator";e.prototype=Nn(Pi,{next:p(1,r)}),Uo(e,n,0),Li[n]=ji}(r,t,n);var s,u,c,l=function(e){if(e===o&&m)return m;if(!Ui&&e in d)return d[e];switch(e){case"keys":case"values":case"entries":return function(){return new r(this,e)}}return function(){return new r(this)}},f=t+" Iterator",h=0,d=e.prototype,g=d[Vi]||d["@@iterator"]||o&&d[o],m=!Ui&&g||l(o),y="Array"==t&&d.entries||g;
// export additional methods
if(
// fix native
y&&(s=Yr(y.call(new e)),Fi!==Object.prototype&&s.next&&(Yr(s)!==Fi&&(bn?bn(s,Fi):"function"!=typeof s[Vi]&&R(s,Vi,Mi)),
// Set @@toStringTag to native iterators
Uo(s,f,1))),
// fix Array#{values, @@iterator}.name in V8 / FF
"values"==o&&g&&"values"!==g.name&&(h=1,m=function(){return g.call(this)}),
// define iterator
d[Vi]!==m&&R(d,Vi,m),Li[t]=m,o)if(u={values:l("values"),keys:i?m:l("keys"),entries:l("entries")},a)for(c in u)(Ui||h||!(c in d))&&oe(d,c,u[c]);else qe({target:t,proto:1,forced:Ui||h},u);return u},zi=ne.set,Gi=ne.getterFor("Array Iterator"),Yi=Hi(Array,"Array",(function(e,t){zi(this,{type:"Array Iterator",target:v(e),// target
index:0,// next index
kind:t});
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}),(function(){var e=Gi(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:1}):"keys"==r?{value:n,done:0}:"values"==r?{value:t[n],done:0}:{value:[n,t[n]],done:0}}),"values");
// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Li.Arguments=Li.Array,
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
Ni("keys"),Ni("values"),Ni("entries");var Wi=Math.min,$i=[].lastIndexOf,Ji=!!$i&&1/[1].lastIndexOf(1,-0)<0,Ki=lt("lastIndexOf"),Zi=at("indexOf",{ACCESSORS:1,1:0}),Qi=!Ji&&Ki&&Zi?$i:function(e/* , fromIndex = @[*-1] */){
// convert -0 to +0
if(Ji)return $i.apply(this,arguments)||0;var t=v(this),r=pe(t.length),n=r-1;for(arguments.length>1&&(n=Wi(n,le(arguments[1]))),n<0&&(n=r+n);n>=0;n--)if(n in t&&t[n]===e)return n||0;return-1};
// `Array.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
qe({target:"Array",proto:1,forced:Qi!==[].lastIndexOf},{lastIndexOf:Qi});var Xi=rt("slice"),ea=at("slice",{ACCESSORS:1,0:0,1:2}),ta=ze("species"),ra=[].slice,na=Math.max;
// `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
qe({target:"Array",proto:1,forced:!Xi||!ea},{slice:function(e,t){var r,n,o,i=v(this),a=pe(i.length),s=ge(e,a),u=ge(void 0===t?a:t,a);if(je(i)&&(
// cross-realm fallback
"function"!=typeof(r=i.constructor)||r!==Array&&!je(r.prototype)?b(r)&&null===(r=r[ta])&&(r=void 0):r=void 0,r===Array||void 0===r))return ra.call(i,s,u);for(n=new(void 0===r?Array:r)(na(u-s,0)),o=0;s<u;s++,o++)s in i&&wt(n,o,i[s]);return n.length=o,n}}),
// `Array[@@species]` getter
// https://tc39.github.io/ecma262/#sec-get-array-@@species
no("Array");var oa="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView,ia=function(e,t,r){for(var n in t)oe(e,n,t[n],r);return e},aa=function(e,t,r){if(!(e instanceof t))throw TypeError("Incorrect "+(r?r+" ":"")+"invocation");return e},sa=function(e){if(void 0===e)return 0;var t=le(e),r=pe(t);if(t!==r)throw RangeError("Wrong length or index");return r},ua=Math.abs,ca=Math.pow,la=Math.floor,fa=Math.log,pa=Math.LN2,ha=function(e,t,r){var n,o,i,a=new Array(r),s=8*r-t-1,u=(1<<s)-1,c=u>>1,l=23===t?ca(2,-24)-ca(2,-77):0,f=e<0||0===e&&1/e<0?1:0,p=0;for(
// eslint-disable-next-line no-self-compare
(e=ua(e))!=e||e===1/0?(
// eslint-disable-next-line no-self-compare
o=e!=e?1:0,n=u):(n=la(fa(e)/pa),e*(i=ca(2,-n))<1&&(n--,i*=2),(e+=n+c>=1?l/i:l*ca(2,1-c))*i>=2&&(n++,i/=2),n+c>=u?(o=0,n=u):n+c>=1?(o=(e*i-1)*ca(2,t),n+=c):(o=e*ca(2,c-1)*ca(2,t),n=0));t>=8;a[p++]=255&o,o/=256,t-=8);for(n=n<<t|o,s+=t;s>0;a[p++]=255&n,n/=256,s-=8);return a[--p]|=128*f,a},da=function(e,t){var r,n=e.length,o=8*n-t-1,i=(1<<o)-1,a=i>>1,s=o-7,u=n-1,c=e[u--],l=127&c;for(c>>=7;s>0;l=256*l+e[u],u--,s-=8);for(r=l&(1<<-s)-1,l>>=-s,s+=t;s>0;r=256*r+e[u],u--,s-=8);if(0===l)l=1-a;else{if(l===i)return r?NaN:c?-1/0:1/0;r+=ca(2,t),l-=a}return(c?-1:1)*r*ca(2,l-t)},ga=Ae.f,ma=O.f,ya=ne.get,va=ne.set,ba=a.ArrayBuffer,wa=ba,Ea=a.DataView,Aa=Ea&&Ea.prototype,Ta=Object.prototype,xa=a.RangeError,Sa=ha,_a=da,Na=function(e){return[255&e]},Da=function(e){return[255&e,e>>8&255]},Ca=function(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]},ka=function(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]},Oa=function(e){return Sa(e,23,4)},Ra=function(e){return Sa(e,52,8)},La=function(e,t){ma(e.prototype,t,{get:function(){return ya(this)[t]}})},qa=function(e,t,r,n){var o=sa(r),i=ya(e);if(o+t>i.byteLength)throw xa("Wrong index");var a=ya(i.buffer).bytes,s=o+i.byteOffset,u=a.slice(s,s+t);return n?u:u.reverse()},Ia=function(e,t,r,n,o,i){var a=sa(r),s=ya(e);if(a+t>s.byteLength)throw xa("Wrong index");for(var u=ya(s.buffer).bytes,c=a+s.byteOffset,l=n(+o),f=0;f<t;f++)u[c+f]=l[i?f:t-f-1]};if(oa){if(!s((function(){ba(1)}))||!s((function(){new ba(-1);// eslint-disable-line no-new
}))||s((function(){// eslint-disable-line no-new
return new ba,// eslint-disable-line no-new
new ba(1.5),// eslint-disable-line no-new
new ba(NaN),"ArrayBuffer"!=ba.name}))){for(var Ba,Pa=(wa=function(e){return aa(this,wa),new ba(sa(e))}).prototype=ba.prototype,ja=ga(ba),Fa=0;ja.length>Fa;)(Ba=ja[Fa++])in wa||R(wa,Ba,ba[Ba]);Pa.constructor=wa}
// WebKit bug - the same parent prototype for typed arrays and data view
bn&&Yr(Aa)!==Ta&&bn(Aa,Ta);
// iOS Safari 7.x bug
var Ua=new Ea(new wa(2)),Va=Aa.setInt8;Ua.setInt8(0,2147483648),Ua.setInt8(1,2147483649),!Ua.getInt8(0)&&Ua.getInt8(1)||ia(Aa,{setInt8:function(e,t){Va.call(this,e,t<<24>>24)},setUint8:function(e,t){Va.call(this,e,t<<24>>24)}},{unsafe:1})}else wa=function(e){aa(this,wa,"ArrayBuffer");var t=sa(e);va(this,{bytes:xi.call(new Array(t),0),byteLength:t}),u||(this.byteLength=t)},Ea=function(e,t,r){aa(this,Ea,"DataView"),aa(e,wa,"DataView");var n=ya(e).byteLength,o=le(t);if(o<0||o>n)throw xa("Wrong offset");if(o+(r=void 0===r?n-o:pe(r))>n)throw xa("Wrong length");va(this,{buffer:e,byteLength:r,byteOffset:o}),u||(this.buffer=e,this.byteLength=r,this.byteOffset=o)},u&&(La(wa,"byteLength"),La(Ea,"buffer"),La(Ea,"byteLength"),La(Ea,"byteOffset")),ia(Ea.prototype,{getInt8:function(e){return qa(this,1,e)[0]<<24>>24},getUint8:function(e){return qa(this,1,e)[0]},getInt16:function(e/* , littleEndian */){var t=qa(this,2,e,arguments.length>1?arguments[1]:void 0);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e/* , littleEndian */){var t=qa(this,2,e,arguments.length>1?arguments[1]:void 0);return t[1]<<8|t[0]},getInt32:function(e/* , littleEndian */){return ka(qa(this,4,e,arguments.length>1?arguments[1]:void 0))},getUint32:function(e/* , littleEndian */){return ka(qa(this,4,e,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(e/* , littleEndian */){return _a(qa(this,4,e,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(e/* , littleEndian */){return _a(qa(this,8,e,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(e,t){Ia(this,1,e,Na,t)},setUint8:function(e,t){Ia(this,1,e,Na,t)},setInt16:function(e,t/* , littleEndian */){Ia(this,2,e,Da,t,arguments.length>2?arguments[2]:void 0)},setUint16:function(e,t/* , littleEndian */){Ia(this,2,e,Da,t,arguments.length>2?arguments[2]:void 0)},setInt32:function(e,t/* , littleEndian */){Ia(this,4,e,Ca,t,arguments.length>2?arguments[2]:void 0)},setUint32:function(e,t/* , littleEndian */){Ia(this,4,e,Ca,t,arguments.length>2?arguments[2]:void 0)},setFloat32:function(e,t/* , littleEndian */){Ia(this,4,e,Oa,t,arguments.length>2?arguments[2]:void 0)},setFloat64:function(e,t/* , littleEndian */){Ia(this,8,e,Ra,t,arguments.length>2?arguments[2]:void 0)}});Uo(wa,"ArrayBuffer"),Uo(Ea,"DataView");var Ma={ArrayBuffer:wa,DataView:Ea},Ha=Ma.ArrayBuffer,za=a.ArrayBuffer;
// `ArrayBuffer` constructor
// https://tc39.github.io/ecma262/#sec-arraybuffer-constructor
qe({global:1,forced:za!==Ha},{ArrayBuffer:Ha}),no("ArrayBuffer");var Ga=function(e){if(to(e))throw TypeError("The method doesn't accept regular expressions");return e},Ya=ze("match");
// `String.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-string.prototype.includes
qe({target:"String",proto:1,forced:!function(e){var t=/./;try{"/./"[e](t)}catch(r){try{return t[Ya]=0,"/./"[e](t)}catch(e){/* empty */}}return 0}("includes")},{includes:function(e/* , position = 0 */){return!!~String(y(this)).indexOf(Ga(e),arguments.length>1?arguments[1]:void 0)}});var Wa=Ln.trim;
// check that a method works with the correct list
// of whitespaces and has a correct name
// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
qe({target:"String",proto:1,forced:function(e){return s((function(){return!!Dn[e]()||"​᠎"!="​᠎"[e]()||Dn[e].name!==e}))}("trim")},{trim:function(){return Wa(this)}});var $a=ze("iterator"),Ja=0;try{var Ka=0,Za={next:function(){return{done:!!Ka++}},return:function(){Ja=1}};Za[$a]=function(){return this},
// eslint-disable-next-line no-throw-literal
Array.from(Za,(function(){throw 2}))}catch(e){/* empty */}var Qa,Xa=function(e,t){if(!t&&!Ja)return 0;var r=0;try{var n={};n[$a]=function(){return{next:function(){return{done:r=1}}}},e(n)}catch(e){/* empty */}return r},es=O.f,ts=a.Int8Array,rs=ts&&ts.prototype,ns=a.Uint8ClampedArray,os=ns&&ns.prototype,is=ts&&Yr(ts),as=rs&&Yr(rs),ss=Object.prototype,us=ss.isPrototypeOf,cs=ze("toStringTag"),ls=G("TYPED_ARRAY_TAG"),fs=oa&&!!bn&&"Opera"!==Lr(a.opera),ps=0,hs={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},ds=function(e){return b(e)&&A(hs,Lr(e))};for(Qa in hs)a[Qa]||(fs=0);
// WebKit bug - typed arrays constructors prototype is Object.prototype
if((!fs||"function"!=typeof is||is===Function.prototype)&&(
// eslint-disable-next-line no-shadow
is=function(){throw TypeError("Incorrect invocation")},fs))for(Qa in hs)a[Qa]&&bn(a[Qa],is);if((!fs||!as||as===ss)&&(as=is.prototype,fs))for(Qa in hs)a[Qa]&&bn(a[Qa].prototype,as);
// WebKit bug - one more object in Uint8ClampedArray prototype chain
if(fs&&Yr(os)!==as&&bn(os,as),u&&!A(as,cs))for(Qa in ps=1,es(as,cs,{get:function(){return b(this)?this[ls]:void 0}}),hs)a[Qa]&&R(a[Qa],ls,Qa);var gs={NATIVE_ARRAY_BUFFER_VIEWS:fs,TYPED_ARRAY_TAG:ps&&ls,aTypedArray:function(e){if(ds(e))return e;throw TypeError("Target is not a typed array")},aTypedArrayConstructor:function(e){if(bn){if(us.call(is,e))return e}else for(var t in hs)if(A(hs,Qa)){var r=a[t];if(r&&(e===r||us.call(r,e)))return e}throw TypeError("Target is not a typed array constructor")},exportTypedArrayMethod:function(e,t,r){if(u){if(r)for(var n in hs){var o=a[n];o&&A(o.prototype,e)&&delete o.prototype[e]}as[e]&&!r||oe(as,e,r?t:fs&&rs[e]||t)}},exportTypedArrayStaticMethod:function(e,t,r){var n,o;if(u){if(bn){if(r)for(n in hs)(o=a[n])&&A(o,e)&&delete o[e];if(is[e]&&!r)return;
// V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
try{return oe(is,e,r?t:fs&&ts[e]||t)}catch(e){/* empty */}}for(n in hs)!(o=a[n])||o[e]&&!r||oe(o,e,t)}},isView:function(e){var t=Lr(e);return"DataView"===t||A(hs,t)},isTypedArray:ds,TypedArray:is,TypedArrayPrototype:as},ms=gs.NATIVE_ARRAY_BUFFER_VIEWS,ys=a.ArrayBuffer,vs=a.Int8Array,bs=!ms||!s((function(){vs(1)}))||!s((function(){new vs(-1)}))||!Xa((function(e){new vs,new vs(null),new vs(1.5),new vs(e)}),1)||s((function(){
// Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
return 1!==new vs(new ys(2),1,void 0).length})),ws=function(e,t){var r=function(e){var t=le(e);if(t<0)throw RangeError("The argument can't be less than 0");return t}(e);if(r%t)throw RangeError("Wrong offset");return r},Es=ze("iterator"),As=function(e){if(null!=e)return e[Es]||e["@@iterator"]||Li[Lr(e)]},Ts=ze("iterator"),xs=Array.prototype,Ss=function(e){return void 0!==e&&(Li.Array===e||xs[Ts]===e)},_s=gs.aTypedArrayConstructor,Ns=function(e/* , mapfn, thisArg */){var t,r,n,o,i,a,s=Pe(e),u=arguments.length,c=u>1?arguments[1]:void 0,l=void 0!==c,f=As(s);if(null!=f&&!Ss(f))for(a=(i=f.call(s)).next,s=[];!(o=a.call(i)).done;)s.push(o.value);for(l&&u>2&&(c=Be(c,arguments[2],2)),r=pe(s.length),n=new(_s(this))(r),t=0;r>t;t++)n[t]=l?c(s[t],t):s[t];return n};
/* eslint-disable no-new */
// `Uint8Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
r((function(e){var t=Ae.f,r=Je.forEach,n=ne.get,o=ne.set,i=O.f,s=D.f,c=Math.round,l=a.RangeError,f=Ma.ArrayBuffer,h=Ma.DataView,d=gs.NATIVE_ARRAY_BUFFER_VIEWS,g=gs.TYPED_ARRAY_TAG,m=gs.TypedArray,y=gs.TypedArrayPrototype,v=gs.aTypedArrayConstructor,E=gs.isTypedArray,T=function(e,t){for(var r=0,n=t.length,o=new(v(e))(n);n>r;)o[r]=t[r++];return o},x=function(e,t){i(e,t,{get:function(){return n(this)[t]}})},S=function(e){var t;return e instanceof f||"ArrayBuffer"==(t=Lr(e))||"SharedArrayBuffer"==t},_=function(e,t){return E(e)&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},N=function(e,t){return _(e,t=w(t,1))?p(2,e[t]):s(e,t)},C=function(e,t,r){return!(_(e,t=w(t,1))&&b(r)&&A(r,"value"))||A(r,"get")||A(r,"set")||r.configurable||A(r,"writable")&&!r.writable||A(r,"enumerable")&&!r.enumerable?i(e,t,r):(e[t]=r.value,e)};u?(d||(D.f=N,O.f=C,x(y,"buffer"),x(y,"byteOffset"),x(y,"byteLength"),x(y,"length")),qe({target:"Object",stat:1,forced:!d},{getOwnPropertyDescriptor:N,defineProperty:C}),e.exports=function(e,s,u){var p=e.match(/\d+$/)[0]/8,v=e+(u?"Clamped":"")+"Array",w="get"+e,A="set"+e,x=a[v],_=x,N=_&&_.prototype,D={},C=function(e,t){i(e,t,{get:function(){return function(e,t){var r=n(e);return r.view[w](t*p+r.byteOffset,1)}(this,t)},set:function(e){return function(e,t,r){var o=n(e);u&&(r=(r=c(r))<0?0:r>255?255:255&r),o.view[A](t*p+o.byteOffset,r,1)}(this,t,e)},enumerable:1})};d?bs&&(_=s((function(e,t,r,n){return aa(e,_,v),wn(b(t)?S(t)?void 0!==n?new x(t,ws(r,p),n):void 0!==r?new x(t,ws(r,p)):new x(t):E(t)?T(_,t):Ns.call(_,t):new x(sa(t)),e,_)})),bn&&bn(_,m),r(t(x),(function(e){e in _||R(_,e,x[e])})),_.prototype=N):(_=s((function(e,t,r,n){aa(e,_,v);var i,a,s,u=0,c=0;if(b(t)){if(!S(t))return E(t)?T(_,t):Ns.call(_,t);i=t,c=ws(r,p);var d=t.byteLength;if(void 0===n){if(d%p)throw l("Wrong length");if((a=d-c)<0)throw l("Wrong length")}else if((a=pe(n)*p)+c>d)throw l("Wrong length");s=a/p}else s=sa(t),i=new f(a=s*p);for(o(e,{buffer:i,byteOffset:c,byteLength:a,length:s,view:new h(i)});u<s;)C(e,u++)})),bn&&bn(_,m),N=_.prototype=Nn(y)),N.constructor!==_&&R(N,"constructor",_),g&&R(N,g,v),D[v]=_,qe({global:1,forced:_!=x,sham:!d},D),"BYTES_PER_ELEMENT"in _||R(_,"BYTES_PER_ELEMENT",p),"BYTES_PER_ELEMENT"in N||R(N,"BYTES_PER_ELEMENT",p),no(v)}):e.exports=function(){/* empty */}}))("Uint8",(function(e){return function(t,r,n){return e(this,t,r,n)}}));var Ds=Math.min,Cs=[].copyWithin||function(e/* = 0 */,t/* = 0, end = @length */){var r=Pe(this),n=pe(r.length),o=ge(e,n),i=ge(t,n),a=arguments.length>2?arguments[2]:void 0,s=Ds((void 0===a?n:ge(a,n))-i,n-o),u=1;for(i<o&&o<i+s&&(u=-1,i+=s-1,o+=s-1);s-- >0;)i in r?r[o]=r[i]:delete r[o],o+=u,i+=u;return r},ks=gs.aTypedArray;
// `Array.prototype.copyWithin` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin
// `%TypedArray%.prototype.copyWithin` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.copywithin
(0,gs.exportTypedArrayMethod)("copyWithin",(function(e,t/* , end */){return Cs.call(ks(this),e,t,arguments.length>2?arguments[2]:void 0)}));var Os=Je.every,Rs=gs.aTypedArray;
// `%TypedArray%.prototype.every` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.every
(0,gs.exportTypedArrayMethod)("every",(function(e/* , thisArg */){return Os(Rs(this),e,arguments.length>1?arguments[1]:void 0)}));var Ls=gs.aTypedArray;
// `%TypedArray%.prototype.fill` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.fill
// eslint-disable-next-line no-unused-vars
(0,gs.exportTypedArrayMethod)("fill",(function(e/* , start, end */){return xi.apply(Ls(this),arguments)}));var qs=Je.filter,Is=gs.aTypedArray,Bs=gs.aTypedArrayConstructor;
// `%TypedArray%.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.filter
(0,gs.exportTypedArrayMethod)("filter",(function(e/* , thisArg */){for(var t=qs(Is(this),e,arguments.length>1?arguments[1]:void 0),r=ko(this,this.constructor),n=0,o=t.length,i=new(Bs(r))(o);o>n;)i[n]=t[n++];return i}));var Ps=Je.find,js=gs.aTypedArray;
// `%TypedArray%.prototype.find` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.find
(0,gs.exportTypedArrayMethod)("find",(function(e/* , thisArg */){return Ps(js(this),e,arguments.length>1?arguments[1]:void 0)}));var Fs=Je.findIndex,Us=gs.aTypedArray;
// `%TypedArray%.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.findindex
(0,gs.exportTypedArrayMethod)("findIndex",(function(e/* , thisArg */){return Fs(Us(this),e,arguments.length>1?arguments[1]:void 0)}));var Vs=Je.forEach,Ms=gs.aTypedArray;
// `%TypedArray%.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.foreach
(0,gs.exportTypedArrayMethod)("forEach",(function(e/* , thisArg */){Vs(Ms(this),e,arguments.length>1?arguments[1]:void 0)}));var Hs=ye.includes,zs=gs.aTypedArray;
// `%TypedArray%.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.includes
(0,gs.exportTypedArrayMethod)("includes",(function(e/* , fromIndex */){return Hs(zs(this),e,arguments.length>1?arguments[1]:void 0)}));var Gs=ye.indexOf,Ys=gs.aTypedArray;
// `%TypedArray%.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.indexof
(0,gs.exportTypedArrayMethod)("indexOf",(function(e/* , fromIndex */){return Gs(Ys(this),e,arguments.length>1?arguments[1]:void 0)}));var Ws=ze("iterator"),$s=a.Uint8Array,Js=Yi.values,Ks=Yi.keys,Zs=Yi.entries,Qs=gs.aTypedArray,Xs=gs.exportTypedArrayMethod,eu=$s&&$s.prototype[Ws],tu=!!eu&&("values"==eu.name||null==eu.name),ru=function(){return Js.call(Qs(this))};
// `%TypedArray%.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.entries
Xs("entries",(function(){return Zs.call(Qs(this))})),
// `%TypedArray%.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.keys
Xs("keys",(function(){return Ks.call(Qs(this))})),
// `%TypedArray%.prototype.values` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.values
Xs("values",ru,!tu),
// `%TypedArray%.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype-@@iterator
Xs(Ws,ru,!tu);var nu=gs.aTypedArray,ou=[].join;
// `%TypedArray%.prototype.join` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.join
// eslint-disable-next-line no-unused-vars
(0,gs.exportTypedArrayMethod)("join",(function(e){return ou.apply(nu(this),arguments)}));var iu=gs.aTypedArray;
// `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.lastindexof
// eslint-disable-next-line no-unused-vars
(0,gs.exportTypedArrayMethod)("lastIndexOf",(function(e/* , fromIndex */){return Qi.apply(iu(this),arguments)}));var au=Je.map,su=gs.aTypedArray,uu=gs.aTypedArrayConstructor;
// `%TypedArray%.prototype.map` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map
(0,gs.exportTypedArrayMethod)("map",(function(e/* , thisArg */){return au(su(this),e,arguments.length>1?arguments[1]:void 0,(function(e,t){return new(uu(ko(e,e.constructor)))(t)}))}));var cu=dn.left,lu=gs.aTypedArray;
// `%TypedArray%.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduce
(0,gs.exportTypedArrayMethod)("reduce",(function(e/* , initialValue */){return cu(lu(this),e,arguments.length,arguments.length>1?arguments[1]:void 0)}));var fu=dn.right,pu=gs.aTypedArray;
// `%TypedArray%.prototype.reduceRicht` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduceright
(0,gs.exportTypedArrayMethod)("reduceRight",(function(e/* , initialValue */){return fu(pu(this),e,arguments.length,arguments.length>1?arguments[1]:void 0)}));var hu=gs.aTypedArray,du=gs.exportTypedArrayMethod,gu=Math.floor;
// `%TypedArray%.prototype.reverse` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reverse
du("reverse",(function(){for(var e,t=hu(this).length,r=gu(t/2),n=0;n<r;)e=this[n],this[n++]=this[--t],this[t]=e;return this}));var mu=gs.aTypedArray;
// `%TypedArray%.prototype.set` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.set
(0,gs.exportTypedArrayMethod)("set",(function(e/* , offset */){mu(this);var t=ws(arguments.length>1?arguments[1]:void 0,1),r=this.length,n=Pe(e),o=pe(n.length),i=0;if(o+t>r)throw RangeError("Wrong length");for(;i<o;)this[t+i]=n[i++]}),s((function(){
// eslint-disable-next-line no-undef
new Int8Array(1).set({})})));var yu=gs.aTypedArray,vu=gs.aTypedArrayConstructor,bu=[].slice;
// `%TypedArray%.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.slice
(0,gs.exportTypedArrayMethod)("slice",(function(e,t){for(var r=bu.call(yu(this),e,t),n=ko(this,this.constructor),o=0,i=r.length,a=new(vu(n))(i);i>o;)a[o]=r[o++];return a}),s((function(){
// eslint-disable-next-line no-undef
new Int8Array(1).slice()})));var wu=Je.some,Eu=gs.aTypedArray;
// `%TypedArray%.prototype.some` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.some
(0,gs.exportTypedArrayMethod)("some",(function(e/* , thisArg */){return wu(Eu(this),e,arguments.length>1?arguments[1]:void 0)}));var Au=gs.aTypedArray,Tu=[].sort;
// `%TypedArray%.prototype.sort` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.sort
(0,gs.exportTypedArrayMethod)("sort",(function(e){return Tu.call(Au(this),e)}));var xu=gs.aTypedArray;
// `%TypedArray%.prototype.subarray` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.subarray
(0,gs.exportTypedArrayMethod)("subarray",(function(e,t){var r=xu(this),n=r.length,o=ge(e,n);return new(ko(r,r.constructor))(r.buffer,r.byteOffset+o*r.BYTES_PER_ELEMENT,pe((void 0===t?n:ge(t,n))-o))}));var Su=a.Int8Array,_u=gs.aTypedArray,Nu=gs.exportTypedArrayMethod,Du=[].toLocaleString,Cu=[].slice,ku=!!Su&&s((function(){Du.call(new Su(1))}));
// `%TypedArray%.prototype.toLocaleString` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tolocalestring
Nu("toLocaleString",(function(){return Du.apply(ku?Cu.call(_u(this)):_u(this),arguments)}),s((function(){return[1,2].toLocaleString()!=new Su([1,2]).toLocaleString()}))||!s((function(){Su.prototype.toLocaleString.call([1,2])})));var Ou=gs.exportTypedArrayMethod,Ru=a.Uint8Array,Lu=Ru&&Ru.prototype||{},qu=[].toString,Iu=[].join;s((function(){qu.call({})}))&&(qu=function(){return Iu.call(this)});var Bu=Lu.toString!=qu;
// `%TypedArray%.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tostring
Ou("toString",qu,Bu),
// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
qe({target:"URL",proto:1,enumerable:1},{toJSON:function(){return URL.prototype.toString.call(this)}});var Pu=[],ju=[],Fu="undefined"!=typeof Uint8Array?Uint8Array:Array,Uu=0;function Vu(){Uu=1;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,r=e.length;t<r;++t)Pu[t]=e[t],ju[e.charCodeAt(t)]=t;ju["-".charCodeAt(0)]=62,ju["_".charCodeAt(0)]=63}function Mu(e,t,r){for(var n,o,i=[],a=t;a<r;a+=3)n=(e[a]<<16)+(e[a+1]<<8)+e[a+2],i.push(Pu[(o=n)>>18&63]+Pu[o>>12&63]+Pu[o>>6&63]+Pu[63&o]);return i.join("")}function Hu(e){var t;Uu||Vu();// must be multiple of 3
// go through the array every three bytes, we'll deal with trailing stuff later
for(var r=e.length,n=r%3,o="",i=[],a=0,s=r-n;a<s;a+=16383)i.push(Mu(e,a,a+16383>s?s:a+16383));// pad the end with zeros, but make sure to not forget the extra bytes
return 1===n?(t=e[r-1],o+=Pu[t>>2],o+=Pu[t<<4&63],o+="=="):2===n&&(t=(e[r-2]<<8)+e[r-1],o+=Pu[t>>10],o+=Pu[t>>4&63],o+=Pu[t<<2&63],o+="="),i.push(o),i.join("")}function zu(e,t,r,n,o){var i,a,s=8*o-n-1,u=(1<<s)-1,c=u>>1,l=-7,f=r?o-1:0,p=r?-1:1,h=e[t+f];for(f+=p,i=h&(1<<-l)-1,h>>=-l,l+=s;l>0;i=256*i+e[t+f],f+=p,l-=8);for(a=i&(1<<-l)-1,i>>=-l,l+=n;l>0;a=256*a+e[t+f],f+=p,l-=8);if(0===i)i=1-c;else{if(i===u)return a?NaN:1/0*(h?-1:1);a+=Math.pow(2,n),i-=c}return(h?-1:1)*a*Math.pow(2,i-n)}function Gu(e,t,r,n,o,i){var a,s,u,c=8*i-o-1,l=(1<<c)-1,f=l>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:i-1,d=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=l):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+f>=1?p/u:p*Math.pow(2,1-f))*u>=2&&(a++,u/=2),a+f>=l?(s=0,a=l):a+f>=1?(s=(t*u-1)*Math.pow(2,o),a+=f):(s=t*Math.pow(2,f-1)*Math.pow(2,o),a=0));o>=8;e[r+h]=255&s,h+=d,s/=256,o-=8);for(a=a<<o|s,c+=o;c>0;e[r+h]=255&a,h+=d,a/=256,c-=8);e[r+h-d]|=128*g}var Yu={}.toString,Wu=Array.isArray||function(e){return"[object Array]"==Yu.call(e)};function $u(){return Ku.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function Ju(e,t){if($u()<t)throw new RangeError("Invalid typed array length");return Ku.TYPED_ARRAY_SUPPORT?(
// Return an augmented `Uint8Array` instance, for best performance
e=new Uint8Array(t)).__proto__=Ku.prototype:(
// Fallback: Return an object instance of the Buffer class
null===e&&(e=new Ku(t)),e.length=t),e}
/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */function Ku(e,t,r){if(!(Ku.TYPED_ARRAY_SUPPORT||this instanceof Ku))return new Ku(e,t,r);// Common case.
if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return Xu(this,e)}return Zu(this,e,t,r)}function Zu(e,t,r,n){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,r,n){// this throws if `array` is not a valid ArrayBuffer
if(t.byteLength,r<0||t.byteLength<r)throw new RangeError("'offset' is out of bounds");if(t.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");return t=void 0===r&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,r):new Uint8Array(t,r,n),Ku.TYPED_ARRAY_SUPPORT?(
// Return an augmented `Uint8Array` instance, for best performance
e=t).__proto__=Ku.prototype:
// Fallback: Return an object instance of the Buffer class
e=ec(e,t),e}(e,t,r,n):"string"==typeof t?function(e,t,r){if("string"==typeof r&&""!==r||(r="utf8"),!Ku.isEncoding(r))throw new TypeError('"encoding" must be a valid string encoding');var n=0|nc(t,r),o=(e=Ju(e,n)).write(t,r);return o!==n&&(
// Writing a hex string, for example, that contains invalid characters will
// cause everything after the first invalid character to be ignored. (e.g.
// 'abxxcd' will be treated as 'ab')
e=e.slice(0,o)),e}(e,t,r):function(e,t){if(rc(t)){var r=0|tc(t.length);return 0===(e=Ju(e,r)).length||t.copy(e,0,0,r),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(n=t.length)!=n?Ju(e,0):ec(e,t);if("Buffer"===t.type&&Wu(t.data))return ec(e,t.data)}var n;// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence
// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}
/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/function Qu(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function Xu(e,t){if(Qu(t),e=Ju(e,t<0?0:0|tc(t)),!Ku.TYPED_ARRAY_SUPPORT)for(var r=0;r<t;++r)e[r]=0;return e}
/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */function ec(e,t){var r=t.length<0?0:0|tc(t.length);e=Ju(e,r);for(var n=0;n<r;n+=1)e[n]=255&t[n];return e}function tc(e){
// Note: cannot use `length < kMaxLength()` here because that fails when
// length is NaN (which is otherwise coerced to zero.)
if(e>=$u())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+$u().toString(16)+" bytes");return 0|e}function rc(e){return!(null==e||!e._isBuffer)}function nc(e,t){if(rc(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var r=e.length;if(0===r)return 0;// Use a for loop to avoid recursion
for(var n=0;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return Dc(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return Cc(e).length;default:if(n)return Dc(e).length;// assume utf8
t=(""+t).toLowerCase(),n=1}}function oc(e,t,r){var n=0;// No need to verify that "this.length <= MAX_UINT32" since it's a read-only
// property of a typed array.
// This behaves neither like String nor Uint8Array in that we set start/end
// to their upper/lower bounds if the value passed is out of range.
// undefined is handled specially as per ECMA-262 6th Edition,
// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
// Return early if start > this.length. Done here to prevent potential uint32
// coercion fail below.
if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";// Force coersion to uint32. This will also coerce falsey/NaN values to 0.
if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return vc(this,t,r);case"utf8":case"utf-8":return gc(this,t,r);case"ascii":return mc(this,t,r);case"latin1":case"binary":return yc(this,t,r);case"base64":return dc(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return bc(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=1}}// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
function ic(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function ac(e,t,r,n,o){
// Empty buffer means no match
if(0===e.length)return-1;// Normalize byteOffset
if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,// Coerce to Number.
isNaN(r)&&(
// byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
r=o?0:e.length-1),// Normalize byteOffset: negative offsets start from the end of the buffer
r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}// Normalize val
// Finally, search either indexOf (if dir is true) or lastIndexOf
if("string"==typeof t&&(t=Ku.from(t,n)),rc(t))
// Special case: looking for empty string/buffer always fails
return 0===t.length?-1:sc(e,t,r,n,o);if("number"==typeof t)// Search for a byte value [0-255]
return t&=255,Ku.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):sc(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function sc(e,t,r,n,o){var i,a=1,s=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,r/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(o){var l=-1;for(i=r;i<s;i++)if(c(e,i)===c(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===u)return l*a}else-1!==l&&(i-=i-l),l=-1}else for(r+u>s&&(r=s-u),i=r;i>=0;i--){for(var f=1,p=0;p<u;p++)if(c(e,i+p)!==c(t,p)){f=0;break}if(f)return i}return-1}function uc(e,t,r,n){r=Number(r)||0;var o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;// must be an even number of digits
var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");n>i/2&&(n=i/2);for(var a=0;a<n;++a){var s=parseInt(t.substr(2*a,2),16);if(isNaN(s))return a;e[r+a]=s}return a}function cc(e,t,r,n){return kc(Dc(t,e.length-r),e,r,n)}function lc(e,t,r,n){return kc(function(e){for(var t=[],r=0;r<e.length;++r)
// Node's code seems to be doing this and not & 0x7F..
t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function fc(e,t,r,n){return lc(e,t,r,n)}function pc(e,t,r,n){return kc(Cc(t),e,r,n)}function hc(e,t,r,n){return kc(function(e,t){for(var r,n,o,i=[],a=0;a<e.length&&!((t-=2)<0);++a)r=e.charCodeAt(a),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function dc(e,t,r){return 0===t&&r===e.length?Hu(e):Hu(e.slice(t,r))}function gc(e,t,r){r=Math.min(e.length,r);for(var n=[],o=t;o<r;){var i,a,s,u,c=e[o],l=null,f=c>239?4:c>223?3:c>191?2:1;if(o+f<=r)switch(f){case 1:c<128&&(l=c);break;case 2:128==(192&(i=e[o+1]))&&(u=(31&c)<<6|63&i)>127&&(l=u);break;case 3:i=e[o+1],a=e[o+2],128==(192&i)&&128==(192&a)&&(u=(15&c)<<12|(63&i)<<6|63&a)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:i=e[o+1],a=e[o+2],s=e[o+3],128==(192&i)&&128==(192&a)&&128==(192&s)&&(u=(15&c)<<18|(63&i)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(
// we did not generate a valid codePoint so insert a
// replacement char (U+FFFD) and advance only 1 byte
l=65533,f=1):l>65535&&(
// encode to utf16 (surrogate pair dance)
l-=65536,n.push(l>>>10&1023|55296),l=56320|1023&l),n.push(l),o+=f}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);// avoid extra slice()
// Decode in chunks to avoid "call stack size exceeded".
for(var r="",n=0;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
function mc(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function yc(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function vc(e,t,r){var n,o=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>o)&&(r=o);for(var i="",a=t;a<r;++a)i+=(n=e[a])<16?"0"+n.toString(16):n.toString(16);return i}function bc(e,t,r){for(var n=e.slice(t,r),o="",i=0;i<n.length;i+=2)o+=String.fromCharCode(n[i]+256*n[i+1]);return o}
/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
function wc(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function Ec(e,t,r,n,o,i){if(!rc(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function Ac(e,t,r,n){t<0&&(t=65535+t+1);for(var o=0,i=Math.min(e.length-r,2);o<i;++o)e[r+o]=(t&255<<8*(n?o:1-o))>>>8*(n?o:1-o)}function Tc(e,t,r,n){t<0&&(t=4294967295+t+1);for(var o=0,i=Math.min(e.length-r,4);o<i;++o)e[r+o]=t>>>8*(n?o:3-o)&255}function xc(e,t,r,n,o,i){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function Sc(e,t,r,n,o){return o||xc(e,0,r,4),Gu(e,t,r,n,23,4),r+4}function _c(e,t,r,n,o){return o||xc(e,0,r,8),Gu(e,t,r,n,52,8),r+8}
/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
Ku.TYPED_ARRAY_SUPPORT=void 0!==nr.TYPED_ARRAY_SUPPORT?nr.TYPED_ARRAY_SUPPORT:1,Ku.poolSize=8192,// not used by this implementation
// TODO: Legacy, not needed anymore. Remove in next major version.
Ku._augment=function(e){return e.__proto__=Ku.prototype,e},Ku.from=function(e,t,r){return Zu(null,e,t,r)},Ku.TYPED_ARRAY_SUPPORT&&(Ku.prototype.__proto__=Uint8Array.prototype,Ku.__proto__=Uint8Array),
/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
Ku.alloc=function(e,t,r){return function(e,t,r,n){return Qu(t),t<=0?Ju(e,t):void 0!==r?"string"==typeof n?Ju(e,t).fill(r,n):Ju(e,t).fill(r):Ju(e,t)}(null,e,t,r)},Ku.allocUnsafe=function(e){return Xu(null,e)},
/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
Ku.allocUnsafeSlow=function(e){return Xu(null,e)},Ku.isBuffer=Oc,Ku.compare=function(e,t){if(!rc(e)||!rc(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var r=e.length,n=t.length,o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},Ku.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 1;default:return 0}},Ku.concat=function(e,t){if(!Wu(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Ku.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var n=Ku.allocUnsafe(t),o=0;for(r=0;r<e.length;++r){var i=e[r];if(!rc(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(n,o),o+=i.length}return n},Ku.byteLength=nc,Ku.prototype._isBuffer=1,Ku.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)ic(this,t,t+1);return this},Ku.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)ic(this,t,t+3),ic(this,t+1,t+2);return this},Ku.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)ic(this,t,t+7),ic(this,t+1,t+6),ic(this,t+2,t+5),ic(this,t+3,t+4);return this},Ku.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?gc(this,0,e):oc.apply(this,arguments)},Ku.prototype.equals=function(e){if(!rc(e))throw new TypeError("Argument must be a Buffer");return this===e?1:0===Ku.compare(this,e)},Ku.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},Ku.prototype.compare=function(e,t,r,n,o){if(!rc(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;for(var i=(o>>>=0)-(n>>>=0),a=(r>>>=0)-(t>>>=0),s=Math.min(i,a),u=this.slice(n,o),c=e.slice(t,r),l=0;l<s;++l)if(u[l]!==c[l]){i=u[l],a=c[l];break}return i<a?-1:a<i?1:0},Ku.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},Ku.prototype.indexOf=function(e,t,r){return ac(this,e,t,r,1)},Ku.prototype.lastIndexOf=function(e,t,r){return ac(this,e,t,r,0)},Ku.prototype.write=function(e,t,r,n){
// Buffer#write(string)
if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var i=0;;)switch(n){case"hex":return uc(this,e,t,r);case"utf8":case"utf-8":return cc(this,e,t,r);case"ascii":return lc(this,e,t,r);case"latin1":case"binary":return fc(this,e,t,r);case"base64":
// Warning: maxLength not taken into account in base64Write
return pc(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return hc(this,e,t,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=1}},Ku.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},Ku.prototype.slice=function(e,t){var r,n=this.length;if((e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e),Ku.TYPED_ARRAY_SUPPORT)(r=this.subarray(e,t)).__proto__=Ku.prototype;else{var o=t-e;r=new Ku(o,void 0);for(var i=0;i<o;++i)r[i]=this[i+e]}return r},Ku.prototype.readUIntLE=function(e,t,r){e|=0,t|=0,r||wc(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n},Ku.prototype.readUIntBE=function(e,t,r){e|=0,t|=0,r||wc(e,t,this.length);for(var n=this[e+--t],o=1;t>0&&(o*=256);)n+=this[e+--t]*o;return n},Ku.prototype.readUInt8=function(e,t){return t||wc(e,1,this.length),this[e]},Ku.prototype.readUInt16LE=function(e,t){return t||wc(e,2,this.length),this[e]|this[e+1]<<8},Ku.prototype.readUInt16BE=function(e,t){return t||wc(e,2,this.length),this[e]<<8|this[e+1]},Ku.prototype.readUInt32LE=function(e,t){return t||wc(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Ku.prototype.readUInt32BE=function(e,t){return t||wc(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Ku.prototype.readIntLE=function(e,t,r){e|=0,t|=0,r||wc(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n>=(o*=128)&&(n-=Math.pow(2,8*t)),n},Ku.prototype.readIntBE=function(e,t,r){e|=0,t|=0,r||wc(e,t,this.length);for(var n=t,o=1,i=this[e+--n];n>0&&(o*=256);)i+=this[e+--n]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*t)),i},Ku.prototype.readInt8=function(e,t){return t||wc(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Ku.prototype.readInt16LE=function(e,t){t||wc(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},Ku.prototype.readInt16BE=function(e,t){t||wc(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},Ku.prototype.readInt32LE=function(e,t){return t||wc(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Ku.prototype.readInt32BE=function(e,t){return t||wc(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Ku.prototype.readFloatLE=function(e,t){return t||wc(e,4,this.length),zu(this,e,1,23,4)},Ku.prototype.readFloatBE=function(e,t){return t||wc(e,4,this.length),zu(this,e,0,23,4)},Ku.prototype.readDoubleLE=function(e,t){return t||wc(e,8,this.length),zu(this,e,1,52,8)},Ku.prototype.readDoubleBE=function(e,t){return t||wc(e,8,this.length),zu(this,e,0,52,8)},Ku.prototype.writeUIntLE=function(e,t,r,n){e=+e,t|=0,r|=0,n||Ec(this,e,t,r,Math.pow(2,8*r)-1,0);var o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},Ku.prototype.writeUIntBE=function(e,t,r,n){e=+e,t|=0,r|=0,n||Ec(this,e,t,r,Math.pow(2,8*r)-1,0);var o=r-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+r},Ku.prototype.writeUInt8=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,1,255,0),Ku.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},Ku.prototype.writeUInt16LE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,2,65535,0),Ku.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):Ac(this,e,t,1),t+2},Ku.prototype.writeUInt16BE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,2,65535,0),Ku.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):Ac(this,e,t,0),t+2},Ku.prototype.writeUInt32LE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,4,4294967295,0),Ku.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):Tc(this,e,t,1),t+4},Ku.prototype.writeUInt32BE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,4,4294967295,0),Ku.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):Tc(this,e,t,0),t+4},Ku.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);Ec(this,e,t,r,o-1,-o)}var i=0,a=1,s=0;for(this[t]=255&e;++i<r&&(a*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+r},Ku.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);Ec(this,e,t,r,o-1,-o)}var i=r-1,a=1,s=0;for(this[t+i]=255&e;--i>=0&&(a*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+r},Ku.prototype.writeInt8=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,1,127,-128),Ku.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},Ku.prototype.writeInt16LE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,2,32767,-32768),Ku.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):Ac(this,e,t,1),t+2},Ku.prototype.writeInt16BE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,2,32767,-32768),Ku.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):Ac(this,e,t,0),t+2},Ku.prototype.writeInt32LE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,4,2147483647,-2147483648),Ku.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):Tc(this,e,t,1),t+4},Ku.prototype.writeInt32BE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),Ku.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):Tc(this,e,t,0),t+4},Ku.prototype.writeFloatLE=function(e,t,r){return Sc(this,e,t,1,r)},Ku.prototype.writeFloatBE=function(e,t,r){return Sc(this,e,t,0,r)},Ku.prototype.writeDoubleLE=function(e,t,r){return _c(this,e,t,1,r)},Ku.prototype.writeDoubleBE=function(e,t,r){return _c(this,e,t,0,r)},// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Ku.prototype.copy=function(e,t,r,n){// Copy 0 bytes; we're done
if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;// Fatal error conditions
if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");// Are we oob?
n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var o,i=n-r;if(this===e&&r<t&&t<n)
// descending copy from end
for(o=i-1;o>=0;--o)e[o+t]=this[o+r];else if(i<1e3||!Ku.TYPED_ARRAY_SUPPORT)
// ascending copy from start
for(o=0;o<i;++o)e[o+t]=this[o+r];else Uint8Array.prototype.set.call(e,this.subarray(r,r+i),t);return i},// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Ku.prototype.fill=function(e,t,r,n){
// Handle string cases:
if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!Ku.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof e&&(e&=255);// Invalid ranges are not set to a default, so can range check early.
if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{var a=rc(e)?e:Dc(new Ku(e,n).toString()),s=a.length;for(i=0;i<r-t;++i)this[i+t]=a[i%s]}return this};// HELPER FUNCTIONS
// ================
var Nc=/[^+\/0-9A-Za-z-_]/g;function Dc(e,t){var r;t=t||1/0;for(var n=e.length,o=null,i=[],a=0;a<n;++a){// is surrogate component
if((r=e.charCodeAt(a))>55295&&r<57344){
// last char was a lead
if(!o){
// no lead yet
if(r>56319){
// unexpected trail
(t-=3)>-1&&i.push(239,191,189);continue}// valid lead
if(a+1===n){
// unpaired lead
(t-=3)>-1&&i.push(239,191,189);continue}o=r;continue}// 2 leads in a row
if(r<56320){(t-=3)>-1&&i.push(239,191,189),o=r;continue}// valid surrogate pair
r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);// encode utf8
if(o=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function Cc(e){return function(e){var t,r,n,o,i,a;Uu||Vu();var s=e.length;if(s%4>0)throw new Error("Invalid string. Length must be a multiple of 4");// the number of equal signs (place holders)
// if there are two placeholders, than the two characters before it
// represent one byte
// if there is only one, then the three characters before it represent 2 bytes
// this is just a cheap hack to not do indexOf twice
i="="===e[s-2]?2:"="===e[s-1]?1:0,// base64 is 4/3 + up to two characters of the original data
a=new Fu(3*s/4-i),// if there are placeholders, only get up to the last complete 4 chars
n=i>0?s-4:s;var u=0;for(t=0,r=0;t<n;t+=4,r+=3)o=ju[e.charCodeAt(t)]<<18|ju[e.charCodeAt(t+1)]<<12|ju[e.charCodeAt(t+2)]<<6|ju[e.charCodeAt(t+3)],a[u++]=o>>16&255,a[u++]=o>>8&255,a[u++]=255&o;return 2===i?(o=ju[e.charCodeAt(t)]<<2|ju[e.charCodeAt(t+1)]>>4,a[u++]=255&o):1===i&&(o=ju[e.charCodeAt(t)]<<10|ju[e.charCodeAt(t+1)]<<4|ju[e.charCodeAt(t+2)]>>2,a[u++]=o>>8&255,a[u++]=255&o),a}(function(e){// Node converts strings with length < 2 to ''
if((
// Node strips out invalid characters like \n and \t from the string, base64-js does not
e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(Nc,"")).length<2)return"";// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
for(;e.length%4!=0;)e+="=";return e}(e))}function kc(e,t,r,n){for(var o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function Oc(e){return null!=e&&(!!e._isBuffer||Rc(e)||// For Node v0.10 support. Remove this eventually.
function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&Rc(e.slice(0,0))}(e))}function Rc(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var Lc="function"==typeof Object.create?function(e,t){
// implementation from standard node.js 'util' module
e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:0,writable:1,configurable:1}})}:function(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e},qc=/%[sdj%]/g;function Ic(e){if(!Kc(e)){for(var t=[],r=0;r<arguments.length;r++)t.push(Uc(arguments[r]));return t.join(" ")}r=1;for(var n=arguments,o=n.length,i=String(e).replace(qc,(function(e){if("%%"===e)return"%";if(r>=o)return e;switch(e){case"%s":return String(n[r++]);case"%d":return Number(n[r++]);case"%j":try{return JSON.stringify(n[r++])}catch(e){return"[Circular]"}default:return e}})),a=n[r];r<o;a=n[++r])$c(a)||!Xc(a)?i+=" "+a:i+=" "+Uc(a);return i}
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
function Bc(e,t){
// Allow for deprecating things in the process of starting up.
if(Zc(nr.process))return function(){return Bc(e,t).apply(this,arguments)};if(1==Dr.noDeprecation)return e;var r=0;return function(){if(!r){if(Dr.throwDeprecation)throw new Error(t);Dr.traceDeprecation?console.trace(t):console.error(t),r=1}return e.apply(this,arguments)}}var Pc,jc={};function Fc(e){return Zc(Pc)&&(Pc=Dr.env.NODE_DEBUG||""),e=e.toUpperCase(),jc[e]||(new RegExp("\\b"+e+"\\b","i").test(Pc)?jc[e]=function(){var t=Ic.apply(null,arguments);console.error("%s %d: %s",e,0,t)}:jc[e]=function(){}),jc[e]}
/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
/* legacy: obj, showHidden, depth, colors*/function Uc(e,t){
// default options
var r={seen:[],stylize:Mc};// legacy...
return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),Wc(t)?
// legacy...
r.showHidden=t:t&&
// got an "options" object
sl(r,t),// set default options
Zc(r.showHidden)&&(r.showHidden=0),Zc(r.depth)&&(r.depth=2),Zc(r.colors)&&(r.colors=0),Zc(r.customInspect)&&(r.customInspect=1),r.colors&&(r.stylize=Vc),Hc(r,e,r.depth)}// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
function Vc(e,t){var r=Uc.styles[t];return r?"["+Uc.colors[r][0]+"m"+e+"["+Uc.colors[r][1]+"m":e}function Mc(e,t){return e}function Hc(e,t,r){
// Provide a hook for user-specified inspect functions.
// Check that value is an object with an inspect function on it
if(e.customInspect&&t&&rl(t.inspect)&&// Filter out the util module, it's inspect function is special
t.inspect!==Uc&&(!t.constructor||t.constructor.prototype!==t)){var n=t.inspect(r,e);return Kc(n)||(n=Hc(e,n,r)),n}// Primitive types cannot have properties
var o=function(e,t){if(Zc(t))return e.stylize("undefined","undefined");if(Kc(t)){var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(r,"string")}return Jc(t)?e.stylize(""+t,"number"):Wc(t)?e.stylize(""+t,"boolean"):// For some reason typeof null is "object", so special case here.
$c(t)?e.stylize("null","null"):void 0}(e,t);if(o)return o;// Look up the keys of the object.
var i=Object.keys(t),a=function(e){var t={};return e.forEach((function(e,r){t[e]=1})),t}(i);// IE doesn't make error fields non-enumerable
// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
if(e.showHidden&&(i=Object.getOwnPropertyNames(t)),tl(t)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return zc(t);// Some type of object without properties can be shortcutted.
if(0===i.length){if(rl(t)){var s=t.name?": "+t.name:"";return e.stylize("[Function"+s+"]","special")}if(Qc(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(el(t))return e.stylize(Date.prototype.toString.call(t),"date");if(tl(t))return zc(t)}var u,c="",l=0,f=["{","}"];// Make Array say that they are Array
return Yc(t)&&(l=1,f=["[","]"]),// Make functions say that they are functions
rl(t)&&(c=" [Function"+(t.name?": "+t.name:"")+"]"),// Make RegExps say that they are RegExps
Qc(t)&&(c=" "+RegExp.prototype.toString.call(t)),// Make dates with properties first say the date
el(t)&&(c=" "+Date.prototype.toUTCString.call(t)),// Make error with message first say the error
tl(t)&&(c=" "+zc(t)),0!==i.length||l&&0!=t.length?r<0?Qc(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),u=l?function(e,t,r,n,o){for(var i=[],a=0,s=t.length;a<s;++a)ul(t,String(a))?i.push(Gc(e,t,r,n,String(a),1)):i.push("");return o.forEach((function(o){o.match(/^\d+$/)||i.push(Gc(e,t,r,n,o,1))})),i}(e,t,r,a,i):i.map((function(n){return Gc(e,t,r,a,n,l)})),e.seen.pop(),function(e,t,r){return e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1]:r[0]+t+" "+e.join(", ")+" "+r[1]}// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
(u,c,f)):f[0]+c+f[1]}function zc(e){return"["+Error.prototype.toString.call(e)+"]"}function Gc(e,t,r,n,o,i){var a,s,u;if((u=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?s=u.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):u.set&&(s=e.stylize("[Setter]","special")),ul(n,o)||(a="["+o+"]"),s||(e.seen.indexOf(u.value)<0?(s=$c(r)?Hc(e,u.value,null):Hc(e,u.value,r-1)).indexOf("\n")>-1&&(s=i?s.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+s.split("\n").map((function(e){return"   "+e})).join("\n")):s=e.stylize("[Circular]","special")),Zc(a)){if(i&&o.match(/^\d+$/))return s;(a=JSON.stringify(""+o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=e.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=e.stylize(a,"string"))}return a+": "+s}function Yc(e){return Array.isArray(e)}function Wc(e){return"boolean"==typeof e}function $c(e){return null===e}function Jc(e){return"number"==typeof e}function Kc(e){return"string"==typeof e}function Zc(e){return void 0===e}function Qc(e){return Xc(e)&&"[object RegExp]"===nl(e)}function Xc(e){return"object"===qo(e)&&null!==e}function el(e){return Xc(e)&&"[object Date]"===nl(e)}function tl(e){return Xc(e)&&("[object Error]"===nl(e)||e instanceof Error)}function rl(e){return"function"==typeof e}function nl(e){return Object.prototype.toString.call(e)}function ol(e){return e<10?"0"+e.toString(10):e.toString(10)}Uc.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},// Don't use 'blue' not visible on cmd.exe
Uc.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",
// "name": intentionally not styling
regexp:"red"};var il=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];// 26 Feb 16:19:34
function al(){var e=new Date,t=[ol(e.getHours()),ol(e.getMinutes()),ol(e.getSeconds())].join(":");return[e.getDate(),il[e.getMonth()],t].join(" ")}// log is just a thin wrapper to console.log that prepends a timestamp
function sl(e,t){
// Don't do anything if add isn't an object
if(!t||!Xc(t))return e;for(var r=Object.keys(t),n=r.length;n--;)e[r[n]]=t[r[n]];return e}function ul(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var cl={inherits:Lc,_extend:sl,log:function(){console.log("%s - %s",al(),Ic.apply(null,arguments))},isBuffer:function(e){return Oc(e)},isPrimitive:function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"===qo(e)||// ES6 symbol
void 0===e},isFunction:rl,isError:tl,isDate:el,isObject:Xc,isRegExp:Qc,isUndefined:Zc,isSymbol:function(e){return"symbol"===qo(e)},isString:Kc,isNumber:Jc,isNullOrUndefined:function(e){return null==e},isNull:$c,isBoolean:Wc,isArray:Yc,inspect:Uc,deprecate:Bc,format:Ic,debuglog:Fc};function ll(){this.head=null,this.tail=null,this.length=0}ll.prototype.push=function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length},ll.prototype.unshift=function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length},ll.prototype.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},ll.prototype.clear=function(){this.head=this.tail=null,this.length=0},ll.prototype.join=function(e){if(0===this.length)return"";for(var t=this.head,r=""+t.data;t=t.next;)r+=e+t.data;return r},ll.prototype.concat=function(e){if(0===this.length)return Ku.alloc(0);if(1===this.length)return this.head.data;for(var t=Ku.allocUnsafe(e>>>0),r=this.head,n=0;r;)r.data.copy(t,n),n+=r.data.length,r=r.next;return t};var fl=Ku.isEncoding||function(e){switch(e&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return 1;default:return 0}};// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
function pl(e){switch(this.encoding=(e||"utf8").toLowerCase().replace(/[-_]/,""),function(e){if(e&&!fl(e))throw new Error("Unknown encoding: "+e)}(e),this.encoding){case"utf8":
// CESU-8 represents each of Surrogate Pair by 3-bytes
this.surrogateSize=3;break;case"ucs2":case"utf16le":
// UTF-16 represents each of Surrogate Pair by 2-bytes
this.surrogateSize=2,this.detectIncompleteChar=dl;break;case"base64":
// Base-64 stores 3 bytes in 4 chars, and pads the remainder.
this.surrogateSize=3,this.detectIncompleteChar=gl;break;default:return void(this.write=hl)}// Enough space to store all bytes of a single character. UTF-8 needs 4
// bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
this.charBuffer=new Ku(6),// Number of bytes received for the current incomplete multi-byte character.
this.charReceived=0,// Number of bytes expected for the current incomplete multi-byte character.
this.charLength=0}
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.

// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
function hl(e){return e.toString(this.encoding)}function dl(e){this.charReceived=e.length%2,this.charLength=this.charReceived?2:0}function gl(e){this.charReceived=e.length%3,this.charLength=this.charReceived?3:0}pl.prototype.write=function(e){// if our last write ended with an incomplete multibyte character
for(var t="";this.charLength;){
// determine how many remaining bytes this buffer has to offer for this char
var r=e.length>=this.charLength-this.charReceived?this.charLength-this.charReceived:e.length;// add the new bytes to the char buffer
if(e.copy(this.charBuffer,this.charReceived,0,r),this.charReceived+=r,this.charReceived<this.charLength)
// still not enough chars in this buffer? wait for more ...
return"";// remove bytes belonging to the current character from the buffer
if(e=e.slice(r,e.length),!((n=(// get the character that was split
t=this.charBuffer.slice(0,this.charLength).toString(this.encoding)).charCodeAt(t.length-1))>=55296&&n<=56319)){// if there are no more bytes in this buffer, just emit our char
if(this.charReceived=this.charLength=0,0===e.length)return t;break}this.charLength+=this.surrogateSize,t=""}// determine and set charLength / charReceived
this.detectIncompleteChar(e);var n,o=e.length;// CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
if(this.charLength&&(
// buffer the incomplete character bytes we got
e.copy(this.charBuffer,0,e.length-this.charReceived,o),o-=this.charReceived),o=(t+=e.toString(this.encoding,0,o)).length-1,(n=t.charCodeAt(o))>=55296&&n<=56319){var i=this.surrogateSize;return this.charLength+=i,this.charReceived+=i,this.charBuffer.copy(this.charBuffer,i,0,i),e.copy(this.charBuffer,0,0,i),t.substring(0,o)}// or just emit the charStr
return t},// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
pl.prototype.detectIncompleteChar=function(e){// Figure out if one of the last i bytes of our buffer announces an
// incomplete char.
for(
// determine how many bytes we have to check at the end of this buffer
var t=e.length>=3?3:e.length;t>0;t--){var r=e[e.length-t];// See http://en.wikipedia.org/wiki/UTF-8#Description
// 110XXXXX
if(1==t&&r>>5==6){this.charLength=2;break}// 1110XXXX
if(t<=2&&r>>4==14){this.charLength=3;break}// 11110XXX
if(t<=3&&r>>3==30){this.charLength=4;break}}this.charReceived=t},pl.prototype.end=function(e){var t="";if(e&&e.length&&(t=this.write(e)),this.charReceived){var r=this.charReceived,n=this.charBuffer,o=this.encoding;t+=n.slice(0,r).toString(o)}return t},vl.ReadableState=yl;var ml=Fc("stream");function yl(e,t){e=e||{},// object stream flag. Used to make read(n) ignore n and to
// make all the buffer merging and length checks go away
this.objectMode=!!e.objectMode,t instanceof Gl&&(this.objectMode=this.objectMode||!!e.readableObjectMode);// the point at which it stops calling _read() to fill the buffer
// Note: 0 is a valid value, means "don't call _read preemptively ever"
var r=e.highWaterMark,n=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:n,// cast to ints.
this.highWaterMark=~~this.highWaterMark,// A linked list is used to store data chunks instead of an array because the
// linked list can remove elements from the beginning faster than
// array.shift()
this.buffer=new ll,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=0,this.endEmitted=0,this.reading=0,// a flag to be able to tell if the onwrite cb is called immediately,
// or on a later tick.  We set this to true at first, because any
// actions that shouldn't happen until "later" should generally also
// not happen before the first write call.
this.sync=1,// whenever we return null, then we set a flag to say
// that we're awaiting a 'readable' event emission.
this.needReadable=0,this.emittedReadable=0,this.readableListening=0,this.resumeScheduled=0,// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=e.defaultEncoding||"utf8",// when piping, we only care about 'readable' events that happen
// after read()ing all the bytes and not getting any pushback.
this.ranOut=0,// the number of writers that are awaiting a drain event in .pipe()s
this.awaitDrain=0,// if true, a maybeReadMore has been scheduled
this.readingMore=0,this.decoder=null,this.encoding=null,e.encoding&&(this.decoder=new pl(e.encoding),this.encoding=e.encoding)}function vl(e){if(!(this instanceof vl))return new vl(e);this._readableState=new yl(e,this),// legacy
this.readable=1,e&&"function"==typeof e.read&&(this._read=e.read),Jr.call(this)}// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
function bl(e,t,r,n,o){var i=function(e,t){var r=null;return Oc(t)||"string"==typeof t||null==t||e.objectMode||(r=new TypeError("Invalid non-string/buffer chunk")),r}(t,r);if(i)e.emit("error",i);else if(null===r)t.reading=0,function(e,t){if(!t.ended){if(t.decoder){var r=t.decoder.end();r&&r.length&&(t.buffer.push(r),t.length+=t.objectMode?1:r.length)}t.ended=1,// emit 'readable' now to make sure it gets picked up.
El(e)}}// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
(e,t);else if(t.objectMode||r&&r.length>0)if(t.ended&&!o){var a=new Error("stream.push() after EOF");e.emit("error",a)}else if(t.endEmitted&&o){var s=new Error("stream.unshift() after end event");e.emit("error",s)}else{var u;!t.decoder||o||n||(r=t.decoder.write(r),u=!t.objectMode&&0===r.length),o||(t.reading=0),// Don't add to the buffer if we've decoded to an empty string chunk and
// we're not in object mode
u||(
// if we want the data now, just emit it.
t.flowing&&0===t.length&&!t.sync?(e.emit("data",r),e.read(0)):(
// update the buffer info.
t.length+=t.objectMode?1:r.length,o?t.buffer.unshift(r):t.buffer.push(r),t.needReadable&&El(e))),// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function(e,t){t.readingMore||(t.readingMore=1,gr(Tl,e,t))}(e,t)}else o||(t.reading=0);// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
return function(e){return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}// backwards compatibility.
(t)}// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function wl(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?
// Only flow one buffer at a time
t.flowing&&t.length?t.buffer.head.data.length:t.length:(// If we're asking for more than the current hwm, then raise the hwm.
e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=8388608?e=8388608:(
// Get the next highest power of 2 to prevent increasing hwm excessively in
// tiny amounts
e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:// Don't have enough
t.ended?t.length:(t.needReadable=1,0))}// you can override either this method, or the async _read(n) below.
function El(e){var t=e._readableState;t.needReadable=0,t.emittedReadable||(ml("emitReadable",t.flowing),t.emittedReadable=1,t.sync?gr(Al,e):Al(e))}function Al(e){ml("emit readable"),e.emit("readable"),_l(e)}function Tl(e,t){for(var r=t.length;!t.reading&&!t.flowing&&!t.ended&&t.length<t.highWaterMark&&(ml("maybeReadMore read 0"),e.read(0),r!==t.length);)r=t.length;t.readingMore=0}// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
function xl(e){ml("readable nexttick read 0"),e.read(0)}// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
function Sl(e,t){t.reading||(ml("resume read 0"),e.read(0)),t.resumeScheduled=0,t.awaitDrain=0,e.emit("resume"),_l(e),t.flowing&&!t.reading&&e.read(0)}function _l(e){var t=e._readableState;for(ml("flow",t.flowing);t.flowing&&null!==e.read(););}// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function Nl(e,t){
// nothing buffered
return 0===t.length?null:(t.objectMode?r=t.buffer.shift():!e||e>=t.length?(
// read it all, truncate the list
r=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.head.data:t.buffer.concat(t.length),t.buffer.clear()):
// read part of list
r=// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function(e,t,r){var n;return e<t.head.data.length?(
// slice is the same for buffers and strings
n=t.head.data.slice(0,e),t.head.data=t.head.data.slice(e)):
// first chunk is a perfect match
n=e===t.head.data.length?t.shift():r?// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function(e,t){var r=t.head,n=1,o=r.data;for(e-=o.length;r=r.next;){var i=r.data,a=e>i.length?i.length:e;if(a===i.length?o+=i:o+=i.slice(0,e),0==(e-=a)){a===i.length?(++n,r.next?t.head=r.next:t.head=t.tail=null):(t.head=r,r.data=i.slice(a));break}++n}return t.length-=n,o}// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
(e,t):function(e,t){var r=Ku.allocUnsafe(e),n=t.head,o=1;for(n.data.copy(r),e-=n.data.length;n=n.next;){var i=n.data,a=e>i.length?i.length:e;if(i.copy(r,r.length-e,0,a),0==(e-=a)){a===i.length?(++o,n.next?t.head=n.next:t.head=t.tail=null):(t.head=n,n.data=i.slice(a));break}++o}return t.length-=o,r}(e,t),n}(e,t.buffer,t.decoder),r);var r}function Dl(e){var t=e._readableState;// If we get here before consuming all the bytes, then that is a
// bug in node.  Should never happen.
if(t.length>0)throw new Error('"endReadable()" called on non-empty stream');t.endEmitted||(t.ended=1,gr(Cl,t,e))}function Cl(e,t){
// Check that we didn't get one last unshift.
e.endEmitted||0!==e.length||(e.endEmitted=1,t.readable=0,t.emit("end"))}function kl(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}function Ol(){}function Rl(e,t,r){this.chunk=e,this.encoding=t,this.callback=r,this.next=null}function Ll(e,t){Object.defineProperty(this,"buffer",{get:Bc((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.")}),e=e||{},// object stream flag to indicate whether or not this stream
// contains buffers or objects.
this.objectMode=!!e.objectMode,t instanceof Gl&&(this.objectMode=this.objectMode||!!e.writableObjectMode);// the point at which write() starts returning false
// Note: 0 is a valid value, means that we always return false if
// the entire buffer is not flushed immediately on write()
var r=e.highWaterMark,n=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:n,// cast to ints.
this.highWaterMark=~~this.highWaterMark,this.needDrain=0,// at the start of calling end()
this.ending=0,// when end() has been called, and returned
this.ended=0,// when 'finish' is emitted
this.finished=0;// should we decode strings into buffers before passing to _write?
// this is here so that some node-core streams can optimize string
// handling at a lower level.
var o=0==e.decodeStrings;this.decodeStrings=!o,// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=e.defaultEncoding||"utf8",// not an actual buffer we keep track of, but a measurement
// of how much we're waiting to get pushed to some underlying
// socket or file.
this.length=0,// a flag to see when we're in the middle of a write.
this.writing=0,// when true all writes will be buffered until .uncork() call
this.corked=0,// a flag to be able to tell if the onwrite cb is called immediately,
// or on a later tick.  We set this to true at first, because any
// actions that shouldn't happen until "later" should generally also
// not happen before the first write call.
this.sync=1,// a flag to know if we're processing previously buffered items, which
// may call the _write() callback in the same tick, so that we don't
// end up in an overlapped onwrite situation.
this.bufferProcessing=0,// the callback that's passed to _write(chunk,cb)
this.onwrite=function(e){!function(e,t){var r=e._writableState,n=r.sync,o=r.writecb;if(function(e){e.writing=0,e.writecb=null,e.length-=e.writelen,e.writelen=0}(r),t)!function(e,t,r,n,o){--t.pendingcb,r?gr(o,n):o(n),e._writableState.errorEmitted=1,e.emit("error",n)}(e,r,n,t,o);else{
// Check if we're actually ready to finish, but don't emit yet
var i=jl(r);i||r.corked||r.bufferProcessing||!r.bufferedRequest||Pl(e,r),n?
/*<replacement>*/
gr(Bl,e,r,i,o):Bl(e,r,i,o)}}(t,e)},// the callback that the user supplies to write(chunk,encoding,cb)
this.writecb=null,// the amount that is being written when _write is called.
this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,// number of pending user-supplied write callbacks
// this must be 0 before 'finish' can be emitted
this.pendingcb=0,// emit prefinish if the only thing we're waiting for is _write cbs
// This is relevant for synchronous Transform streams
this.prefinished=0,// True if the error was already emitted and should not be thrown again
this.errorEmitted=0,// count buffered requests
this.bufferedRequestCount=0,// allocate the first CorkedRequest, there is always
// one allocated and free to use, and we maintain at most two
this.corkedRequestsFree=new Vl(this)}function ql(e){
// Writable ctor is applied to Duplexes, though they're not
// instanceof Writable, they're instanceof Readable.
if(!(this instanceof ql||this instanceof Gl))return new ql(e);this._writableState=new Ll(e,this),// legacy.
this.writable=1,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev)),Jr.call(this)}// Otherwise people can pipe Writable streams, which is just wrong.
function Il(e,t,r,n,o,i,a){t.writelen=n,t.writecb=a,t.writing=1,t.sync=1,r?e._writev(o,t.onwrite):e._write(o,i,t.onwrite),t.sync=0}function Bl(e,t,r,n){r||// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function(e,t){0===t.length&&t.needDrain&&(t.needDrain=0,e.emit("drain"))}// if there's something in the buffer waiting, then process it
(e,t),t.pendingcb--,n(),Ul(e,t)}function Pl(e,t){t.bufferProcessing=1;var r=t.bufferedRequest;if(e._writev&&r&&r.next){
// Fast case, write everything using _writev()
var n=t.bufferedRequestCount,o=new Array(n),i=t.corkedRequestsFree;i.entry=r;for(var a=0;r;)o[a]=r,r=r.next,a+=1;Il(e,t,1,t.length,o,"",i.finish),// doWrite is almost always async, defer these to save a bit of time
// as the hot path ends with doWrite
t.pendingcb++,t.lastBufferedRequest=null,i.next?(t.corkedRequestsFree=i.next,i.next=null):t.corkedRequestsFree=new Vl(t)}else{
// Slow case, write chunks one-by-one
for(;r;){var s=r.chunk,u=r.encoding,c=r.callback;// if we didn't call the onwrite immediately, then
// it means that we need to wait until it does.
// also, that means that the chunk and cb are currently
// being processed, so move the buffer counter past them.
if(Il(e,t,0,t.objectMode?1:s.length,s,u,c),r=r.next,t.writing)break}null===r&&(t.lastBufferedRequest=null)}t.bufferedRequestCount=0,t.bufferedRequest=r,t.bufferProcessing=0}function jl(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function Fl(e,t){t.prefinished||(t.prefinished=1,e.emit("prefinish"))}function Ul(e,t){var r=jl(t);return r&&(0===t.pendingcb?(Fl(e,t),t.finished=1,e.emit("finish")):Fl(e,t)),r}// It seems a linked list but it is not
// there will be only 2 of these for each stream
function Vl(e){var t=this;this.next=null,this.entry=null,this.finish=function(r){var n=t.entry;for(t.entry=null;n;){var o=n.callback;e.pendingcb--,o(r),n=n.next}e.corkedRequestsFree?e.corkedRequestsFree.next=t:e.corkedRequestsFree=t}}Lc(vl,Jr),vl.prototype.push=function(e,t){var r=this._readableState;return r.objectMode||"string"!=typeof e||(t=t||r.defaultEncoding)!==r.encoding&&(e=Ku.from(e,t),t=""),bl(this,r,e,t,0)},// Unshift should *always* be something directly out of read()
vl.prototype.unshift=function(e){return bl(this,this._readableState,e,"",1)},vl.prototype.isPaused=function(){return 0==this._readableState.flowing},vl.prototype.setEncoding=function(e){return this._readableState.decoder=new pl(e),this._readableState.encoding=e,this},vl.prototype.read=function(e){ml("read",e),e=parseInt(e,10);var t=this._readableState,r=e;// if we're doing read(0) to trigger a readable event, but we
// already have a bunch of data in the buffer, then just trigger
// the 'readable' event and move on.
if(0!==e&&(t.emittedReadable=0),0===e&&t.needReadable&&(t.length>=t.highWaterMark||t.ended))return ml("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?Dl(this):El(this),null;// if we've ended, and we're now clear, then finish it up.
if(0===(e=wl(e,t))&&t.ended)return 0===t.length&&Dl(this),null;// All the actual chunk generation logic needs to be
// *below* the call to _read.  The reason is that in certain
// synthetic stream cases, such as passthrough streams, _read
// may be a completely synchronous operation which may change
// the state of the read buffer, providing enough data when
// before there was *not* enough.

// So, the steps are:
// 1. Figure out what the state of things will be after we do
// a read from the buffer.

// 2. If that resulting state will trigger a _read, then call _read.
// Note that this may be asynchronous, or synchronous.  Yes, it is
// deeply ugly to write APIs this way, but that still doesn't mean
// that the Readable class should behave improperly, as streams are
// designed to be sync/async agnostic.
// Take note if the _read call is sync or async (ie, if the read call
// has returned yet), so that we know whether or not it's safe to emit
// 'readable' etc.

// 3. Actually pull the requested chunks out of the buffer and return.
// if we need a readable event, then we need to do some reading.
var n,o=t.needReadable;return ml("need readable",o),// if we currently have less than the highWaterMark, then also read some
(0===t.length||t.length-e<t.highWaterMark)&&ml("length less than watermark",o=1),// however, if we've ended, then there's no point, and if we're already
// reading, then it's unnecessary.
t.ended||t.reading?ml("reading or ended",o=0):o&&(ml("do read"),t.reading=1,t.sync=1,// if the length is currently zero, then we *need* a readable event.
0===t.length&&(t.needReadable=1),// call internal read method
this._read(t.highWaterMark),t.sync=0,// If _read pushed data synchronously, then `reading` will be false,
// and we need to re-evaluate how much data we can return to the user.
t.reading||(e=wl(r,t))),null===(n=e>0?Nl(e,t):null)?(t.needReadable=1,e=0):t.length-=e,0===t.length&&(
// If we have nothing in the buffer, then we want to know
// as soon as we *do* get something into the buffer.
t.ended||(t.needReadable=1),// If we tried to read() past the EOF, then emit end on the next tick.
r!==e&&t.ended&&Dl(this)),null!==n&&this.emit("data",n),n},vl.prototype._read=function(e){this.emit("error",new Error("not implemented"))},vl.prototype.pipe=function(e,t){var r=this,n=this._readableState;switch(n.pipesCount){case 0:n.pipes=e;break;case 1:n.pipes=[n.pipes,e];break;default:n.pipes.push(e)}n.pipesCount+=1,ml("pipe count=%d opts=%j",n.pipesCount,t);var o=t&&0==t.end?c:a;function i(e){ml("onunpipe"),e===r&&c()}function a(){ml("onend"),e.end()}// when the dest drains, it reduces the awaitDrain counter
// on the source.  This would be more elegant with a .once()
// handler in flow(), but adding and removing repeatedly is
// too slow.
n.endEmitted?gr(o):r.once("end",o),e.on("unpipe",i);var s=function(e){return function(){var t=e._readableState;ml("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&e.listeners("data").length&&(t.flowing=1,_l(e))}}(r);e.on("drain",s);var u=0;function c(){ml("cleanup"),// cleanup event handlers once the pipe is broken
e.removeListener("close",h),e.removeListener("finish",d),e.removeListener("drain",s),e.removeListener("error",p),e.removeListener("unpipe",i),r.removeListener("end",a),r.removeListener("end",c),r.removeListener("data",f),u=1,// if the reader is waiting for a drain event from this
// specific writer, then it would cause it to never start
// flowing again.
// So, if this is awaiting a drain, then we just call it now.
// If we don't know, then assume that we are waiting for one.
!n.awaitDrain||e._writableState&&!e._writableState.needDrain||s()}// If the user pushes more data while we're writing to dest then we'll end up
// in ondata again. However, we only want to increase awaitDrain once because
// dest will only emit one 'drain' event for the multiple writes.
// => Introduce a guard on increasing awaitDrain.
var l=0;function f(t){ml("ondata"),l=0,0!=e.write(t)||l||(
// If the user unpiped during `dest.write()`, it is possible
// to get stuck in a permanently paused state if that write
// also returned false.
// => Check whether `dest` is still a piping destination.
(1===n.pipesCount&&n.pipes===e||n.pipesCount>1&&-1!==kl(n.pipes,e))&&!u&&(ml("false write response, pause",r._readableState.awaitDrain),r._readableState.awaitDrain++,l=1),r.pause())}// if the dest has an error, then stop piping into it.
// however, don't suppress the throwing behavior for this.
function p(t){ml("onerror",t),g(),e.removeListener("error",p),0===function(e,t){return e.listeners(t).length}(e,"error")&&e.emit("error",t)}// Make sure our error handler is attached before userland ones.
// Both close and finish should trigger unpipe, but only once.
function h(){e.removeListener("finish",d),g()}function d(){ml("onfinish"),e.removeListener("close",h),g()}function g(){ml("unpipe"),r.unpipe(e)}// tell the dest that it's being piped to
return r.on("data",f),function(e,t,r){
// Sadly this is not cacheable as some libraries bundle their own
// event emitter implementation with them.
if("function"==typeof e.prependListener)return e.prependListener(t,r);
// This is a hack to make sure that our error handler is attached before any
// userland ones.  NEVER DO THIS. This is here only because this code needs
// to continue to work with older versions of Node.js that do not include
// the prependListener() method. The goal is to eventually remove this hack.
e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(r):e._events[t]=[r,e._events[t]]:e.on(t,r)}(e,"error",p),e.once("close",h),e.once("finish",d),e.emit("pipe",r),// start the flow if it hasn't been started already.
n.flowing||(ml("pipe resume"),r.resume()),e},vl.prototype.unpipe=function(e){var t=this._readableState;// if we're not piping anywhere, then do nothing.
if(0===t.pipesCount)return this;// just one destination.  most common case.
if(1===t.pipesCount)
// passed in one, but it's not the right one.
return e&&e!==t.pipes||(e||(e=t.pipes),// got a match.
t.pipes=null,t.pipesCount=0,t.flowing=0,e&&e.emit("unpipe",this)),this;// slow case. multiple pipe destinations.
if(!e){
// remove all.
var r=t.pipes,n=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=0;for(var o=0;o<n;o++)r[o].emit("unpipe",this);return this}// try to find the right one.
var i=kl(t.pipes,e);return-1===i||(t.pipes.splice(i,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this)),this},// set up data events if they are asked for
// Ensure readable listeners eventually get something
vl.prototype.on=function(e,t){var r=Jr.prototype.on.call(this,e,t);if("data"===e)
// Start flowing on next tick if stream isn't explicitly paused
0!=this._readableState.flowing&&this.resume();else if("readable"===e){var n=this._readableState;n.endEmitted||n.readableListening||(n.readableListening=n.needReadable=1,n.emittedReadable=0,n.reading?n.length&&El(this):gr(xl,this))}return r},vl.prototype.addListener=vl.prototype.on,vl.prototype.resume=function(){var e=this._readableState;return e.flowing||(ml("resume"),e.flowing=1,function(e,t){t.resumeScheduled||(t.resumeScheduled=1,gr(Sl,e,t))}(this,e)),this},vl.prototype.pause=function(){return ml("call pause flowing=%j",this._readableState.flowing),0!=this._readableState.flowing&&(ml("pause"),this._readableState.flowing=0,this.emit("pause")),this},vl.prototype.wrap=function(e){var t=this._readableState,r=0,n=this;// proxy all the other methods.
// important when wrapping filters and duplexes.
for(var o in e.on("end",(function(){if(ml("wrapped end"),t.decoder&&!t.ended){var e=t.decoder.end();e&&e.length&&n.push(e)}n.push(null)})),e.on("data",(function(o){// don't skip over falsy values in objectMode
ml("wrapped data"),t.decoder&&(o=t.decoder.write(o)),t.objectMode&&null==o||(t.objectMode||o&&o.length)&&(n.push(o)||(r=1,e.pause()))})),e)void 0===this[o]&&"function"==typeof e[o]&&(this[o]=function(t){return function(){return e[t].apply(e,arguments)}}(o));// proxy certain important events.
return function(e,t){for(var r=0,n=e.length;r<n;r++)t(e[r],r)}(["error","close","destroy","pause","resume"],(function(t){e.on(t,n.emit.bind(n,t))})),// when we try to consume some more bytes, simply unpause the
// underlying stream.
n._read=function(t){ml("wrapped _read",t),r&&(r=0,e.resume())},n},// exposed for testing purposes only.
vl._fromList=Nl,ql.WritableState=Ll,Lc(ql,Jr),Ll.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},ql.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},ql.prototype.write=function(e,t,r){var n=this._writableState,o=0;return"function"==typeof t&&(r=t,t=null),Ku.isBuffer(e)?t="buffer":t||(t=n.defaultEncoding),"function"!=typeof r&&(r=Ol),n.ended?function(e,t){var r=new Error("write after end");// TODO: defer error events consistently everywhere, not just the cb
e.emit("error",r),gr(t,r)}// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
(this,r):function(e,t,r,n){var o=1,i=0;// Always throw error if a null is written
// if we are not in object mode then throw
// if it is not a buffer, string, or undefined.
return null===r?i=new TypeError("May not write null values to stream"):Ku.isBuffer(r)||"string"==typeof r||void 0===r||t.objectMode||(i=new TypeError("Invalid non-string/buffer chunk")),i&&(e.emit("error",i),gr(n,i),o=0),o}(this,n,e,r)&&(n.pendingcb++,o=// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function(e,t,r,n,o){r=function(e,t,r){return e.objectMode||0==e.decodeStrings||"string"!=typeof t||(t=Ku.from(t,r)),t}(t,r,n),Ku.isBuffer(r)&&(n="buffer");var i=t.objectMode?1:r.length;t.length+=i;var a=t.length<t.highWaterMark;// we must ensure that previous needDrain will not be reset to false.
if(a||(t.needDrain=1),t.writing||t.corked){var s=t.lastBufferedRequest;t.lastBufferedRequest=new Rl(r,n,o),s?s.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else Il(e,t,0,i,r,n,o);return a}(this,n,e,t,r)),o},ql.prototype.cork=function(){this._writableState.corked++},ql.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.finished||e.bufferProcessing||!e.bufferedRequest||Pl(this,e))},ql.prototype.setDefaultEncoding=function(e){if(
// node::ParseEncoding() requires lower case.
"string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+e);return this._writableState.defaultEncoding=e,this},ql.prototype._write=function(e,t,r){r(new Error("not implemented"))},ql.prototype._writev=null,ql.prototype.end=function(e,t,r){var n=this._writableState;"function"==typeof e?(r=e,e=null,t=null):"function"==typeof t&&(r=t,t=null),null!=e&&this.write(e,t),// .end() fully uncorks
n.corked&&(n.corked=1,this.uncork()),// ignore unnecessary end() calls.
n.ending||n.finished||function(e,t,r){t.ending=1,Ul(e,t),r&&(t.finished?gr(r):e.once("finish",r)),t.ended=1,e.writable=0}(this,n,r)},Lc(Gl,vl);for(var Ml=Object.keys(ql.prototype),Hl=0;Hl<Ml.length;Hl++){var zl=Ml[Hl];Gl.prototype[zl]||(Gl.prototype[zl]=ql.prototype[zl])}function Gl(e){if(!(this instanceof Gl))return new Gl(e);vl.call(this,e),ql.call(this,e),e&&0==e.readable&&(this.readable=0),e&&0==e.writable&&(this.writable=0),this.allowHalfOpen=1,e&&0==e.allowHalfOpen&&(this.allowHalfOpen=0),this.once("end",Yl)}// the no-half-open enforcer
function Yl(){
// if we allow half-open state, or if the writable side ended,
// then we're ok.
this.allowHalfOpen||this._writableState.ended||// no more data can be written.
// But allow more writes to happen in this tick.
gr(Wl,this)}function Wl(e){e.end()}
// a transform stream is a readable/writable stream where you do
function $l(e){this.afterTransform=function(t,r){return function(e,t,r){var n=e._transformState;n.transforming=0;var o=n.writecb;if(!o)return e.emit("error",new Error("no writecb in Transform class"));n.writechunk=null,n.writecb=null,null!=r&&e.push(r),o(t);var i=e._readableState;i.reading=0,(i.needReadable||i.length<i.highWaterMark)&&e._read(i.highWaterMark)}(e,t,r)},this.needTransform=0,this.transforming=0,this.writecb=null,this.writechunk=null,this.writeencoding=null}function Jl(e){if(!(this instanceof Jl))return new Jl(e);Gl.call(this,e),this._transformState=new $l(this);// when the writable side finishes, then flush out anything remaining.
var t=this;// start out asking for a readable event once data is transformed.
this._readableState.needReadable=1,// we have implemented the _read method, and done the other things
// that Readable wants before the first _read call, so unset the
// sync guard flag.
this._readableState.sync=0,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.once("prefinish",(function(){"function"==typeof this._flush?this._flush((function(e){Kl(t,e)})):Kl(t)}))}function Kl(e,t){if(t)return e.emit("error",t);// if there's nothing in the write buffer, then that means
// that nothing more will ever be provided
var r=e._writableState,n=e._transformState;if(r.length)throw new Error("Calling transform done when ws.length != 0");if(n.transforming)throw new Error("Calling transform done when still transforming");return e.push(null)}function Zl(e){if(!(this instanceof Zl))return new Zl(e);Jl.call(this,e)}
// part of this class) is overridden in the Readable class.
function Ql(){Jr.call(this)}Lc(Jl,Gl),Jl.prototype.push=function(e,t){return this._transformState.needTransform=0,Gl.prototype.push.call(this,e,t)},// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Jl.prototype._transform=function(e,t,r){throw new Error("Not implemented")},Jl.prototype._write=function(e,t,r){var n=this._transformState;if(n.writecb=r,n.writechunk=e,n.writeencoding=t,!n.transforming){var o=this._readableState;(n.needTransform||o.needReadable||o.length<o.highWaterMark)&&this._read(o.highWaterMark)}},// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Jl.prototype._read=function(e){var t=this._transformState;null!==t.writechunk&&t.writecb&&!t.transforming?(t.transforming=1,this._transform(t.writechunk,t.writeencoding,t.afterTransform)):
// mark that we need a transform, so that any data that comes in
// will get processed, now that we've asked for it.
t.needTransform=1},Lc(Zl,Jl),Zl.prototype._transform=function(e,t,r){r(null,e)},Lc(Ql,Jr),Ql.Readable=vl,Ql.Writable=ql,Ql.Duplex=Gl,Ql.Transform=Jl,Ql.PassThrough=Zl,// Backwards-compat with node 0.4.x
Ql.Stream=Ql,Ql.prototype.pipe=function(e,t){var r=this;function n(t){e.writable&&0==e.write(t)&&r.pause&&r.pause()}function o(){r.readable&&r.resume&&r.resume()}r.on("data",n),e.on("drain",o),// If the 'end' option is not supplied, dest.end() will be called when
// source gets the 'end' or 'close' events.  Only dest.end() once.
e._isStdio||t&&0==t.end||(r.on("end",a),r.on("close",s));var i=0;function a(){i||(i=1,e.end())}function s(){i||(i=1,"function"==typeof e.destroy&&e.destroy())}// don't leave dangling pipes when there are errors.
function u(e){if(c(),0===Jr.listenerCount(this,"error"))throw e;// Unhandled stream error in pipe.
}// remove all the event listeners that were added.
function c(){r.removeListener("data",n),e.removeListener("drain",o),r.removeListener("end",a),r.removeListener("close",s),r.removeListener("error",u),e.removeListener("error",u),r.removeListener("end",c),r.removeListener("close",c),e.removeListener("close",c)}// Allow for unix-like usage: A.pipe(B).pipe(C)
return r.on("error",u),e.on("error",u),r.on("end",c),r.on("close",c),e.on("close",c),e.emit("pipe",r),e};var Xl=Ql.Writable,ef=tf;function tf(e){if(!(this instanceof tf))return new tf(e);e=e||{},Xl.call(this,e),this.label=void 0!==e.label?e.label:"stdout"}(0,cl.inherits)(tf,Xl),tf.prototype._write=function(e,t,r){var n=e.toString?e.toString():e;0==this.label?console.log(n):console.log(this.label+":",n),gr(r)};
/**
	 * Highlight the contents of tag `name`.
	 *
	 * @private
	 * @param {string} name
	 */
var rf,nf,of,af=function(e){for(var t=document.getElementById("mocha").getElementsByTagName(e),r=0,n=t.length;r<n;++r)t[r].innerHTML=t[r].innerHTML.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\/\/(.*)/gm,'<span class="comment">//$1</span>').replace(/('.*?')/gm,'<span class="string">$1</span>').replace(/(\d+\.\d+)/gm,'<span class="number">$1</span>').replace(/(\d+)/gm,'<span class="number">$1</span>').replace(/\bnew[ \t]+(\w+)/gm,'<span class="keyword">new</span> <span class="init">$1</span>').replace(/\b(function|new|throw|return|var|if|else)\b/gm,'<span class="keyword">$1</span>')},sf=a.Promise,uf=function(e,t,r,n){try{return n?t(C(r)[0],r[1]):t(r);
// 7.4.6 IteratorClose(iterator, completion)
}catch(t){var o=e.return;throw void 0!==o&&C(o.call(e)),t}},cf=r((function(e){var t=function(e,t){this.stopped=e,this.result=t};(e.exports=function(e,r,n,o,i){var a,s,u,c,l,f,p,h=Be(r,n,o?2:1);if(i)a=e;else{if("function"!=typeof(s=As(e)))throw TypeError("Target is not iterable");
// optimisation for array iterators
if(Ss(s)){for(u=0,c=pe(e.length);c>u;u++)if((l=o?h(C(p=e[u])[0],p[1]):h(e[u]))&&l instanceof t)return l;return new t(0)}a=s.call(e)}for(f=a.next;!(p=f.call(a)).done;)if("object"==typeof(l=uf(a,h,p.value,o))&&l&&l instanceof t)return l;return new t(0)}).stop=function(e){return new t(1,e)}})),lf=/(iphone|ipod|ipad).*applewebkit/i.test(Ke),ff=a.location,pf=a.setImmediate,hf=a.clearImmediate,df=a.process,gf=a.MessageChannel,mf=a.Dispatch,yf=0,vf={},bf=function(e){
// eslint-disable-next-line no-prototype-builtins
if(vf.hasOwnProperty(e)){var t=vf[e];delete vf[e],t()}},wf=function(e){return function(){bf(e)}},Ef=function(e){bf(e.data)},Af=function(e){
// old engines have not location.origin
a.postMessage(e+"",ff.protocol+"//"+ff.host)};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
pf&&hf||(pf=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return vf[++yf]=function(){
// eslint-disable-next-line no-new-func
("function"==typeof e?e:Function(e)).apply(void 0,t)},rf(yf),yf},hf=function(e){delete vf[e]},
// Node.js 0.8-
"process"==d(df)?rf=function(e){df.nextTick(wf(e))}:mf&&mf.now?rf=function(e){mf.now(wf(e))}:gf&&!lf?(of=(nf=new gf).port2,nf.port1.onmessage=Ef,rf=Be(of.postMessage,of,1)):!a.addEventListener||"function"!=typeof postMessage||a.importScripts||s(Af)||"file:"===ff.protocol?rf="onreadystatechange"in S("script")?function(e){An.appendChild(S("script")).onreadystatechange=function(){An.removeChild(this),bf(e)}}:function(e){setTimeout(wf(e),0)}:(rf=Af,a.addEventListener("message",Ef,0)));var Tf,xf,Sf,_f,Nf,Df,Cf,kf,Of={set:pf,clear:hf},Rf=D.f,Lf=Of.set,qf=a.MutationObserver||a.WebKitMutationObserver,If=a.process,Bf=a.Promise,Pf="process"==d(If),jf=Rf(a,"queueMicrotask"),Ff=jf&&jf.value;
// modern engines have queueMicrotask method
Ff||(Tf=function(){var e,t;for(Pf&&(e=If.domain)&&e.exit();xf;){t=xf.fn,xf=xf.next;try{t()}catch(e){throw xf?_f():Sf=void 0,e}}Sf=void 0,e&&e.enter()},
// Node.js
Pf?_f=function(){If.nextTick(Tf)}:qf&&!lf?(Nf=1,Df=document.createTextNode(""),new qf(Tf).observe(Df,{characterData:1}),_f=function(){Df.data=Nf=!Nf}):Bf&&Bf.resolve?(
// Promise.resolve without an argument throws an error in LG WebOS 2
Cf=Bf.resolve(void 0),kf=Cf.then,_f=function(){kf.call(Cf,Tf)}):_f=function(){
// strange IE + webpack dev server bug - use .call(global)
Lf.call(a,Tf)});var Uf,Vf,Mf,Hf,zf=Ff||function(e){var t={fn:e,next:void 0};Sf&&(Sf.next=t),xf||(xf=t,_f()),Sf=t},Gf=function(e){var t,r;this.promise=new e((function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n})),this.resolve=Ie(t),this.reject=Ie(r)},Yf={f:function(e){return new Gf(e)}},Wf=function(e,t){if(C(e),b(t)&&t.constructor===e)return t;var r=Yf.f(e);return(0,r.resolve)(t),r.promise},$f=function(e){try{return{error:0,value:e()}}catch(e){return{error:1,value:e}}},Jf=Of.set,Kf=ze("species"),Zf="Promise",Qf=ne.get,Xf=ne.set,ep=ne.getterFor(Zf),tp=sf,rp=a.TypeError,np=a.document,op=a.process,ip=se("fetch"),ap=Yf.f,sp=ap,up="process"==d(op),cp=!!(np&&np.createEvent&&a.dispatchEvent),lp=Re(Zf,(function(){if(F(tp)===String(tp)){
// V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
// https://bugs.chromium.org/p/chromium/issues/detail?id=830565
// We can't detect it synchronously, so just check versions
if(66===et)return 1;
// Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
if(!up&&"function"!=typeof PromiseRejectionEvent)return 1}
// We can't use @@species feature detection in V8 since it causes
// deoptimization and performance degradation
// https://github.com/zloirock/core-js/issues/679
if(et>=51&&/native code/.test(tp))return 0;
// Detect correctness of subclassing with @@species support
var e=tp.resolve(1),t=function(e){e((function(){/* empty */}),(function(){/* empty */}))};return(e.constructor={})[Kf]=t,!(e.then((function(){/* empty */}))instanceof t)})),fp=lp||!Xa((function(e){tp.all(e).catch((function(){/* empty */}))})),pp=function(e){var t;return b(e)&&"function"==typeof(t=e.then)?t:0},hp=function(e,t,r){if(!t.notified){t.notified=1;var n=t.reactions;zf((function(){
// variable length - can't use forEach
for(var o=t.value,i=1==t.state,a=0;n.length>a;){var s,u,c,l=n[a++],f=i?l.ok:l.fail,p=l.resolve,h=l.reject,d=l.domain;try{f?(i||(2===t.rejection&&yp(e,t),t.rejection=1),1==f?s=o:(d&&d.enter(),s=f(o),// can throw
d&&(d.exit(),c=1)),s===l.promise?h(rp("Promise-chain cycle")):(u=pp(s))?u.call(s,p,h):p(s)):h(o)}catch(e){d&&!c&&d.exit(),h(e)}}t.reactions=[],t.notified=0,r&&!t.rejection&&gp(e,t)}))}},dp=function(e,t,r){var n,o;cp?((n=np.createEvent("Event")).promise=t,n.reason=r,n.initEvent(e,0,1),a.dispatchEvent(n)):n={promise:t,reason:r},(o=a["on"+e])?o(n):"unhandledrejection"===e&&function(e,t){var r=a.console;r&&r.error&&(1===arguments.length?r.error(e):r.error(e,t))}("Unhandled promise rejection",r)},gp=function(e,t){Jf.call(a,(function(){var r,n=t.value;if(mp(t)&&(r=$f((function(){up?op.emit("unhandledRejection",n,e):dp("unhandledrejection",e,n)})),
// Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
t.rejection=up||mp(t)?2:1,r.error))throw r.value}))},mp=function(e){return 1!==e.rejection&&!e.parent},yp=function(e,t){Jf.call(a,(function(){up?op.emit("rejectionHandled",e):dp("rejectionhandled",e,t.value)}))},vp=function(e,t,r,n){return function(o){e(t,r,o,n)}},bp=function(e,t,r,n){t.done||(t.done=1,n&&(t=n),t.value=r,t.state=2,hp(e,t,1))},wp=function(e,t,r,n){if(!t.done){t.done=1,n&&(t=n);try{if(e===r)throw rp("Promise can't be resolved itself");var o=pp(r);o?zf((function(){var n={done:0};try{o.call(r,vp(wp,e,n,t),vp(bp,e,n,t))}catch(r){bp(e,n,r,t)}})):(t.value=r,t.state=1,hp(e,t,0))}catch(r){bp(e,{done:0},r,t)}}};
// constructor polyfill
lp&&(
// 25.4.3.1 Promise(executor)
tp=function(e){aa(this,tp,Zf),Ie(e),Uf.call(this);var t=Qf(this);try{e(vp(wp,this,t),vp(bp,this,t))}catch(e){bp(this,t,e)}},(
// eslint-disable-next-line no-unused-vars
Uf=function(e){Xf(this,{type:Zf,done:0,notified:0,parent:0,reactions:[],rejection:0,state:0,value:void 0})}).prototype=ia(tp.prototype,{
// `Promise.prototype.then` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.then
then:function(e,t){var r=ep(this),n=ap(ko(this,tp));return n.ok="function"==typeof e?e:1,n.fail="function"==typeof t&&t,n.domain=up?op.domain:void 0,r.parent=1,r.reactions.push(n),0!=r.state&&hp(this,r,0),n.promise},
// `Promise.prototype.catch` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.catch
catch:function(e){return this.then(void 0,e)}}),Vf=function(){var e=new Uf,t=Qf(e);this.promise=e,this.resolve=vp(wp,e,t),this.reject=vp(bp,e,t)},Yf.f=ap=function(e){return e===tp||e===Mf?new Vf(e):sp(e)},"function"==typeof sf&&(Hf=sf.prototype.then,
// wrap native Promise#then for native async functions
oe(sf.prototype,"then",(function(e,t){var r=this;return new tp((function(e,t){Hf.call(r,e,t)})).then(e,t);
// https://github.com/zloirock/core-js/issues/640
}),{unsafe:1}),
// wrap fetch result
"function"==typeof ip&&qe({global:1,enumerable:1,forced:1},{
// eslint-disable-next-line no-unused-vars
fetch:function(e/* , init */){return Wf(tp,ip.apply(a,arguments))}}))),qe({global:1,wrap:1,forced:lp},{Promise:tp}),Uo(tp,Zf,0),no(Zf),Mf=se(Zf),
// statics
qe({target:Zf,stat:1,forced:lp},{
// `Promise.reject` method
// https://tc39.github.io/ecma262/#sec-promise.reject
reject:function(e){var t=ap(this);return t.reject.call(void 0,e),t.promise}}),qe({target:Zf,stat:1,forced:lp},{
// `Promise.resolve` method
// https://tc39.github.io/ecma262/#sec-promise.resolve
resolve:function(e){return Wf(this,e)}}),qe({target:Zf,stat:1,forced:fp},{
// `Promise.all` method
// https://tc39.github.io/ecma262/#sec-promise.all
all:function(e){var t=this,r=ap(t),n=r.resolve,o=r.reject,i=$f((function(){var r=Ie(t.resolve),i=[],a=0,s=1;cf(e,(function(e){var u=a++,c=0;i.push(void 0),s++,r.call(t,e).then((function(e){c||(c=1,i[u]=e,--s||n(i))}),o)})),--s||n(i)}));return i.error&&o(i.value),r.promise},
// `Promise.race` method
// https://tc39.github.io/ecma262/#sec-promise.race
race:function(e){var t=this,r=ap(t),n=r.reject,o=$f((function(){var o=Ie(t.resolve);cf(e,(function(e){o.call(t,e).then(r.resolve,n)}))}));return o.error&&n(o.value),r.promise}});var Ep=/[|\\{}()[\]^$+*?.]/g,Ap=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Ep,"\\$&")};
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function Tp(e,t){for(
// if the path tries to go above the root, `up` ends up > 0
var r=0,n=e.length-1;n>=0;n--){var o=e[n];"."===o?e.splice(n,1):".."===o?(e.splice(n,1),r++):r&&(e.splice(n,1),r--)}// if the path is allowed to go above the root, restore leading ..s
if(t)for(;r--;r)e.unshift("..");return e}// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var xp=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,Sp=function(e){return xp.exec(e).slice(1)};// path.resolve([from ...], to)
// posix version
function _p(){for(var e="",t=0,r=arguments.length-1;r>=-1&&!t;r--){var n=r>=0?arguments[r]:"/";// Skip empty and invalid entries
if("string"!=typeof n)throw new TypeError("Arguments to path.resolve must be strings");n&&(e=n+"/"+e,t="/"===n.charAt(0))}// At this point the path should be resolved to a full absolute path, but
// handle relative paths to be safe (might happen when process.cwd() fails)
// Normalize the path
return(t?"/":"")+(e=Tp(kp(e.split("/"),(function(e){return!!e})),!t).join("/"))||"."}
// posix version
function Np(e){var t=Dp(e),r="/"===Op(e,-1);// Normalize the path
return(e=Tp(kp(e.split("/"),(function(e){return!!e})),!t).join("/"))||t||(e="."),e&&r&&(e+="/"),(t?"/":"")+e}function Dp(e){return"/"===e.charAt(0)}// posix version
var Cp={extname:function(e){return Sp(e)[3]},basename:function(e,t){var r=Sp(e)[2];// TODO: make this comparison case-insensitive on windows?
return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},dirname:function(e){var t=Sp(e),r=t[0],n=t[1];return r||n?(n&&(
// It has a dirname, strip trailing slash
n=n.substr(0,n.length-1)),r+n):"."},sep:"/",delimiter:":",relative:// path.relative(from, to)
// posix version
function(e,t){function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;r>=0&&""===e[r];r--);return t>r?[]:e.slice(t,r-t+1)}e=_p(e).substr(1),t=_p(t).substr(1);for(var n=r(e.split("/")),o=r(t.split("/")),i=Math.min(n.length,o.length),a=i,s=0;s<i;s++)if(n[s]!==o[s]){a=s;break}var u=[];for(s=a;s<n.length;s++)u.push("..");return(u=u.concat(o.slice(a))).join("/")},join:function(){var e=Array.prototype.slice.call(arguments,0);return Np(kp(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},isAbsolute:Dp,normalize:Np,resolve:_p};function kp(e,t){if(e.filter)return e.filter(t);for(var r=[],n=0;n<e.length;n++)t(e[n],n,e)&&r.push(e[n]);return r}// String.prototype.substr - negative index don't work in IE8
var Op="b"==="ab".substr(-1)?function(e,t,r){return e.substr(t,r)}:function(e,t,r){return t<0&&(t=e.length+t),e.substr(t,r)};
// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
Po("iterator");
// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
var Rp=!Xa((function(e){Array.from(e)}));
// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
qe({target:"Array",stat:1,forced:Rp},{from:function(e/* , mapfn = undefined, thisArg = undefined */){var t,r,n,o,i,a,s=Pe(e),u="function"==typeof this?this:Array,c=arguments.length,l=c>1?arguments[1]:void 0,f=void 0!==l,p=As(s),h=0;
// if the target is not iterable or it's an array with the default iterator - use a simple case
if(f&&(l=Be(l,c>2?arguments[2]:void 0,2)),null==p||u==Array&&Ss(p))for(r=new u(t=pe(s.length));t>h;h++)a=f?l(s[h],h):s[h],wt(r,h,a);else for(i=(o=p.call(s)).next,r=new u;!(n=i.call(o)).done;h++)a=f?uf(o,l,[n.value,h],1):n.value,wt(r,h,a);return r.length=h,r}});var Lp=wo.charAt,qp=ne.set,Ip=ne.getterFor("String Iterator");
// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
Hi(String,"String",(function(e){qp(this,{type:"String Iterator",string:String(e),index:0});
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}),(function(){var e,t=Ip(this),r=t.string,n=t.index;return n>=r.length?{value:void 0,done:1}:(e=Lp(r,n),t.index+=e.length,{value:e,done:0})}));var Bp=ze("iterator"),Pp=ze("toStringTag"),jp=Yi.values;for(var Fp in Jt){var Up=a[Fp],Vp=Up&&Up.prototype;if(Vp){
// some Chrome versions have non-configurable methods on DOMTokenList
if(Vp[Bp]!==jp)try{R(Vp,Bp,jp)}catch(e){Vp[Bp]=jp}if(Vp[Pp]||R(Vp,Pp,Fp),Jt[Fp])for(var Mp in Yi)
// some Chrome versions have non-configurable methods on DOMTokenList
if(Vp[Mp]!==Yi[Mp])try{R(Vp,Mp,Yi[Mp])}catch(e){Vp[Mp]=Yi[Mp]}}}var Hp=r((function(e,t){
/*!
	  
	   diff v4.0.1
	  
	  Software License Agreement (BSD License)
	  
	  Copyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>
	  
	  All rights reserved.
	  
	  Redistribution and use of this software in source and binary forms, with or without modification,
	  are permitted provided that the following conditions are met:
	  
	  * Redistributions of source code must retain the above
	    copyright notice, this list of conditions and the
	    following disclaimer.
	  
	  * Redistributions in binary form must reproduce the above
	    copyright notice, this list of conditions and the
	    following disclaimer in the documentation and/or other
	    materials provided with the distribution.
	  
	  * Neither the name of Kevin Decker nor the names of its
	    contributors may be used to endorse or promote products
	    derived from this software without specific prior
	    written permission.
	  
	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
	  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
	  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
	  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
	  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
	  IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	  @license
	  */
!function(e){function t(){}function r(e,t,r,n,o){for(var i=0,a=t.length,s=0,u=0;i<a;i++){var c=t[i];if(c.removed){// Reverse add and remove so removes are output first to match common convention
// The diffing algorithm is tied to add then remove output and this is the simplest
// route to get the desired output with minimal overhead.
if(c.value=e.join(n.slice(u,u+c.count)),u+=c.count,i&&t[i-1].added){var l=t[i-1];t[i-1]=t[i],t[i]=l}}else{if(!c.added&&o){var f=r.slice(s,s+c.count);f=f.map((function(e,t){var r=n[u+t];return r.length>e.length?r:e})),c.value=e.join(f)}else c.value=e.join(r.slice(s,s+c.count));s+=c.count,// Common case
c.added||(u+=c.count)}}// Special case handle for when one terminal is ignored (i.e. whitespace).
// For this case we merge the terminal into the prior string and drop the change.
// This is only available for string mode.
var p=t[a-1];return a>1&&"string"==typeof p.value&&(p.added||p.removed)&&e.equals("",p.value)&&(t[a-2].value+=p.value,t.pop()),t}function n(e){return{newPos:e.newPos,components:e.components.slice(0)}}t.prototype={diff:function(e,t){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=o.callback;"function"==typeof o&&(i=o,o={}),this.options=o;var a=this;function s(e){return i?(setTimeout((function(){i(void 0,e)}),0),1):e}// Allow subclasses to massage the input prior to running
e=this.castInput(e),t=this.castInput(t),e=this.removeEmpty(this.tokenize(e));var u=(t=this.removeEmpty(this.tokenize(t))).length,c=e.length,l=1,f=u+c,p=[{newPos:-1,components:[]}],h=this.extractCommon(p[0],t,e,0);if(p[0].newPos+1>=u&&h+1>=c)
// Identity per the equality and tokenizer
return s([{value:this.join(t),count:t.length}]);// Main worker method. checks all permutations of a given edit length for acceptance.
function d(){for(var o=-1*l;o<=l;o+=2){var i=void 0,f=p[o-1],h=p[o+1],d=(h?h.newPos:0)-o;f&&(
// No one else is going to attempt to use this value, clear it
p[o-1]=void 0);var g=f&&f.newPos+1<u,m=h&&0<=d&&d<c;if(g||m){// If we have hit the end of both strings, then we are done
if(// Select the diagonal that we want to branch from. We select the prior
// path whose position in the new string is the farthest from the origin
// and does not pass the bounds of the diff graph
!g||m&&f.newPos<h.newPos?(i=n(h),a.pushComponent(i.components,void 0,1)):(// No need to clone, we've pulled it from the list
(i=f).newPos++,a.pushComponent(i.components,1,void 0)),d=a.extractCommon(i,t,e,o),i.newPos+1>=u&&d+1>=c)return s(r(a,i.components,t,e,a.useLongestToken));
// Otherwise track this path as a potential candidate and continue.
p[o]=i}else
// If this path is a terminal then prune
p[o]=void 0}l++}// Performs the length of edit iteration. Is a bit fugly as this has to support the
// sync and async mode which is never fun. Loops over execEditLength until a value
// is produced.
if(i)!function e(){setTimeout((function(){
// This should not happen, but we want to be safe.
/* istanbul ignore next */
if(l>f)return i();d()||e()}),0)}();else for(;l<=f;){var g=d();if(g)return g}},pushComponent:function(e,t,r){var n=e[e.length-1];n&&n.added===t&&n.removed===r?
// We need to clone here as the component clone operation is just
// as shallow array clone
e[e.length-1]={count:n.count+1,added:t,removed:r}:e.push({count:1,added:t,removed:r})},extractCommon:function(e,t,r,n){for(var o=t.length,i=r.length,a=e.newPos,s=a-n,u=0;a+1<o&&s+1<i&&this.equals(t[a+1],r[s+1]);)a++,s++,u++;return u&&e.components.push({count:u}),e.newPos=a,s},equals:function(e,t){return this.options.comparator?this.options.comparator(e,t):e===t||this.options.ignoreCase&&e.toLowerCase()===t.toLowerCase()},removeEmpty:function(e){for(var t=[],r=0;r<e.length;r++)e[r]&&t.push(e[r]);return t},castInput:function(e){return e},tokenize:function(e){return e.split("")},join:function(e){return e.join("")}};var o=new t;function i(e,t){if("function"==typeof e)t.callback=e;else if(e)for(var r in e)
/* istanbul ignore else */
e.hasOwnProperty(r)&&(t[r]=e[r]);return t}
// Ranges and exceptions:
// Latin-1 Supplement, 0080–00FF
//  - U+00D7  × Multiplication sign
//  - U+00F7  ÷ Division sign
// Latin Extended-A, 0100–017F
// Latin Extended-B, 0180–024F
// IPA Extensions, 0250–02AF
// Spacing Modifier Letters, 02B0–02FF
//  - U+02C7  ˇ &#711;  Caron
//  - U+02D8  ˘ &#728;  Breve
//  - U+02D9  ˙ &#729;  Dot Above
//  - U+02DA  ˚ &#730;  Ring Above
//  - U+02DB  ˛ &#731;  Ogonek
//  - U+02DC  ˜ &#732;  Small Tilde
//  - U+02DD  ˝ &#733;  Double Acute Accent
// Latin Extended Additional, 1E00–1EFF
var a=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,s=/\S/,u=new t;u.equals=function(e,t){return this.options.ignoreCase&&(e=e.toLowerCase(),t=t.toLowerCase()),e===t||this.options.ignoreWhitespace&&!s.test(e)&&!s.test(t)},u.tokenize=function(e){// Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.
for(var t=e.split(/(\s+|[()[\]{}'"]|\b)/),r=0;r<t.length-1;r++)
// If we have an empty string in the next field and we have only word chars before and after, merge
!t[r+1]&&t[r+2]&&a.test(t[r])&&a.test(t[r+2])&&(t[r]+=t[r+2],t.splice(r+1,2),r--);return t};var c=new t;function l(e,t,r){return c.diff(e,t,r)}c.tokenize=function(e){var t=[],r=e.split(/(\n|\r\n)/);// Ignore the final empty token that occurs if the string ends with a new line
r[r.length-1]||r.pop();// Merge the content and line separators into single tokens
for(var n=0;n<r.length;n++){var o=r[n];n%2&&!this.options.newlineIsToken?t[t.length-1]+=o:(this.options.ignoreWhitespace&&(o=o.trim()),t.push(o))}return t};var f=new t;f.tokenize=function(e){return e.split(/(\S.+?[.!?])(?=\s+|$)/)};var p=new t;function h(e){return(h="function"==typeof Symbol&&"symbol"===qo(Symbol.iterator)?function(e){return qo(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":qo(e)})(e)}function d(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}p.tokenize=function(e){return e.split(/([{}:;,]|\s+)/)};var g=Object.prototype.toString,m=new t;// This function handles the presence of circular references by bailing out when encountering an
// object that is already on the "stack" of items being processed. Accepts an optional replacer
function y(e,t,r,n,o){var i,a;for(t=t||[],r=r||[],n&&(e=n(o,e)),i=0;i<t.length;i+=1)if(t[i]===e)return r[i];if("[object Array]"===g.call(e)){for(t.push(e),a=new Array(e.length),r.push(a),i=0;i<e.length;i+=1)a[i]=y(e[i],t,r,n,o);return t.pop(),r.pop(),a}if(e&&e.toJSON&&(e=e.toJSON()),"object"===h(e)&&null!==e){t.push(e),a={},r.push(a);var s,u=[];for(s in e)
/* istanbul ignore else */
e.hasOwnProperty(s)&&u.push(s);for(u.sort(),i=0;i<u.length;i+=1)a[s=u[i]]=y(e[s],t,r,n,s);t.pop(),r.pop()}else a=e;return a}// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a
// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:
m.useLongestToken=1,m.tokenize=c.tokenize,m.castInput=function(e){var t=this.options,r=t.undefinedReplacement,n=t.stringifyReplacer,o=void 0===n?function(e,t){return void 0===t?r:t}:n;return"string"==typeof e?e:JSON.stringify(y(e,null,null,o),o,"  ")},m.equals=function(e,r){return t.prototype.equals.call(m,e.replace(/,([\r\n])/g,"$1"),r.replace(/,([\r\n])/g,"$1"))};var v=new t;function b(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e.split(/\r\n|[\n\v\f\r\x85]/),n=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],o=[],i=0;function a(){var e={};// Parse diff metadata
for(o.push(e);i<r.length;){var n=r[i];// File header found, end parsing diff metadata
if(/^(\-\-\-|\+\+\+|@@)\s/.test(n))break;// Diff index
var a=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(n);a&&(e.index=a[1]),i++}// Parse file headers if they are defined. Unified diff requires them, but
// there's no technical issues to have an isolated hunk without file header
for(s(e),s(e),// Parse hunks
e.hunks=[];i<r.length;){var c=r[i];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(c))break;if(/^@@/.test(c))e.hunks.push(u());else{if(c&&t.strict)
// Ignore unexpected content unless in strict mode
throw new Error("Unknown line "+(i+1)+" "+JSON.stringify(c));i++}}}// Parses the --- and +++ headers, if none are found, no lines
// are consumed.
function s(e){var t=/^(---|\+\+\+)\s+(.*)$/.exec(r[i]);if(t){var n="---"===t[1]?"old":"new",o=t[2].split("\t",2),a=o[0].replace(/\\\\/g,"\\");/^".*"$/.test(a)&&(a=a.substr(1,a.length-2)),e[n+"FileName"]=a,e[n+"Header"]=(o[1]||"").trim(),i++}}// Parses a hunk
// This assumes that we are at the start of a hunk.
function u(){for(var e=i,o=r[i++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),a={oldStart:+o[1],oldLines:+o[2]||1,newStart:+o[3],newLines:+o[4]||1,lines:[],linedelimiters:[]},s=0,u=0;i<r.length&&!(0===r[i].indexOf("--- ")&&i+2<r.length&&0===r[i+1].indexOf("+++ ")&&0===r[i+2].indexOf("@@"));i++){var c=0==r[i].length&&i!=r.length-1?" ":r[i][0];if("+"!==c&&"-"!==c&&" "!==c&&"\\"!==c)break;a.lines.push(r[i]),a.linedelimiters.push(n[i]||"\n"),"+"===c?s++:"-"===c?u++:" "===c&&(s++,u++)}// Handle the empty block count case
// Perform optional sanity checking
if(s||1!==a.newLines||(a.newLines=0),u||1!==a.oldLines||(a.oldLines=0),t.strict){if(s!==a.newLines)throw new Error("Added line count did not match for hunk at line "+(e+1));if(u!==a.oldLines)throw new Error("Removed line count did not match for hunk at line "+(e+1))}return a}for(;i<r.length;)a();return o}// Iterator that traverses in the range of [min, max], stepping
// by distance from a given start position. I.e. for [0, 4], with
// start of 2, this will iterate 2, 3, 1, 4, 0.
function w(e,t,r){var n=1,o=0,i=0,a=1;return function s(){if(n&&!i){// Check if trying to fit beyond text length, and if not, check it fits
// after offset location (or desired location on first iteration)
if(o?a++:n=0,e+a<=r)return a;i=1}if(!o)// Check if trying to fit before text beginning, and if not, check it fits
// before offset location
return i||(n=1),t<=e-a?-a++:(o=1,s());// We tried to fit hunk before text beginning and beyond text length, then
// hunk can't fit on the text. Return undefined
}}function E(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof t&&(t=b(t)),Array.isArray(t)){if(t.length>1)throw new Error("applyPatch only works with a single input.");t=t[0]}// Apply the diff to the input
var n,o,i=e.split(/\r\n|[\n\v\f\r\x85]/),a=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],s=t.hunks,u=r.compareLine||function(e,t,r,n){return t===n},c=0,l=r.fuzzFactor||0,f=0,p=0;
/**
	       * Checks if the hunk exactly fits on the provided location
	       */function h(e,t){for(var r=0;r<e.lines.length;r++){var n=e.lines[r],o=n.length>0?n[0]:" ",a=n.length>0?n.substr(1):n;if(" "===o||"-"===o){
// Context sanity check
if(!u(t+1,i[t],o,a)&&++c>l)return 0;t++}}return 1}// Search best fit offsets for each hunk based on the previous ones
for(var d=0;d<s.length;d++){for(var g=s[d],m=i.length-g.oldLines,y=0,v=p+g.oldStart-1,E=w(v,f,m);void 0!==y;y=E())if(h(g,v+y)){g.offset=p+=y;break}if(void 0===y)return 0;// Set lower text limit to end of the current hunk, so next ones don't try
// to fit over already patched text
f=g.offset+g.oldStart+g.oldLines}// Apply patch hunks
for(var A=0,T=0;T<s.length;T++){var x=s[T],S=x.oldStart+x.offset+A-1;A+=x.newLines-x.oldLines,S<0&&(
// Creating a new file
S=0);for(var _=0;_<x.lines.length;_++){var N=x.lines[_],D=N.length>0?N[0]:" ",C=N.length>0?N.substr(1):N,k=x.linedelimiters[_];if(" "===D)S++;else if("-"===D)i.splice(S,1),a.splice(S,1);else if("+"===D)i.splice(S,0,C),a.splice(S,0,k),S++;else if("\\"===D){var O=x.lines[_-1]?x.lines[_-1][0]:null;"+"===O?n=1:"-"===O&&(o=1)}}}// Handle EOFNL insertion/removal
if(n)for(;!i[i.length-1];)i.pop(),a.pop();else o&&(i.push(""),a.push("\n"));for(var R=0;R<i.length-1;R++)i[R]=i[R]+a[R];return i.join("")}// Wrapper that supports multiple file patches via callbacks.
function A(e,t,r,n,o,i,a){a||(a={}),void 0===a.context&&(a.context=4);var s=l(r,n,a);// Append an empty value to make cleanup easier
function u(e){return e.map((function(e){return" "+e}))}s.push({value:"",lines:[]});for(var c=[],f=0,p=0,h=[],g=1,m=1,y=function(e){var t=s[e],o=t.lines||t.value.replace(/\n$/,"").split("\n");if(t.lines=o,t.added||t.removed){var i;// If we have previous context, start with that
if(!f){var l=s[e-1];f=g,p=m,l&&(h=a.context>0?u(l.lines.slice(-a.context)):[],f-=h.length,p-=h.length)}// Output our changes
(i=h).push.apply(i,d(o.map((function(e){return(t.added?"+":"-")+e})))),// Track the updated file position
t.added?m+=o.length:g+=o.length}else{
// Identical context lines. Track line changes
if(f)
// Close out any changes that have been output (or join overlapping)
if(o.length<=2*a.context&&e<s.length-2){var y;// Overlapping
(y=h).push.apply(y,d(u(o)))}else{var v,b=Math.min(o.length,a.context);// end the range and output
(v=h).push.apply(v,d(u(o.slice(0,b))));var w={oldStart:f,oldLines:g-f+b,newStart:p,newLines:m-p+b,lines:h};if(e>=s.length-2&&o.length<=a.context){
// EOF is inside this hunk
var E=/\n$/.test(r),A=/\n$/.test(n),T=0==o.length&&h.length>w.oldLines;!E&&T&&
// special case: old has no eol and no trailing context; no-nl can end up before adds
h.splice(w.oldLines,0,"\\ No newline at end of file"),(E||T)&&A||h.push("\\ No newline at end of file")}c.push(w),f=0,p=0,h=[]}g+=o.length,m+=o.length}},v=0;v<s.length;v++)y(v);return{oldFileName:e,newFileName:t,oldHeader:o,newHeader:i,hunks:c}}function T(e,t,r,n,o,i,a){var s=A(e,t,r,n,o,i,a),u=[];e==t&&u.push("Index: "+e),u.push("==================================================================="),u.push("--- "+s.oldFileName+(void 0===s.oldHeader?"":"\t"+s.oldHeader)),u.push("+++ "+s.newFileName+(void 0===s.newHeader?"":"\t"+s.newHeader));for(var c=0;c<s.hunks.length;c++){var l=s.hunks[c];u.push("@@ -"+l.oldStart+","+l.oldLines+" +"+l.newStart+","+l.newLines+" @@"),u.push.apply(u,l.lines)}return u.join("\n")+"\n"}function x(e,t){if(t.length>e.length)return 0;for(var r=0;r<t.length;r++)if(t[r]!==e[r])return 0;return 1}function S(e){var t=function e(t){var r=0,n=0;return t.forEach((function(t){if("string"!=typeof t){var o=e(t.mine),i=e(t.theirs);void 0!==r&&(o.oldLines===i.oldLines?r+=o.oldLines:r=void 0),void 0!==n&&(o.newLines===i.newLines?n+=o.newLines:n=void 0)}else void 0===n||"+"!==t[0]&&" "!==t[0]||n++,void 0===r||"-"!==t[0]&&" "!==t[0]||r++})),{oldLines:r,newLines:n}}// See: http://code.google.com/p/google-diff-match-patch/wiki/API
(e.lines),r=t.oldLines,n=t.newLines;void 0!==r?e.oldLines=r:delete e.oldLines,void 0!==n?e.newLines=n:delete e.newLines}function _(e,t){if("string"==typeof e){if(/^@@/m.test(e)||/^Index:/m.test(e))return b(e)[0];if(!t)throw new Error("Must provide a base reference or pass in a patch");return A(void 0,void 0,t,e)}return e}function N(e){return e.newFileName&&e.newFileName!==e.oldFileName}function D(e,t,r){return t===r?t:(e.conflict=1,{mine:t,theirs:r})}function C(e,t){return e.oldStart<t.oldStart&&e.oldStart+e.oldLines<t.oldStart}function k(e,t){return{oldStart:e.oldStart,oldLines:e.oldLines,newStart:e.newStart+t,newLines:e.newLines,lines:e.lines}}function O(e,t,r,n,o){
// This will generally result in a conflicted hunk, but there are cases where the context
// is the only overlap where we can successfully merge the content here.
var i={offset:t,lines:r,index:0},a={offset:n,lines:o,index:0};// Handle any leading content
// Now in the overlap content. Scan through and select the best changes from each.
for(I(e,i,a),I(e,a,i);i.index<i.lines.length&&a.index<a.lines.length;){var s=i.lines[i.index],u=a.lines[a.index];if("-"!==s[0]&&"+"!==s[0]||"-"!==u[0]&&"+"!==u[0])if("+"===s[0]&&" "===u[0]){var c;// Mine inserted
(c=e.lines).push.apply(c,d(P(i)))}else if("+"===u[0]&&" "===s[0]){var l;// Theirs inserted
(l=e.lines).push.apply(l,d(P(a)))}else"-"===s[0]&&" "===u[0]?
// Mine removed or edited
L(e,i,a):"-"===u[0]&&" "===s[0]?
// Their removed or edited
L(e,a,i,1):s===u?(
// Context identity
e.lines.push(s),i.index++,a.index++):
// Context mismatch
q(e,P(i),P(a));else
// Both modified ...
R(e,i,a)}// Now push anything that may be remaining
B(e,i),B(e,a),S(e)}function R(e,t,r){var n,o,i=P(t),a=P(r);if(j(i)&&j(a)){var s,u;
// Special case for remove changes that are supersets of one another
if(x(i,a)&&F(r,i,i.length-a.length))return void(s=e.lines).push.apply(s,d(i));if(x(a,i)&&F(t,a,a.length-i.length))return void(u=e.lines).push.apply(u,d(a))}else if(o=a,(n=i).length===o.length&&x(n,o)){var c;return void(c=e.lines).push.apply(c,d(i))}q(e,i,a)}function L(e,t,r,n){var o,i=P(t),a=function(e,t){for(var r=[],n=[],o=0,i=0,a=0;o<t.length&&e.index<e.lines.length;){var s=e.lines[e.index],u=t[o];// Once we've hit our add, then we are done
if("+"===u[0])break;// Consume any additions in the other block as a conflict to attempt
// to pull in the remaining context after this
if(i=i||" "!==s[0],n.push(u),o++,"+"===s[0])for(a=1;"+"===s[0];)r.push(s),s=e.lines[++e.index];u.substr(1)===s.substr(1)?(r.push(s),e.index++):a=1}if("+"===(t[o]||"")[0]&&i&&(a=1),a)return r;for(;o<t.length;)n.push(t[o++]);return{merged:n,changes:r}}(r,i);a.merged?(o=e.lines).push.apply(o,d(a.merged)):q(e,n?a:i,n?i:a)}function q(e,t,r){e.conflict=1,e.lines.push({conflict:1,mine:t,theirs:r})}function I(e,t,r){for(;t.offset<r.offset&&t.index<t.lines.length;){var n=t.lines[t.index++];e.lines.push(n),t.offset++}}function B(e,t){for(;t.index<t.lines.length;){var r=t.lines[t.index++];e.lines.push(r)}}function P(e){for(var t=[],r=e.lines[e.index][0];e.index<e.lines.length;){var n=e.lines[e.index];// Group additions that are immediately after subtractions and treat them as one "atomic" modify change.
if("-"===r&&"+"===n[0]&&(r="+"),r!==n[0])break;t.push(n),e.index++}return t}function j(e){return e.reduce((function(e,t){return e&&"-"===t[0]}),1)}function F(e,t,r){for(var n=0;n<r;n++){var o=t[t.length-r+n].substr(1);if(e.lines[e.index+n]!==" "+o)return 0}return e.index+=r,1}function U(e){var t=e;return t=(t=(t=(t=t.replace(/&/g,"&amp;")).replace(/</g,"&lt;")).replace(/>/g,"&gt;")).replace(/"/g,"&quot;")}
/* See LICENSE file for terms of use */v.tokenize=function(e){return e.slice()},v.join=v.removeEmpty=function(e){return e},e.Diff=t,e.diffChars=function(e,t,r){return o.diff(e,t,r)},e.diffWords=function(e,t,r){return r=i(r,{ignoreWhitespace:1}),u.diff(e,t,r)},e.diffWordsWithSpace=function(e,t,r){return u.diff(e,t,r)},e.diffLines=l,e.diffTrimmedLines=function(e,t,r){var n=i(r,{ignoreWhitespace:1});return c.diff(e,t,n)},e.diffSentences=function(e,t,r){return f.diff(e,t,r)},e.diffCss=function(e,t,r){return p.diff(e,t,r)},e.diffJson=function(e,t,r){return m.diff(e,t,r)},e.diffArrays=function(e,t,r){return v.diff(e,t,r)},e.structuredPatch=A,e.createTwoFilesPatch=T,e.createPatch=function(e,t,r,n,o,i){return T(e,e,t,r,n,o,i)},e.applyPatch=E,e.applyPatches=function(e,t){"string"==typeof e&&(e=b(e));var r=0;!function n(){var o=e[r++];if(!o)return t.complete();t.loadFile(o,(function(e,r){if(e)return t.complete(e);var i=E(r,o,t);t.patched(o,i,(function(e){if(e)return t.complete(e);n()}))}))}()},e.parsePatch=b,e.merge=function(e,t,r){e=_(e,r),t=_(t,r);var n={};// For index we just let it pass through as it doesn't have any necessary meaning.
// Leaving sanity checks on this to the API consumer that may know more about the
// meaning in their own context.
(e.index||t.index)&&(n.index=e.index||t.index),(e.newFileName||t.newFileName)&&(N(e)?N(t)?(
// Both changed... figure it out
n.oldFileName=D(n,e.oldFileName,t.oldFileName),n.newFileName=D(n,e.newFileName,t.newFileName),n.oldHeader=D(n,e.oldHeader,t.oldHeader),n.newHeader=D(n,e.newHeader,t.newHeader)):(
// No header or no change in theirs, use ours
n.oldFileName=e.oldFileName,n.newFileName=e.newFileName,n.oldHeader=e.oldHeader,n.newHeader=e.newHeader):(
// No header or no change in ours, use theirs (and ours if theirs does not exist)
n.oldFileName=t.oldFileName||e.oldFileName,n.newFileName=t.newFileName||e.newFileName,n.oldHeader=t.oldHeader||e.oldHeader,n.newHeader=t.newHeader||e.newHeader)),n.hunks=[];for(var o=0,i=0,a=0,s=0;o<e.hunks.length||i<t.hunks.length;){var u=e.hunks[o]||{oldStart:1/0},c=t.hunks[i]||{oldStart:1/0};if(C(u,c))
// This patch does not overlap with any of the others, yay.
n.hunks.push(k(u,a)),o++,s+=u.newLines-u.oldLines;else if(C(c,u))
// This patch does not overlap with any of the others, yay.
n.hunks.push(k(c,s)),i++,a+=c.newLines-c.oldLines;else{
// Overlap, merge as best we can
var l={oldStart:Math.min(u.oldStart,c.oldStart),oldLines:0,newStart:Math.min(u.newStart+a,c.oldStart+s),newLines:0,lines:[]};O(l,u.oldStart,u.lines,c.oldStart,c.lines),i++,o++,n.hunks.push(l)}}return n},e.convertChangesToDMP=function(e){for(var t,r,n=[],o=0;o<e.length;o++)r=(t=e[o]).added?1:t.removed?-1:0,n.push([r,t.value]);return n},e.convertChangesToXML=function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];n.added?t.push("<ins>"):n.removed&&t.push("<del>"),t.push(U(n.value)),n.added?t.push("</ins>"):n.removed&&t.push("</del>")}return t.join("")},e.canonicalize=y,Object.defineProperty(e,"__esModule",{value:1})}(t)})),zp=1e3,Gp=6e4,Yp=60*Gp,Wp=24*Yp,$p=function(e,t){t=t||{};var r=qo(e);if("string"===r&&e.length>0)
/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */
return function(e){if(!((e=String(e)).length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*r;case"weeks":case"week":case"w":return 6048e5*r;case"days":case"day":case"d":return r*Wp;case"hours":case"hour":case"hrs":case"hr":case"h":return r*Yp;case"minutes":case"minute":case"mins":case"min":case"m":return r*Gp;case"seconds":case"second":case"secs":case"sec":case"s":return r*zp;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}
/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */(e);if("number"===r&&isFinite(e))return t.long?
/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */
function(e){var t=Math.abs(e);return t>=Wp?Jp(e,t,Wp,"day"):t>=Yp?Jp(e,t,Yp,"hour"):t>=Gp?Jp(e,t,Gp,"minute"):t>=zp?Jp(e,t,zp,"second"):e+" ms"}
/**
	 * Pluralization helper.
	 */(e):function(e){var t=Math.abs(e);return t>=Wp?Math.round(e/Wp)+"d":t>=Yp?Math.round(e/Yp)+"h":t>=Gp?Math.round(e/Gp)+"m":t>=zp?Math.round(e/zp)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};
/**
	 * Helpers.
	 */function Jp(e,t,r,n){var o=t>=1.5*r;return Math.round(e/r)+" "+n+(o?"s":"")}var Kp=!s((function(){return Object.isExtensible(Object.preventExtensions({}))})),Zp=r((function(e){var t=O.f,r=G("meta"),n=0,o=Object.isExtensible||function(){return 1},i=function(e){t(e,r,{value:{objectID:"O"+ ++n,// object ID
weakData:{}}})},a=e.exports={REQUIRED:0,fastKey:function(e,t){
// return a primitive with prefix
if(!b(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!A(e,r)){
// can't set metadata to uncaught frozen object
if(!o(e))return"F";
// not necessary to add metadata
if(!t)return"E";
// add missing metadata
i(e)}return e[r].objectID},getWeakData:function(e,t){if(!A(e,r)){
// can't set metadata to uncaught frozen object
if(!o(e))return 1;
// not necessary to add metadata
if(!t)return 0;
// add missing metadata
i(e)}return e[r].weakData},onFreeze:function(e){return Kp&&a.REQUIRED&&o(e)&&!A(e,r)&&i(e),e}};$[r]=1})),Qp=Zp.onFreeze,Xp=Object.freeze,eh=s((function(){Xp(1)}));
// `Object.freeze` method
// https://tc39.github.io/ecma262/#sec-object.freeze
qe({target:"Object",stat:1,forced:eh,sham:!Kp},{freeze:function(e){return Xp&&b(e)?Xp(Qp(e)):e}});var th,rh=r((function(t,r){!function(n){
// Detect free variables `exports`.
var o=r,i=t&&t.exports==o&&t,a="object"==qo(e)&&e;// Detect free variable `module`.
a.global!==a&&a.window!==a||(n=a);
/*--------------------------------------------------------------------------*/
// All astral symbols.
var s=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,u=/[\x01-\x7F]/g,c=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,l=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,f={"­":"shy","‌":"zwnj","‍":"zwj","‎":"lrm","⁣":"ic","⁢":"it","⁡":"af","‏":"rlm","​":"ZeroWidthSpace","⁠":"NoBreak","̑":"DownBreve","⃛":"tdot","⃜":"DotDot","\t":"Tab","\n":"NewLine"," ":"puncsp"," ":"MediumSpace"," ":"thinsp"," ":"hairsp"," ":"emsp13"," ":"ensp"," ":"emsp14"," ":"emsp"," ":"numsp"," ":"nbsp","  ":"ThickSpace","‾":"oline",_:"lowbar","‐":"dash","–":"ndash","—":"mdash","―":"horbar",",":"comma",";":"semi","⁏":"bsemi",":":"colon","⩴":"Colone","!":"excl","¡":"iexcl","?":"quest","¿":"iquest",".":"period","‥":"nldr","…":"mldr","·":"middot","'":"apos","‘":"lsquo","’":"rsquo","‚":"sbquo","‹":"lsaquo","›":"rsaquo",'"':"quot","“":"ldquo","”":"rdquo","„":"bdquo","«":"laquo","»":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","⌈":"lceil","⌉":"rceil","⌊":"lfloor","⌋":"rfloor","⦅":"lopar","⦆":"ropar","⦋":"lbrke","⦌":"rbrke","⦍":"lbrkslu","⦎":"rbrksld","⦏":"lbrksld","⦐":"rbrkslu","⦑":"langd","⦒":"rangd","⦓":"lparlt","⦔":"rpargt","⦕":"gtlPar","⦖":"ltrPar","⟦":"lobrk","⟧":"robrk","⟨":"lang","⟩":"rang","⟪":"Lang","⟫":"Rang","⟬":"loang","⟭":"roang","❲":"lbbrk","❳":"rbbrk","‖":"Vert","§":"sect","¶":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","‰":"permil","‱":"pertenk","†":"dagger","‡":"Dagger","•":"bull","⁃":"hybull","′":"prime","″":"Prime","‴":"tprime","⁗":"qprime","‵":"bprime","⁁":"caret","`":"grave","´":"acute","˜":"tilde","^":"Hat","¯":"macr","˘":"breve","˙":"dot","¨":"die","˚":"ring","˝":"dblac","¸":"cedil","˛":"ogon",ˆ:"circ",ˇ:"caron","°":"deg","©":"copy","®":"reg","℗":"copysr",℘:"wp","℞":"rx","℧":"mho","℩":"iiota","←":"larr","↚":"nlarr","→":"rarr","↛":"nrarr","↑":"uarr","↓":"darr","↔":"harr","↮":"nharr","↕":"varr","↖":"nwarr","↗":"nearr","↘":"searr","↙":"swarr","↝":"rarrw","↝̸":"nrarrw","↞":"Larr","↟":"Uarr","↠":"Rarr","↡":"Darr","↢":"larrtl","↣":"rarrtl","↤":"mapstoleft","↥":"mapstoup","↦":"map","↧":"mapstodown","↩":"larrhk","↪":"rarrhk","↫":"larrlp","↬":"rarrlp","↭":"harrw","↰":"lsh","↱":"rsh","↲":"ldsh","↳":"rdsh","↵":"crarr","↶":"cularr","↷":"curarr","↺":"olarr","↻":"orarr","↼":"lharu","↽":"lhard","↾":"uharr","↿":"uharl","⇀":"rharu","⇁":"rhard","⇂":"dharr","⇃":"dharl","⇄":"rlarr","⇅":"udarr","⇆":"lrarr","⇇":"llarr","⇈":"uuarr","⇉":"rrarr","⇊":"ddarr","⇋":"lrhar","⇌":"rlhar","⇐":"lArr","⇍":"nlArr","⇑":"uArr","⇒":"rArr","⇏":"nrArr","⇓":"dArr","⇔":"iff","⇎":"nhArr","⇕":"vArr","⇖":"nwArr","⇗":"neArr","⇘":"seArr","⇙":"swArr","⇚":"lAarr","⇛":"rAarr","⇝":"zigrarr","⇤":"larrb","⇥":"rarrb","⇵":"duarr","⇽":"loarr","⇾":"roarr","⇿":"hoarr","∀":"forall","∁":"comp","∂":"part","∂̸":"npart","∃":"exist","∄":"nexist","∅":"empty","∇":"Del","∈":"in","∉":"notin","∋":"ni","∌":"notni","϶":"bepsi","∏":"prod","∐":"coprod","∑":"sum","+":"plus","±":"pm","÷":"div","×":"times","<":"lt","≮":"nlt","<⃒":"nvlt","=":"equals","≠":"ne","=⃥":"bne","⩵":"Equal",">":"gt","≯":"ngt",">⃒":"nvgt","¬":"not","|":"vert","¦":"brvbar","−":"minus","∓":"mp","∔":"plusdo","⁄":"frasl","∖":"setmn","∗":"lowast","∘":"compfn","√":"Sqrt","∝":"prop","∞":"infin","∟":"angrt","∠":"ang","∠⃒":"nang","∡":"angmsd","∢":"angsph","∣":"mid","∤":"nmid","∥":"par","∦":"npar","∧":"and","∨":"or","∩":"cap","∩︀":"caps","∪":"cup","∪︀":"cups","∫":"int","∬":"Int","∭":"tint","⨌":"qint","∮":"oint","∯":"Conint","∰":"Cconint","∱":"cwint","∲":"cwconint","∳":"awconint","∴":"there4","∵":"becaus","∶":"ratio","∷":"Colon","∸":"minusd","∺":"mDDot","∻":"homtht","∼":"sim","≁":"nsim","∼⃒":"nvsim","∽":"bsim","∽̱":"race","∾":"ac","∾̳":"acE","∿":"acd","≀":"wr","≂":"esim","≂̸":"nesim","≃":"sime","≄":"nsime","≅":"cong","≇":"ncong","≆":"simne","≈":"ap","≉":"nap","≊":"ape","≋":"apid","≋̸":"napid","≌":"bcong","≍":"CupCap","≭":"NotCupCap","≍⃒":"nvap","≎":"bump","≎̸":"nbump","≏":"bumpe","≏̸":"nbumpe","≐":"doteq","≐̸":"nedot","≑":"eDot","≒":"efDot","≓":"erDot","≔":"colone","≕":"ecolon","≖":"ecir","≗":"cire","≙":"wedgeq","≚":"veeeq","≜":"trie","≟":"equest","≡":"equiv","≢":"nequiv","≡⃥":"bnequiv","≤":"le","≰":"nle","≤⃒":"nvle","≥":"ge","≱":"nge","≥⃒":"nvge","≦":"lE","≦̸":"nlE","≧":"gE","≧̸":"ngE","≨︀":"lvnE","≨":"lnE","≩":"gnE","≩︀":"gvnE","≪":"ll","≪̸":"nLtv","≪⃒":"nLt","≫":"gg","≫̸":"nGtv","≫⃒":"nGt","≬":"twixt","≲":"lsim","≴":"nlsim","≳":"gsim","≵":"ngsim","≶":"lg","≸":"ntlg","≷":"gl","≹":"ntgl","≺":"pr","⊀":"npr","≻":"sc","⊁":"nsc","≼":"prcue","⋠":"nprcue","≽":"sccue","⋡":"nsccue","≾":"prsim","≿":"scsim","≿̸":"NotSucceedsTilde","⊂":"sub","⊄":"nsub","⊂⃒":"vnsub","⊃":"sup","⊅":"nsup","⊃⃒":"vnsup","⊆":"sube","⊈":"nsube","⊇":"supe","⊉":"nsupe","⊊︀":"vsubne","⊊":"subne","⊋︀":"vsupne","⊋":"supne","⊍":"cupdot","⊎":"uplus","⊏":"sqsub","⊏̸":"NotSquareSubset","⊐":"sqsup","⊐̸":"NotSquareSuperset","⊑":"sqsube","⋢":"nsqsube","⊒":"sqsupe","⋣":"nsqsupe","⊓":"sqcap","⊓︀":"sqcaps","⊔":"sqcup","⊔︀":"sqcups","⊕":"oplus","⊖":"ominus","⊗":"otimes","⊘":"osol","⊙":"odot","⊚":"ocir","⊛":"oast","⊝":"odash","⊞":"plusb","⊟":"minusb","⊠":"timesb","⊡":"sdotb","⊢":"vdash","⊬":"nvdash","⊣":"dashv","⊤":"top","⊥":"bot","⊧":"models","⊨":"vDash","⊭":"nvDash","⊩":"Vdash","⊮":"nVdash","⊪":"Vvdash","⊫":"VDash","⊯":"nVDash","⊰":"prurel","⊲":"vltri","⋪":"nltri","⊳":"vrtri","⋫":"nrtri","⊴":"ltrie","⋬":"nltrie","⊴⃒":"nvltrie","⊵":"rtrie","⋭":"nrtrie","⊵⃒":"nvrtrie","⊶":"origof","⊷":"imof","⊸":"mumap","⊹":"hercon","⊺":"intcal","⊻":"veebar","⊽":"barvee","⊾":"angrtvb","⊿":"lrtri","⋀":"Wedge","⋁":"Vee","⋂":"xcap","⋃":"xcup","⋄":"diam","⋅":"sdot","⋆":"Star","⋇":"divonx","⋈":"bowtie","⋉":"ltimes","⋊":"rtimes","⋋":"lthree","⋌":"rthree","⋍":"bsime","⋎":"cuvee","⋏":"cuwed","⋐":"Sub","⋑":"Sup","⋒":"Cap","⋓":"Cup","⋔":"fork","⋕":"epar","⋖":"ltdot","⋗":"gtdot","⋘":"Ll","⋘̸":"nLl","⋙":"Gg","⋙̸":"nGg","⋚︀":"lesg","⋚":"leg","⋛":"gel","⋛︀":"gesl","⋞":"cuepr","⋟":"cuesc","⋦":"lnsim","⋧":"gnsim","⋨":"prnsim","⋩":"scnsim","⋮":"vellip","⋯":"ctdot","⋰":"utdot","⋱":"dtdot","⋲":"disin","⋳":"isinsv","⋴":"isins","⋵":"isindot","⋵̸":"notindot","⋶":"notinvc","⋷":"notinvb","⋹":"isinE","⋹̸":"notinE","⋺":"nisd","⋻":"xnis","⋼":"nis","⋽":"notnivc","⋾":"notnivb","⌅":"barwed","⌆":"Barwed","⌌":"drcrop","⌍":"dlcrop","⌎":"urcrop","⌏":"ulcrop","⌐":"bnot","⌒":"profline","⌓":"profsurf","⌕":"telrec","⌖":"target","⌜":"ulcorn","⌝":"urcorn","⌞":"dlcorn","⌟":"drcorn","⌢":"frown","⌣":"smile","⌭":"cylcty","⌮":"profalar","⌶":"topbot","⌽":"ovbar","⌿":"solbar","⍼":"angzarr","⎰":"lmoust","⎱":"rmoust","⎴":"tbrk","⎵":"bbrk","⎶":"bbrktbrk","⏜":"OverParenthesis","⏝":"UnderParenthesis","⏞":"OverBrace","⏟":"UnderBrace","⏢":"trpezium","⏧":"elinters","␣":"blank","─":"boxh","│":"boxv","┌":"boxdr","┐":"boxdl","└":"boxur","┘":"boxul","├":"boxvr","┤":"boxvl","┬":"boxhd","┴":"boxhu","┼":"boxvh","═":"boxH","║":"boxV","╒":"boxdR","╓":"boxDr","╔":"boxDR","╕":"boxdL","╖":"boxDl","╗":"boxDL","╘":"boxuR","╙":"boxUr","╚":"boxUR","╛":"boxuL","╜":"boxUl","╝":"boxUL","╞":"boxvR","╟":"boxVr","╠":"boxVR","╡":"boxvL","╢":"boxVl","╣":"boxVL","╤":"boxHd","╥":"boxhD","╦":"boxHD","╧":"boxHu","╨":"boxhU","╩":"boxHU","╪":"boxvH","╫":"boxVh","╬":"boxVH","▀":"uhblk","▄":"lhblk","█":"block","░":"blk14","▒":"blk12","▓":"blk34","□":"squ","▪":"squf","▫":"EmptyVerySmallSquare","▭":"rect","▮":"marker","▱":"fltns","△":"xutri","▴":"utrif","▵":"utri","▸":"rtrif","▹":"rtri","▽":"xdtri","▾":"dtrif","▿":"dtri","◂":"ltrif","◃":"ltri","◊":"loz","○":"cir","◬":"tridot","◯":"xcirc","◸":"ultri","◹":"urtri","◺":"lltri","◻":"EmptySmallSquare","◼":"FilledSmallSquare","★":"starf","☆":"star","☎":"phone","♀":"female","♂":"male","♠":"spades","♣":"clubs","♥":"hearts","♦":"diams","♪":"sung","✓":"check","✗":"cross","✠":"malt","✶":"sext","❘":"VerticalSeparator","⟈":"bsolhsub","⟉":"suphsol","⟵":"xlarr","⟶":"xrarr","⟷":"xharr","⟸":"xlArr","⟹":"xrArr","⟺":"xhArr","⟼":"xmap","⟿":"dzigrarr","⤂":"nvlArr","⤃":"nvrArr","⤄":"nvHarr","⤅":"Map","⤌":"lbarr","⤍":"rbarr","⤎":"lBarr","⤏":"rBarr","⤐":"RBarr","⤑":"DDotrahd","⤒":"UpArrowBar","⤓":"DownArrowBar","⤖":"Rarrtl","⤙":"latail","⤚":"ratail","⤛":"lAtail","⤜":"rAtail","⤝":"larrfs","⤞":"rarrfs","⤟":"larrbfs","⤠":"rarrbfs","⤣":"nwarhk","⤤":"nearhk","⤥":"searhk","⤦":"swarhk","⤧":"nwnear","⤨":"toea","⤩":"tosa","⤪":"swnwar","⤳":"rarrc","⤳̸":"nrarrc","⤵":"cudarrr","⤶":"ldca","⤷":"rdca","⤸":"cudarrl","⤹":"larrpl","⤼":"curarrm","⤽":"cularrp","⥅":"rarrpl","⥈":"harrcir","⥉":"Uarrocir","⥊":"lurdshar","⥋":"ldrushar","⥎":"LeftRightVector","⥏":"RightUpDownVector","⥐":"DownLeftRightVector","⥑":"LeftUpDownVector","⥒":"LeftVectorBar","⥓":"RightVectorBar","⥔":"RightUpVectorBar","⥕":"RightDownVectorBar","⥖":"DownLeftVectorBar","⥗":"DownRightVectorBar","⥘":"LeftUpVectorBar","⥙":"LeftDownVectorBar","⥚":"LeftTeeVector","⥛":"RightTeeVector","⥜":"RightUpTeeVector","⥝":"RightDownTeeVector","⥞":"DownLeftTeeVector","⥟":"DownRightTeeVector","⥠":"LeftUpTeeVector","⥡":"LeftDownTeeVector","⥢":"lHar","⥣":"uHar","⥤":"rHar","⥥":"dHar","⥦":"luruhar","⥧":"ldrdhar","⥨":"ruluhar","⥩":"rdldhar","⥪":"lharul","⥫":"llhard","⥬":"rharul","⥭":"lrhard","⥮":"udhar","⥯":"duhar","⥰":"RoundImplies","⥱":"erarr","⥲":"simrarr","⥳":"larrsim","⥴":"rarrsim","⥵":"rarrap","⥶":"ltlarr","⥸":"gtrarr","⥹":"subrarr","⥻":"suplarr","⥼":"lfisht","⥽":"rfisht","⥾":"ufisht","⥿":"dfisht","⦚":"vzigzag","⦜":"vangrt","⦝":"angrtvbd","⦤":"ange","⦥":"range","⦦":"dwangle","⦧":"uwangle","⦨":"angmsdaa","⦩":"angmsdab","⦪":"angmsdac","⦫":"angmsdad","⦬":"angmsdae","⦭":"angmsdaf","⦮":"angmsdag","⦯":"angmsdah","⦰":"bemptyv","⦱":"demptyv","⦲":"cemptyv","⦳":"raemptyv","⦴":"laemptyv","⦵":"ohbar","⦶":"omid","⦷":"opar","⦹":"operp","⦻":"olcross","⦼":"odsold","⦾":"olcir","⦿":"ofcir","⧀":"olt","⧁":"ogt","⧂":"cirscir","⧃":"cirE","⧄":"solb","⧅":"bsolb","⧉":"boxbox","⧍":"trisb","⧎":"rtriltri","⧏":"LeftTriangleBar","⧏̸":"NotLeftTriangleBar","⧐":"RightTriangleBar","⧐̸":"NotRightTriangleBar","⧜":"iinfin","⧝":"infintie","⧞":"nvinfin","⧣":"eparsl","⧤":"smeparsl","⧥":"eqvparsl","⧫":"lozf","⧴":"RuleDelayed","⧶":"dsol","⨀":"xodot","⨁":"xoplus","⨂":"xotime","⨄":"xuplus","⨆":"xsqcup","⨍":"fpartint","⨐":"cirfnint","⨑":"awint","⨒":"rppolint","⨓":"scpolint","⨔":"npolint","⨕":"pointint","⨖":"quatint","⨗":"intlarhk","⨢":"pluscir","⨣":"plusacir","⨤":"simplus","⨥":"plusdu","⨦":"plussim","⨧":"plustwo","⨩":"mcomma","⨪":"minusdu","⨭":"loplus","⨮":"roplus","⨯":"Cross","⨰":"timesd","⨱":"timesbar","⨳":"smashp","⨴":"lotimes","⨵":"rotimes","⨶":"otimesas","⨷":"Otimes","⨸":"odiv","⨹":"triplus","⨺":"triminus","⨻":"tritime","⨼":"iprod","⨿":"amalg","⩀":"capdot","⩂":"ncup","⩃":"ncap","⩄":"capand","⩅":"cupor","⩆":"cupcap","⩇":"capcup","⩈":"cupbrcap","⩉":"capbrcup","⩊":"cupcup","⩋":"capcap","⩌":"ccups","⩍":"ccaps","⩐":"ccupssm","⩓":"And","⩔":"Or","⩕":"andand","⩖":"oror","⩗":"orslope","⩘":"andslope","⩚":"andv","⩛":"orv","⩜":"andd","⩝":"ord","⩟":"wedbar","⩦":"sdote","⩪":"simdot","⩭":"congdot","⩭̸":"ncongdot","⩮":"easter","⩯":"apacir","⩰":"apE","⩰̸":"napE","⩱":"eplus","⩲":"pluse","⩳":"Esim","⩷":"eDDot","⩸":"equivDD","⩹":"ltcir","⩺":"gtcir","⩻":"ltquest","⩼":"gtquest","⩽":"les","⩽̸":"nles","⩾":"ges","⩾̸":"nges","⩿":"lesdot","⪀":"gesdot","⪁":"lesdoto","⪂":"gesdoto","⪃":"lesdotor","⪄":"gesdotol","⪅":"lap","⪆":"gap","⪇":"lne","⪈":"gne","⪉":"lnap","⪊":"gnap","⪋":"lEg","⪌":"gEl","⪍":"lsime","⪎":"gsime","⪏":"lsimg","⪐":"gsiml","⪑":"lgE","⪒":"glE","⪓":"lesges","⪔":"gesles","⪕":"els","⪖":"egs","⪗":"elsdot","⪘":"egsdot","⪙":"el","⪚":"eg","⪝":"siml","⪞":"simg","⪟":"simlE","⪠":"simgE","⪡":"LessLess","⪡̸":"NotNestedLessLess","⪢":"GreaterGreater","⪢̸":"NotNestedGreaterGreater","⪤":"glj","⪥":"gla","⪦":"ltcc","⪧":"gtcc","⪨":"lescc","⪩":"gescc","⪪":"smt","⪫":"lat","⪬":"smte","⪬︀":"smtes","⪭":"late","⪭︀":"lates","⪮":"bumpE","⪯":"pre","⪯̸":"npre","⪰":"sce","⪰̸":"nsce","⪳":"prE","⪴":"scE","⪵":"prnE","⪶":"scnE","⪷":"prap","⪸":"scap","⪹":"prnap","⪺":"scnap","⪻":"Pr","⪼":"Sc","⪽":"subdot","⪾":"supdot","⪿":"subplus","⫀":"supplus","⫁":"submult","⫂":"supmult","⫃":"subedot","⫄":"supedot","⫅":"subE","⫅̸":"nsubE","⫆":"supE","⫆̸":"nsupE","⫇":"subsim","⫈":"supsim","⫋︀":"vsubnE","⫋":"subnE","⫌︀":"vsupnE","⫌":"supnE","⫏":"csub","⫐":"csup","⫑":"csube","⫒":"csupe","⫓":"subsup","⫔":"supsub","⫕":"subsub","⫖":"supsup","⫗":"suphsub","⫘":"supdsub","⫙":"forkv","⫚":"topfork","⫛":"mlcp","⫤":"Dashv","⫦":"Vdashl","⫧":"Barv","⫨":"vBar","⫩":"vBarv","⫫":"Vbar","⫬":"Not","⫭":"bNot","⫮":"rnmid","⫯":"cirmid","⫰":"midcir","⫱":"topcir","⫲":"nhpar","⫳":"parsim","⫽":"parsl","⫽⃥":"nparsl","♭":"flat","♮":"natur","♯":"sharp","¤":"curren","¢":"cent",$:"dollar","£":"pound","¥":"yen","€":"euro","¹":"sup1","½":"half","⅓":"frac13","¼":"frac14","⅕":"frac15","⅙":"frac16","⅛":"frac18","²":"sup2","⅔":"frac23","⅖":"frac25","³":"sup3","¾":"frac34","⅗":"frac35","⅜":"frac38","⅘":"frac45","⅚":"frac56","⅝":"frac58","⅞":"frac78",𝒶:"ascr",𝕒:"aopf",𝔞:"afr",𝔸:"Aopf",𝔄:"Afr",𝒜:"Ascr",ª:"ordf",á:"aacute",Á:"Aacute",à:"agrave",À:"Agrave",ă:"abreve",Ă:"Abreve",â:"acirc",Â:"Acirc",å:"aring",Å:"angst",ä:"auml",Ä:"Auml",ã:"atilde",Ã:"Atilde",ą:"aogon",Ą:"Aogon",ā:"amacr",Ā:"Amacr",æ:"aelig",Æ:"AElig",𝒷:"bscr",𝕓:"bopf",𝔟:"bfr",𝔹:"Bopf",ℬ:"Bscr",𝔅:"Bfr",𝔠:"cfr",𝒸:"cscr",𝕔:"copf",ℭ:"Cfr",𝒞:"Cscr",ℂ:"Copf",ć:"cacute",Ć:"Cacute",ĉ:"ccirc",Ĉ:"Ccirc",č:"ccaron",Č:"Ccaron",ċ:"cdot",Ċ:"Cdot",ç:"ccedil",Ç:"Ccedil","℅":"incare",𝔡:"dfr",ⅆ:"dd",𝕕:"dopf",𝒹:"dscr",𝒟:"Dscr",𝔇:"Dfr",ⅅ:"DD",𝔻:"Dopf",ď:"dcaron",Ď:"Dcaron",đ:"dstrok",Đ:"Dstrok",ð:"eth",Ð:"ETH",ⅇ:"ee",ℯ:"escr",𝔢:"efr",𝕖:"eopf",ℰ:"Escr",𝔈:"Efr",𝔼:"Eopf",é:"eacute",É:"Eacute",è:"egrave",È:"Egrave",ê:"ecirc",Ê:"Ecirc",ě:"ecaron",Ě:"Ecaron",ë:"euml",Ë:"Euml",ė:"edot",Ė:"Edot",ę:"eogon",Ę:"Eogon",ē:"emacr",Ē:"Emacr",𝔣:"ffr",𝕗:"fopf",𝒻:"fscr",𝔉:"Ffr",𝔽:"Fopf",ℱ:"Fscr",ﬀ:"fflig",ﬃ:"ffilig",ﬄ:"ffllig",ﬁ:"filig",fj:"fjlig",ﬂ:"fllig",ƒ:"fnof",ℊ:"gscr",𝕘:"gopf",𝔤:"gfr",𝒢:"Gscr",𝔾:"Gopf",𝔊:"Gfr",ǵ:"gacute",ğ:"gbreve",Ğ:"Gbreve",ĝ:"gcirc",Ĝ:"Gcirc",ġ:"gdot",Ġ:"Gdot",Ģ:"Gcedil",𝔥:"hfr",ℎ:"planckh",𝒽:"hscr",𝕙:"hopf",ℋ:"Hscr",ℌ:"Hfr",ℍ:"Hopf",ĥ:"hcirc",Ĥ:"Hcirc",ℏ:"hbar",ħ:"hstrok",Ħ:"Hstrok",𝕚:"iopf",𝔦:"ifr",𝒾:"iscr",ⅈ:"ii",𝕀:"Iopf",ℐ:"Iscr",ℑ:"Im",í:"iacute",Í:"Iacute",ì:"igrave",Ì:"Igrave",î:"icirc",Î:"Icirc",ï:"iuml",Ï:"Iuml",ĩ:"itilde",Ĩ:"Itilde",İ:"Idot",į:"iogon",Į:"Iogon",ī:"imacr",Ī:"Imacr",ĳ:"ijlig",Ĳ:"IJlig",ı:"imath",𝒿:"jscr",𝕛:"jopf",𝔧:"jfr",𝒥:"Jscr",𝔍:"Jfr",𝕁:"Jopf",ĵ:"jcirc",Ĵ:"Jcirc",ȷ:"jmath",𝕜:"kopf",𝓀:"kscr",𝔨:"kfr",𝒦:"Kscr",𝕂:"Kopf",𝔎:"Kfr",ķ:"kcedil",Ķ:"Kcedil",𝔩:"lfr",𝓁:"lscr",ℓ:"ell",𝕝:"lopf",ℒ:"Lscr",𝔏:"Lfr",𝕃:"Lopf",ĺ:"lacute",Ĺ:"Lacute",ľ:"lcaron",Ľ:"Lcaron",ļ:"lcedil",Ļ:"Lcedil",ł:"lstrok",Ł:"Lstrok",ŀ:"lmidot",Ŀ:"Lmidot",𝔪:"mfr",𝕞:"mopf",𝓂:"mscr",𝔐:"Mfr",𝕄:"Mopf",ℳ:"Mscr",𝔫:"nfr",𝕟:"nopf",𝓃:"nscr",ℕ:"Nopf",𝒩:"Nscr",𝔑:"Nfr",ń:"nacute",Ń:"Nacute",ň:"ncaron",Ň:"Ncaron",ñ:"ntilde",Ñ:"Ntilde",ņ:"ncedil",Ņ:"Ncedil","№":"numero",ŋ:"eng",Ŋ:"ENG",𝕠:"oopf",𝔬:"ofr",ℴ:"oscr",𝒪:"Oscr",𝔒:"Ofr",𝕆:"Oopf",º:"ordm",ó:"oacute",Ó:"Oacute",ò:"ograve",Ò:"Ograve",ô:"ocirc",Ô:"Ocirc",ö:"ouml",Ö:"Ouml",ő:"odblac",Ő:"Odblac",õ:"otilde",Õ:"Otilde",ø:"oslash",Ø:"Oslash",ō:"omacr",Ō:"Omacr",œ:"oelig",Œ:"OElig",𝔭:"pfr",𝓅:"pscr",𝕡:"popf",ℙ:"Popf",𝔓:"Pfr",𝒫:"Pscr",𝕢:"qopf",𝔮:"qfr",𝓆:"qscr",𝒬:"Qscr",𝔔:"Qfr",ℚ:"Qopf",ĸ:"kgreen",𝔯:"rfr",𝕣:"ropf",𝓇:"rscr",ℛ:"Rscr",ℜ:"Re",ℝ:"Ropf",ŕ:"racute",Ŕ:"Racute",ř:"rcaron",Ř:"Rcaron",ŗ:"rcedil",Ŗ:"Rcedil",𝕤:"sopf",𝓈:"sscr",𝔰:"sfr",𝕊:"Sopf",𝔖:"Sfr",𝒮:"Sscr","Ⓢ":"oS",ś:"sacute",Ś:"Sacute",ŝ:"scirc",Ŝ:"Scirc",š:"scaron",Š:"Scaron",ş:"scedil",Ş:"Scedil",ß:"szlig",𝔱:"tfr",𝓉:"tscr",𝕥:"topf",𝒯:"Tscr",𝔗:"Tfr",𝕋:"Topf",ť:"tcaron",Ť:"Tcaron",ţ:"tcedil",Ţ:"Tcedil","™":"trade",ŧ:"tstrok",Ŧ:"Tstrok",𝓊:"uscr",𝕦:"uopf",𝔲:"ufr",𝕌:"Uopf",𝔘:"Ufr",𝒰:"Uscr",ú:"uacute",Ú:"Uacute",ù:"ugrave",Ù:"Ugrave",ŭ:"ubreve",Ŭ:"Ubreve",û:"ucirc",Û:"Ucirc",ů:"uring",Ů:"Uring",ü:"uuml",Ü:"Uuml",ű:"udblac",Ű:"Udblac",ũ:"utilde",Ũ:"Utilde",ų:"uogon",Ų:"Uogon",ū:"umacr",Ū:"Umacr",𝔳:"vfr",𝕧:"vopf",𝓋:"vscr",𝔙:"Vfr",𝕍:"Vopf",𝒱:"Vscr",𝕨:"wopf",𝓌:"wscr",𝔴:"wfr",𝒲:"Wscr",𝕎:"Wopf",𝔚:"Wfr",ŵ:"wcirc",Ŵ:"Wcirc",𝔵:"xfr",𝓍:"xscr",𝕩:"xopf",𝕏:"Xopf",𝔛:"Xfr",𝒳:"Xscr",𝔶:"yfr",𝓎:"yscr",𝕪:"yopf",𝒴:"Yscr",𝔜:"Yfr",𝕐:"Yopf",ý:"yacute",Ý:"Yacute",ŷ:"ycirc",Ŷ:"Ycirc",ÿ:"yuml",Ÿ:"Yuml",𝓏:"zscr",𝔷:"zfr",𝕫:"zopf",ℨ:"Zfr",ℤ:"Zopf",𝒵:"Zscr",ź:"zacute",Ź:"Zacute",ž:"zcaron",Ž:"Zcaron",ż:"zdot",Ż:"Zdot",Ƶ:"imped",þ:"thorn",Þ:"THORN",ŉ:"napos",α:"alpha",Α:"Alpha",β:"beta",Β:"Beta",γ:"gamma",Γ:"Gamma",δ:"delta",Δ:"Delta",ε:"epsi",ϵ:"epsiv",Ε:"Epsilon",ϝ:"gammad",Ϝ:"Gammad",ζ:"zeta",Ζ:"Zeta",η:"eta",Η:"Eta",θ:"theta",ϑ:"thetav",Θ:"Theta",ι:"iota",Ι:"Iota",κ:"kappa",ϰ:"kappav",Κ:"Kappa",λ:"lambda",Λ:"Lambda",μ:"mu",µ:"micro",Μ:"Mu",ν:"nu",Ν:"Nu",ξ:"xi",Ξ:"Xi",ο:"omicron",Ο:"Omicron",π:"pi",ϖ:"piv",Π:"Pi",ρ:"rho",ϱ:"rhov",Ρ:"Rho",σ:"sigma",Σ:"Sigma",ς:"sigmaf",τ:"tau",Τ:"Tau",υ:"upsi",Υ:"Upsilon",ϒ:"Upsi",φ:"phi",ϕ:"phiv",Φ:"Phi",χ:"chi",Χ:"Chi",ψ:"psi",Ψ:"Psi",ω:"omega",Ω:"ohm",а:"acy",А:"Acy",б:"bcy",Б:"Bcy",в:"vcy",В:"Vcy",г:"gcy",Г:"Gcy",ѓ:"gjcy",Ѓ:"GJcy",д:"dcy",Д:"Dcy",ђ:"djcy",Ђ:"DJcy",е:"iecy",Е:"IEcy",ё:"iocy",Ё:"IOcy",є:"jukcy",Є:"Jukcy",ж:"zhcy",Ж:"ZHcy",з:"zcy",З:"Zcy",ѕ:"dscy",Ѕ:"DScy",и:"icy",И:"Icy",і:"iukcy",І:"Iukcy",ї:"yicy",Ї:"YIcy",й:"jcy",Й:"Jcy",ј:"jsercy",Ј:"Jsercy",к:"kcy",К:"Kcy",ќ:"kjcy",Ќ:"KJcy",л:"lcy",Л:"Lcy",љ:"ljcy",Љ:"LJcy",м:"mcy",М:"Mcy",н:"ncy",Н:"Ncy",њ:"njcy",Њ:"NJcy",о:"ocy",О:"Ocy",п:"pcy",П:"Pcy",р:"rcy",Р:"Rcy",с:"scy",С:"Scy",т:"tcy",Т:"Tcy",ћ:"tshcy",Ћ:"TSHcy",у:"ucy",У:"Ucy",ў:"ubrcy",Ў:"Ubrcy",ф:"fcy",Ф:"Fcy",х:"khcy",Х:"KHcy",ц:"tscy",Ц:"TScy",ч:"chcy",Ч:"CHcy",џ:"dzcy",Џ:"DZcy",ш:"shcy",Ш:"SHcy",щ:"shchcy",Щ:"SHCHcy",ъ:"hardcy",Ъ:"HARDcy",ы:"ycy",Ы:"Ycy",ь:"softcy",Ь:"SOFTcy",э:"ecy",Э:"Ecy",ю:"yucy",Ю:"YUcy",я:"yacy",Я:"YAcy",ℵ:"aleph",ℶ:"beth",ℷ:"gimel",ℸ:"daleth"},p=/["&'<>`]/g,h={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",
// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the
// following is not strictly necessary unless it’s part of a tag or an
// unquoted attribute value. We’re only escaping it to support those
// situations, and for XML support.
">":"&gt;",
// In Internet Explorer ≤ 8, the backtick character can be used
// to break out of (un)quoted attribute values or HTML comments.
// See http://html5sec.org/#102, http://html5sec.org/#108, and
// http://html5sec.org/#133.
"`":"&#x60;"},d=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,g=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,m=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,y={aacute:"á",Aacute:"Á",abreve:"ă",Abreve:"Ă",ac:"∾",acd:"∿",acE:"∾̳",acirc:"â",Acirc:"Â",acute:"´",acy:"а",Acy:"А",aelig:"æ",AElig:"Æ",af:"⁡",afr:"𝔞",Afr:"𝔄",agrave:"à",Agrave:"À",alefsym:"ℵ",aleph:"ℵ",alpha:"α",Alpha:"Α",amacr:"ā",Amacr:"Ā",amalg:"⨿",amp:"&",AMP:"&",and:"∧",And:"⩓",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",Aogon:"Ą",aopf:"𝕒",Aopf:"𝔸",ap:"≈",apacir:"⩯",ape:"≊",apE:"⩰",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",aring:"å",Aring:"Å",ascr:"𝒶",Ascr:"𝒜",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",Bcy:"Б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",beta:"β",Beta:"Β",beth:"ℶ",between:"≬",bfr:"𝔟",Bfr:"𝔅",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bNot:"⫭",bopf:"𝕓",Bopf:"𝔹",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxhD:"╥",boxHd:"╤",boxHD:"╦",boxhu:"┴",boxhU:"╨",boxHu:"╧",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpe:"≏",bumpE:"⪮",bumpeq:"≏",Bumpeq:"≎",cacute:"ć",Cacute:"Ć",cap:"∩",Cap:"⋒",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",ccaron:"č",Ccaron:"Č",ccedil:"ç",Ccedil:"Ç",ccirc:"ĉ",Ccirc:"Ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",Cdot:"Ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",chcy:"ч",CHcy:"Ч",check:"✓",checkmark:"✓",chi:"χ",Chi:"Χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cire:"≗",cirE:"⧃",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",colone:"≔",Colone:"⩴",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",cscr:"𝒸",Cscr:"𝒞",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",Cup:"⋓",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",dArr:"⇓",Darr:"↡",dash:"‐",dashv:"⊣",Dashv:"⫤",dbkarow:"⤏",dblac:"˝",dcaron:"ď",Dcaron:"Ď",dcy:"д",Dcy:"Д",dd:"ⅆ",DD:"ⅅ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",delta:"δ",Delta:"Δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",Dfr:"𝔇",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",DJcy:"Ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",Dopf:"𝔻",dot:"˙",Dot:"¨",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",downarrow:"↓",Downarrow:"⇓",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",Dscr:"𝒟",dscy:"ѕ",DScy:"Ѕ",dsol:"⧶",dstrok:"đ",Dstrok:"Đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",DZcy:"Џ",dzigrarr:"⟿",eacute:"é",Eacute:"É",easter:"⩮",ecaron:"ě",Ecaron:"Ě",ecir:"≖",ecirc:"ê",Ecirc:"Ê",ecolon:"≕",ecy:"э",Ecy:"Э",eDDot:"⩷",edot:"ė",eDot:"≑",Edot:"Ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",Efr:"𝔈",eg:"⪚",egrave:"è",Egrave:"È",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",Emacr:"Ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",eng:"ŋ",ENG:"Ŋ",ensp:" ",eogon:"ę",Eogon:"Ę",eopf:"𝕖",Eopf:"𝔼",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",Epsilon:"Ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",esim:"≂",Esim:"⩳",eta:"η",Eta:"Η",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",fcy:"ф",Fcy:"Ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",Ffr:"𝔉",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",Fopf:"𝔽",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",gamma:"γ",Gamma:"Γ",gammad:"ϝ",Gammad:"Ϝ",gap:"⪆",gbreve:"ğ",Gbreve:"Ğ",Gcedil:"Ģ",gcirc:"ĝ",Gcirc:"Ĝ",gcy:"г",Gcy:"Г",gdot:"ġ",Gdot:"Ġ",ge:"≥",gE:"≧",gel:"⋛",gEl:"⪌",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",Gfr:"𝔊",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",GJcy:"Ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",Gopf:"𝔾",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",gscr:"ℊ",Gscr:"𝒢",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",Gt:"≫",GT:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",HARDcy:"Ъ",harr:"↔",hArr:"⇔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",hcirc:"ĥ",Hcirc:"Ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",hstrok:"ħ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",iacute:"í",Iacute:"Í",ic:"⁣",icirc:"î",Icirc:"Î",icy:"и",Icy:"И",Idot:"İ",iecy:"е",IEcy:"Е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",igrave:"ì",Igrave:"Ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",IJlig:"Ĳ",Im:"ℑ",imacr:"ī",Imacr:"Ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",Int:"∬",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",iocy:"ё",IOcy:"Ё",iogon:"į",Iogon:"Į",iopf:"𝕚",Iopf:"𝕀",iota:"ι",Iota:"Ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",Itilde:"Ĩ",iukcy:"і",Iukcy:"І",iuml:"ï",Iuml:"Ï",jcirc:"ĵ",Jcirc:"Ĵ",jcy:"й",Jcy:"Й",jfr:"𝔧",Jfr:"𝔍",jmath:"ȷ",jopf:"𝕛",Jopf:"𝕁",jscr:"𝒿",Jscr:"𝒥",jsercy:"ј",Jsercy:"Ј",jukcy:"є",Jukcy:"Є",kappa:"κ",Kappa:"Κ",kappav:"ϰ",kcedil:"ķ",Kcedil:"Ķ",kcy:"к",Kcy:"К",kfr:"𝔨",Kfr:"𝔎",kgreen:"ĸ",khcy:"х",KHcy:"Х",kjcy:"ќ",KJcy:"Ќ",kopf:"𝕜",Kopf:"𝕂",kscr:"𝓀",Kscr:"𝒦",lAarr:"⇚",lacute:"ĺ",Lacute:"Ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",Lambda:"Λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larr:"←",lArr:"⇐",Larr:"↞",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",lAtail:"⤛",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",Lcaron:"Ľ",lcedil:"ļ",Lcedil:"Ļ",lceil:"⌈",lcub:"{",lcy:"л",Lcy:"Л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",leftarrow:"←",Leftarrow:"⇐",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",Leftrightarrow:"⇔",LeftRightArrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",leg:"⋚",lEg:"⪋",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",Lfr:"𝔏",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",LJcy:"Љ",ll:"≪",Ll:"⋘",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",lmidot:"ŀ",Lmidot:"Ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",Longleftarrow:"⟸",LongLeftArrow:"⟵",longleftrightarrow:"⟷",Longleftrightarrow:"⟺",LongLeftRightArrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",Longrightarrow:"⟹",LongRightArrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",Lopf:"𝕃",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",Lstrok:"Ł",lt:"<",Lt:"≪",LT:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",Map:"⤅",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",Mcy:"М",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",mfr:"𝔪",Mfr:"𝔐",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",Mopf:"𝕄",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",mu:"μ",Mu:"Μ",multimap:"⊸",mumap:"⊸",nabla:"∇",nacute:"ń",Nacute:"Ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",Ncaron:"Ň",ncedil:"ņ",Ncedil:"Ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",Ncy:"Н",ndash:"–",ne:"≠",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",nfr:"𝔫",Nfr:"𝔑",nge:"≱",ngE:"≧̸",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",ngt:"≯",nGt:"≫⃒",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",NJcy:"Њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nle:"≰",nlE:"≦̸",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nlt:"≮",nLt:"≪⃒",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",not:"¬",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrarr:"↛",nrArr:"⇏",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",Nscr:"𝒩",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsube:"⊈",nsubE:"⫅̸",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupe:"⊉",nsupE:"⫆̸",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",Ntilde:"Ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",Nu:"Ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",oacute:"ó",Oacute:"Ó",oast:"⊛",ocir:"⊚",ocirc:"ô",Ocirc:"Ô",ocy:"о",Ocy:"О",odash:"⊝",odblac:"ő",Odblac:"Ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",OElig:"Œ",ofcir:"⦿",ofr:"𝔬",Ofr:"𝔒",ogon:"˛",ograve:"ò",Ograve:"Ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",Omacr:"Ō",omega:"ω",Omega:"Ω",omicron:"ο",Omicron:"Ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",Oopf:"𝕆",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",or:"∨",Or:"⩔",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",oscr:"ℴ",Oscr:"𝒪",oslash:"ø",Oslash:"Ø",osol:"⊘",otilde:"õ",Otilde:"Õ",otimes:"⊗",Otimes:"⨷",otimesas:"⨶",ouml:"ö",Ouml:"Ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",pcy:"п",Pcy:"П",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",Pfr:"𝔓",phi:"φ",Phi:"Φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",Pi:"Π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",pr:"≺",Pr:"⪻",prap:"⪷",prcue:"≼",pre:"⪯",prE:"⪳",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",Pscr:"𝒫",psi:"ψ",Psi:"Ψ",puncsp:" ",qfr:"𝔮",Qfr:"𝔔",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",qscr:"𝓆",Qscr:"𝒬",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",racute:"ŕ",Racute:"Ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rArr:"⇒",Rarr:"↠",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",Rarrtl:"⤖",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",Rcaron:"Ř",rcedil:"ŗ",Rcedil:"Ŗ",rceil:"⌉",rcub:"}",rcy:"р",Rcy:"Р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",Rho:"Ρ",rhov:"ϱ",RightAngleBracket:"⟩",rightarrow:"→",Rightarrow:"⇒",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",sacute:"ś",Sacute:"Ś",sbquo:"‚",sc:"≻",Sc:"⪼",scap:"⪸",scaron:"š",Scaron:"Š",sccue:"≽",sce:"⪰",scE:"⪴",scedil:"ş",Scedil:"Ş",scirc:"ŝ",Scirc:"Ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",Scy:"С",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",Sfr:"𝔖",sfrown:"⌢",sharp:"♯",shchcy:"щ",SHCHcy:"Щ",shcy:"ш",SHcy:"Ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",sigma:"σ",Sigma:"Σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",SOFTcy:"Ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",Sopf:"𝕊",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",Sscr:"𝒮",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",Star:"⋆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",sube:"⊆",subE:"⫅",subedot:"⫃",submult:"⫁",subne:"⊊",subnE:"⫋",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup:"⊃",Sup:"⋑",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supe:"⊇",supE:"⫆",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supne:"⊋",supnE:"⫌",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",tau:"τ",Tau:"Τ",tbrk:"⎴",tcaron:"ť",Tcaron:"Ť",tcedil:"ţ",Tcedil:"Ţ",tcy:"т",Tcy:"Т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",Tfr:"𝔗",there4:"∴",therefore:"∴",Therefore:"∴",theta:"θ",Theta:"Θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",thorn:"þ",THORN:"Þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",Topf:"𝕋",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",Tscr:"𝒯",tscy:"ц",TScy:"Ц",tshcy:"ћ",TSHcy:"Ћ",tstrok:"ŧ",Tstrok:"Ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uacute:"ú",Uacute:"Ú",uarr:"↑",uArr:"⇑",Uarr:"↟",Uarrocir:"⥉",ubrcy:"ў",Ubrcy:"Ў",ubreve:"ŭ",Ubreve:"Ŭ",ucirc:"û",Ucirc:"Û",ucy:"у",Ucy:"У",udarr:"⇅",udblac:"ű",Udblac:"Ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",Ufr:"𝔘",ugrave:"ù",Ugrave:"Ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",Umacr:"Ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",uogon:"ų",Uogon:"Ų",uopf:"𝕦",Uopf:"𝕌",uparrow:"↑",Uparrow:"⇑",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",updownarrow:"↕",Updownarrow:"⇕",UpDownArrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",upsilon:"υ",Upsilon:"Υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",Uring:"Ů",urtri:"◹",uscr:"𝓊",Uscr:"𝒰",utdot:"⋰",utilde:"ũ",Utilde:"Ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",Uuml:"Ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",vcy:"в",Vcy:"В",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",vee:"∨",Vee:"⋁",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",vfr:"𝔳",Vfr:"𝔙",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",Vopf:"𝕍",vprop:"∝",vrtri:"⊳",vscr:"𝓋",Vscr:"𝒱",vsubne:"⊊︀",vsubnE:"⫋︀",vsupne:"⊋︀",vsupnE:"⫌︀",Vvdash:"⊪",vzigzag:"⦚",wcirc:"ŵ",Wcirc:"Ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",wfr:"𝔴",Wfr:"𝔚",wopf:"𝕨",Wopf:"𝕎",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",Wscr:"𝒲",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",Xfr:"𝔛",xharr:"⟷",xhArr:"⟺",xi:"ξ",Xi:"Ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",Xopf:"𝕏",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",xscr:"𝓍",Xscr:"𝒳",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",Yacute:"Ý",yacy:"я",YAcy:"Я",ycirc:"ŷ",Ycirc:"Ŷ",ycy:"ы",Ycy:"Ы",yen:"¥",yfr:"𝔶",Yfr:"𝔜",yicy:"ї",YIcy:"Ї",yopf:"𝕪",Yopf:"𝕐",yscr:"𝓎",Yscr:"𝒴",yucy:"ю",YUcy:"Ю",yuml:"ÿ",Yuml:"Ÿ",zacute:"ź",Zacute:"Ź",zcaron:"ž",Zcaron:"Ž",zcy:"з",Zcy:"З",zdot:"ż",Zdot:"Ż",zeetrf:"ℨ",ZeroWidthSpace:"​",zeta:"ζ",Zeta:"Ζ",zfr:"𝔷",Zfr:"ℨ",zhcy:"ж",ZHcy:"Ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",zscr:"𝓏",Zscr:"𝒵",zwj:"‍",zwnj:"‌"},v={aacute:"á",Aacute:"Á",acirc:"â",Acirc:"Â",acute:"´",aelig:"æ",AElig:"Æ",agrave:"à",Agrave:"À",amp:"&",AMP:"&",aring:"å",Aring:"Å",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",brvbar:"¦",ccedil:"ç",Ccedil:"Ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",eacute:"é",Eacute:"É",ecirc:"ê",Ecirc:"Ê",egrave:"è",Egrave:"È",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",iacute:"í",Iacute:"Í",icirc:"î",Icirc:"Î",iexcl:"¡",igrave:"ì",Igrave:"Ì",iquest:"¿",iuml:"ï",Iuml:"Ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",ntilde:"ñ",Ntilde:"Ñ",oacute:"ó",Oacute:"Ó",ocirc:"ô",Ocirc:"Ô",ograve:"ò",Ograve:"Ò",ordf:"ª",ordm:"º",oslash:"ø",Oslash:"Ø",otilde:"õ",Otilde:"Õ",ouml:"ö",Ouml:"Ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",thorn:"þ",THORN:"Þ",times:"×",uacute:"ú",Uacute:"Ú",ucirc:"û",Ucirc:"Û",ugrave:"ù",Ugrave:"Ù",uml:"¨",uuml:"ü",Uuml:"Ü",yacute:"ý",Yacute:"Ý",yen:"¥",yuml:"ÿ"},b={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"},w=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],E=String.fromCharCode,A={}.hasOwnProperty,T=function(e,t){return A.call(e,t)},x=function(e,t){if(!e)return t;var r,n={};for(r in t)
// A `hasOwnProperty` check is not needed here, since only recognized
// option names are used anyway. Any others are ignored.
n[r]=T(e,r)?e[r]:t[r];return n},S=function(e,t){var r="";return e>=55296&&e<=57343||e>1114111?(
// See issue #4:
// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is
// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD
// REPLACEMENT CHARACTER.”
t&&D("character reference outside the permissible Unicode range"),"�"):T(b,e)?(t&&D("disallowed character reference"),b[e]):(t&&function(e,t){for(var r=-1,n=e.length;++r<n;)if(e[r]==t)return 1;return 0}(w,e)&&D("disallowed character reference"),e>65535&&(r+=E((e-=65536)>>>10&1023|55296),e=56320|1023&e),r+=E(e))},_=function(e){return"&#x"+e.toString(16).toUpperCase()+";"},N=function(e){return"&#"+e+";"},D=function(e){throw Error("Parse error: "+e)},C=function e(t,r){(r=x(r,e.options)).strict&&g.test(t)&&D("forbidden code point");var n=r.encodeEverything,o=r.useNamedReferences,i=r.allowUnsafeSymbols,a=r.decimal?N:_,h=function(e){return a(e.charCodeAt(0))};return n?(
// Encode ASCII symbols.
t=t.replace(u,(function(e){
// Use named references if requested & possible.
return o&&T(f,e)?"&"+f[e]+";":h(e)})),// Shorten a few escapes that represent two symbols, of which at least one
// is within the ASCII range.
o&&(t=t.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),// Encode non-ASCII symbols.
o&&(
// Encode non-ASCII symbols that can be replaced with a named reference.
t=t.replace(l,(function(e){
// Note: there is no need to check `has(encodeMap, string)` here.
return"&"+f[e]+";"})))):o?(
// Apply named character references.
// Encode `<>"'&` using named character references.
i||(t=t.replace(p,(function(e){return"&"+f[e]+";";// no need to check `has()` here
}))),// Encode non-ASCII symbols that can be replaced with a named reference.
t=(// Shorten escapes that represent two symbols, of which at least one is
// `<>"'&`.
t=t.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;")).replace(l,(function(e){
// Note: there is no need to check `has(encodeMap, string)` here.
return"&"+f[e]+";"}))):i||(
// Encode `<>"'&` using hexadecimal escapes, now that they’re not handled
// using named character references.
t=t.replace(p,h)),t.replace(s,(function(e){
// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
var t=e.charCodeAt(0),r=e.charCodeAt(1);return a(1024*(t-55296)+r-56320+65536)})).replace(c,h)};// All ASCII symbols (not just printable ASCII) except those listed in the
// first column of the overrides table.
// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides
// Expose default options (so they can be overridden globally).
C.options={allowUnsafeSymbols:0,encodeEverything:0,strict:0,useNamedReferences:0,decimal:0};var k=function e(t,r){var n=(r=x(r,e.options)).strict;return n&&d.test(t)&&D("malformed character reference"),t.replace(m,(function(e,t,o,i,a,s,u,c,l){var f,p,h,d,g,m;return t?y[g=t]:o?(
// Decode named character references without trailing `;`, e.g. `&amp`.
// This is only a parse error if it gets converted to `&`, or if it is
// followed by `=` in an attribute context.
g=o,(m=i)&&r.isAttributeValue?(n&&"="==m&&D("`&` did not start a character reference"),e):(n&&D("named character reference was not terminated by a semicolon"),v[g]+(m||""))):a?(
// Decode decimal escapes, e.g. `&#119558;`.
h=a,p=s,n&&!p&&D("character reference was not terminated by a semicolon"),f=parseInt(h,10),S(f,n)):u?(
// Decode hexadecimal escapes, e.g. `&#x1D306;`.
d=u,p=c,n&&!p&&D("character reference was not terminated by a semicolon"),f=parseInt(d,16),S(f,n)):(// If we’re still here, `if ($7)` is implied; it’s an ambiguous
// ampersand for sure. https://mths.be/notes/ambiguous-ampersands
n&&D("named character reference was not terminated by a semicolon"),e)}))};// Expose default options (so they can be overridden globally).
k.options={isAttributeValue:0,strict:0};var O={version:"1.2.0",encode:C,decode:k,escape:function(e){return e.replace(p,(function(e){
// Note: there is no need to check `has(escapeMap, $0)` here.
return h[e]}))},unescape:k};
/*--------------------------------------------------------------------------*/ // Some AMD build optimizers, like r.js, check for specific condition patterns
// like the following:
if(o&&!o.nodeType)if(i)
// in Node.js, io.js, or RingoJS v0.8.0+
i.exports=O;else
// in Narwhal or RingoJS v0.7.0-
for(var R in O)T(O,R)&&(o[R]=O[R]);else
// in Rhino or a web browser
n.he=O}(e)})),nh=Object.prototype.toString,oh=function(e){var t=nh.call(e),r="[object Arguments]"===t;return r||(r="[object Array]"!==t&&null!==e&&"object"===qo(e)&&"number"==typeof e.length&&e.length>=0&&"[object Function]"===nh.call(e.callee)),r};if(!Object.keys){
// modified from https://github.com/es-shims/es5-shim
var ih=Object.prototype.hasOwnProperty,ah=Object.prototype.toString,sh=oh,uh=Object.prototype.propertyIsEnumerable,ch=!uh.call({toString:null},"toString"),lh=uh.call((function(){}),"prototype"),fh=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],ph=function(e){var t=e.constructor;return t&&t.prototype===e},hh={$applicationCache:1,$console:1,$external:1,$frame:1,$frameElement:1,$frames:1,$innerHeight:1,$innerWidth:1,$onmozfullscreenchange:1,$onmozfullscreenerror:1,$outerHeight:1,$outerWidth:1,$pageXOffset:1,$pageYOffset:1,$parent:1,$scrollLeft:1,$scrollTop:1,$scrollX:1,$scrollY:1,$self:1,$webkitIndexedDB:1,$webkitStorageInfo:1,$window:1},dh=function(){
/* global window */
if("undefined"==typeof window)return 0;for(var e in window)try{if(!hh["$"+e]&&ih.call(window,e)&&null!==window[e]&&"object"===qo(window[e]))try{ph(window[e])}catch(e){return 1}}catch(e){return 1}return 0}();th=function(e){var t=null!==e&&"object"===qo(e),r="[object Function]"===ah.call(e),n=sh(e),o=t&&"[object String]"===ah.call(e),i=[];if(!t&&!r&&!n)throw new TypeError("Object.keys called on a non-object");var a=lh&&r;if(o&&e.length>0&&!ih.call(e,0))for(var s=0;s<e.length;++s)i.push(String(s));if(n&&e.length>0)for(var u=0;u<e.length;++u)i.push(String(u));else for(var c in e)a&&"prototype"===c||!ih.call(e,c)||i.push(String(c));if(ch)for(var l=function(e){
/* global window */
if("undefined"==typeof window||!dh)return ph(e);try{return ph(e)}catch(e){return 0}}(e),f=0;f<fh.length;++f)l&&"constructor"===fh[f]||!ih.call(e,fh[f])||i.push(fh[f]);return i}}var gh=th,mh=Array.prototype.slice,yh=Object.keys,vh=yh?function(e){return yh(e)}:gh,bh=Object.keys;vh.shim=function(){return Object.keys?function(){
// Safari 5.0 bug
var e=Object.keys(arguments);return e&&e.length===arguments.length}(1,2)||(Object.keys=function(e){
// eslint-disable-line func-name-matching
return oh(e)?bh(mh.call(e)):bh(e)}):Object.keys=vh,Object.keys||vh};var wh=vh,Eh="function"==typeof Symbol&&"symbol"===qo(Symbol("foo")),Ah=Object.prototype.toString,Th=Array.prototype.concat,xh=Object.defineProperty,Sh=xh&&function(){var e={};try{// eslint-disable-next-line no-unused-vars, no-restricted-syntax
for(var t in xh(e,"x",{enumerable:0,value:e}),e)
// jscs:ignore disallowUnusedVariables
return 0;return e.x===e}catch(e){
/* this is IE 8. */
return 0}}(),_h=function(e,t,r,n){var o;(!(t in e)||"function"==typeof(o=n)&&"[object Function]"===Ah.call(o)&&n())&&(Sh?xh(e,t,{configurable:1,enumerable:0,value:r,writable:1}):e[t]=r)},Nh=function(e,t){var r=arguments.length>2?arguments[2]:{},n=wh(t);Eh&&(n=Th.call(n,Object.getOwnPropertySymbols(t)));for(var o=0;o<n.length;o+=1)_h(e,n[o],t[n[o]],r[n[o]])};Nh.supportsDescriptors=!!Sh;var Dh=Nh,Ch="Function.prototype.bind called on incompatible ",kh=Array.prototype.slice,Oh=Object.prototype.toString,Rh=Function.prototype.bind||function(e){var t=this;if("function"!=typeof t||"[object Function]"!==Oh.call(t))throw new TypeError(Ch+t);for(var r,n=kh.call(arguments,1),o=function(){if(this instanceof r){var o=t.apply(this,n.concat(kh.call(arguments)));return Object(o)===o?o:this}return t.apply(e,n.concat(kh.call(arguments)))},i=Math.max(0,t.length-n.length),a=[],s=0;s<i;s++)a.push("$"+s);if(r=Function("binder","return function ("+a.join(",")+"){ return binder.apply(this,arguments); }")(o),t.prototype){var u=function(){};u.prototype=t.prototype,r.prototype=new u,u.prototype=null}return r},Lh=function(e){return null!=e},qh=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return 0;if("symbol"===qo(Symbol.iterator))return 1;var e={},t=Symbol("test"),r=Object(t);if("string"==typeof t)return 0;if("[object Symbol]"!==Object.prototype.toString.call(t))return 0;if("[object Symbol]"!==Object.prototype.toString.call(r))return 0;// temp disabled per https://github.com/ljharb/object.assign/issues/17
// if (sym instanceof Symbol) { return false; }
// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
// if (!(symObj instanceof Symbol)) { return false; }
// if (typeof Symbol.prototype.toString !== 'function') { return false; }
// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }
for(t in e[t]=42,e)return 0;// eslint-disable-line no-restricted-syntax
if("function"==typeof Object.keys&&0!==Object.keys(e).length)return 0;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return 0;var n=Object.getOwnPropertySymbols(e);if(1!==n.length||n[0]!==t)return 0;if(!Object.prototype.propertyIsEnumerable.call(e,t))return 0;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(e,t);if(42!==o.value||1!=o.enumerable)return 0}return 1}(),Ih=Object,Bh=Rh.call(Function.call,Array.prototype.push),Ph=Rh.call(Function.call,Object.prototype.propertyIsEnumerable),jh=qh?Object.getOwnPropertySymbols:null,Fh=function(e,t){if(!Lh(e))throw new TypeError("target must be an object");var r,n,o,i,a,s,u,c=Ih(e);for(r=1;r<arguments.length;++r){n=Ih(arguments[r]),i=wh(n);var l=qh&&(Object.getOwnPropertySymbols||jh);if(l)for(a=l(n),o=0;o<a.length;++o)u=a[o],Ph(n,u)&&Bh(i,u);for(o=0;o<i.length;++o)s=n[u=i[o]],Ph(n,u)&&(c[u]=s)}return c},Uh=Zp.onFreeze,Vh=Object.preventExtensions,Mh=s((function(){Vh(1)}));
// `Object.preventExtensions` method
// https://tc39.github.io/ecma262/#sec-object.preventextensions
qe({target:"Object",stat:1,forced:Mh,sham:!Kp},{preventExtensions:function(e){return Vh&&b(e)?Vh(Uh(e)):e}});var Hh=function(){return Object.assign?function(){if(!Object.assign)return 0;// v8, specifically in node 4.x, has a bug with incorrect property enumeration order
// note: this does not detect the bug unless there's 20 characters
for(var e="abcdefghijklmnopqrst",t=e.split(""),r={},n=0;n<t.length;++n)r[t[n]]=t[n];var o=Object.assign({},r),i="";for(var a in o)i+=a;return e!==i}()||function(){if(!Object.assign||!Object.preventExtensions)return 0;// Firefox 37 still has "pending exception" logic in its Object.assign implementation,
// which is 72% slower than our shim, and Firefox 40's native implementation.
var e=Object.preventExtensions({1:2});try{Object.assign(e,"xy")}catch(t){return"y"===e[1]}return 0}()?Fh:Object.assign:Fh},zh=Hh();Dh(zh,{getPolyfill:Hh,implementation:Fh,shim:function(){var e=Hh();return Dh(Object,{assign:e},{assign:function(){return Object.assign!==e}}),e}});var Gh=zh,Yh=r((function(e,t){
/**
	   * Various utility functions used throughout Mocha's codebase.
	   * @module utils
	   */
/**
	   * Module dependencies.
	   */
var r=t.assign=Gh.getPolyfill();
/**
	   * Inherit the prototype methods from one constructor into another.
	   *
	   * @param {function} ctor - Constructor function which needs to inherit the
	   *     prototype.
	   * @param {function} superCtor - Constructor function to inherit prototype from.
	   * @throws {TypeError} if either constructor is null, or if super constructor
	   *     lacks a prototype.
	   */
/**
	   * If a value could have properties, and has none, this function is called,
	   * which returns a string representation of the empty value.
	   *
	   * Functions w/ no properties return `'[Function]'`
	   * Arrays w/ length === 0 return `'[]'`
	   * Objects w/ no properties return `'{}'`
	   * All else: return result of `value.toString()`
	   *
	   * @private
	   * @param {*} value The value to inspect.
	   * @param {string} typeHint The type of the value
	   * @returns {string}
	   */
function n(e,t){switch(t){case"function":return"[Function]";case"object":return"{}";case"array":return"[]";default:return e.toString()}}
/**
	   * Takes some variable and asks `Object.prototype.toString()` what it thinks it
	   * is.
	   *
	   * @private
	   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString
	   * @param {*} value The value to test.
	   * @returns {string} Computed type
	   * @example
	   * type({}) // 'object'
	   * type([]) // 'array'
	   * type(1) // 'number'
	   * type(false) // 'boolean'
	   * type(Infinity) // 'number'
	   * type(null) // 'null'
	   * type(new Date()) // 'date'
	   * type(/foo/) // 'regexp'
	   * type('type') // 'string'
	   * type(global) // 'global'
	   * type(new String('foo') // 'object'
	   */t.inherits=cl.inherits,
/**
	   * Escape special characters in the given string of html.
	   *
	   * @private
	   * @param  {string} html
	   * @return {string}
	   */
t.escape=function(e){return rh.encode(String(e),{useNamedReferences:0})},
/**
	   * Test if the given obj is type of string.
	   *
	   * @private
	   * @param {Object} obj
	   * @return {boolean}
	   */
t.isString=function(e){return"string"==typeof e},
/**
	   * Compute a slug from the given `str`.
	   *
	   * @private
	   * @param {string} str
	   * @return {string}
	   */
t.slug=function(e){return e.toLowerCase().replace(/\s+/g,"-").replace(/[^-\w]/g,"").replace(/-{2,}/g,"-")},
/**
	   * Strip the function definition from `str`, and re-indent for pre whitespace.
	   *
	   * @param {string} str
	   * @return {string}
	   */
t.clean=function(e){var t=(e=e.replace(/\r\n?|[\n\u2028\u2029]/g,"\n").replace(/^\uFEFF/,"").replace(/^function(?:\s*|\s+[^(]*)\([^)]*\)\s*\{((?:.|\n)*?)\s*\}$|^\([^)]*\)\s*=>\s*(?:\{((?:.|\n)*?)\s*\}|((?:.|\n)*))$/,"$1$2$3")).match(/^\n?( *)/)[1].length,r=e.match(/^\n?(\t*)/)[1].length,n=new RegExp("^\n?"+(r?"\t":" ")+"{"+(r||t)+"}","gm");return(e=e.replace(n,"")).trim()};var o=t.type=function(e){return void 0===e?"undefined":null===e?"null":Oc(e)?"buffer":Object.prototype.toString.call(e).replace(/^\[.+\s(.+?)]$/,"$1").toLowerCase()};
/**
	   * Stringify `value`. Different behavior depending on type of value:
	   *
	   * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.
	   * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.
	   * - If `value` is an *empty* object, function, or array, return result of function
	   *   {@link emptyRepresentation}.
	   * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of
	   *   JSON.stringify().
	   *
	   * @private
	   * @see exports.type
	   * @param {*} value
	   * @return {string}
	   */
/**
	   * like JSON.stringify but more sense.
	   *
	   * @private
	   * @param {Object}  object
	   * @param {number=} spaces
	   * @param {number=} depth
	   * @returns {*}
	   */
function i(e,t,r){if(void 0===t)
// primitive types
return l(e);var n=t*(r=r||1),a=Array.isArray(e)?"[":"{",s=Array.isArray(e)?"]":"}",u="number"==typeof e.length?e.length:Object.keys(e).length;// `.repeat()` polyfill
function c(e,t){return new Array(t).join(e)}function l(e){switch(o(e)){case"null":case"undefined":e="["+e+"]";break;case"array":case"object":e=i(e,t,r+1);break;case"boolean":case"regexp":case"symbol":case"number":e=0===e&&1/e==-1/0?"-0":e.toString();break;case"date":var n=isNaN(e.getTime())?e.toString():e.toISOString();e="[Date: "+n+"]";break;case"buffer":var a=e.toJSON();// Based on the toJSON result
e="[Buffer: "+i(a=a.data&&a.type?a.data:a,2,r+1)+"]";break;default:e="[Function]"===e||"[Circular]"===e?e:JSON.stringify(e);
// string
}return e}for(var f in e)Object.prototype.hasOwnProperty.call(e,f)&&(--u,a+="\n "+c(" ",n)+(Array.isArray(e)?"":'"'+f+'": ')+// key
l(e[f])+(// value
u?",":""));return a+(// [], {}
1!==a.length?"\n"+c(" ",--n)+s:s)}
/**
	   * Return a new Thing that has the keys in sorted order. Recursive.
	   *
	   * If the Thing...
	   * - has already been seen, return string `'[Circular]'`
	   * - is `undefined`, return string `'[undefined]'`
	   * - is `null`, return value `null`
	   * - is some other primitive, return the value
	   * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method
	   * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.
	   * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`
	   *
	   * @private
	   * @see {@link exports.stringify}
	   * @param {*} value Thing to inspect.  May or may not have properties.
	   * @param {Array} [stack=[]] Stack of seen values
	   * @param {string} [typeHint] Type hint
	   * @return {(Object|Array|Function|string|undefined)}
	   */
/**
	   * process.emitWarning or a polyfill
	   * @see https://nodejs.org/api/process.html#process_process_emitwarning_warning_options
	   * @ignore
	   */
function a(e,t){Dr.emitWarning?Dr.emitWarning(e,t):gr((function(){console.warn(t+": "+e)}))}
/**
	   * Show a deprecation warning. Each distinct message is only displayed once.
	   * Ignores empty messages.
	   *
	   * @param {string} [msg] - Warning to print
	   * @private
	   */t.stringify=function(e){var r=o(e);if(!~["object","array","function"].indexOf(r)){if("buffer"===r){var a=Ku.prototype.toJSON.call(e);// Based on the toJSON result
return i(a.data&&a.type?a.data:a,2).replace(/,(\n|$)/g,"$1")}// IE7/IE8 has a bizarre String constructor; needs to be coerced
// into an array and back to obj.
if("string"!==r||"object"!==qo(e))return i(e);e=e.split("").reduce((function(e,t,r){return e[r]=t,e}),{}),r="object"}for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s))return i(t.canonicalize(e,null,r),2).replace(/,(\n|$)/g,"$1");return n(e,r)},t.canonicalize=function(e,r,i){var a,s;
/* eslint-disable no-unused-vars */function u(e,t){r.push(e),t(),r.pop()}if(
/* eslint-enable no-unused-vars */
i=i||o(e),-1!==(r=r||[]).indexOf(e))return"[Circular]";switch(i){case"undefined":case"buffer":case"null":a=e;break;case"array":u(e,(function(){a=e.map((function(e){return t.canonicalize(e,r)}))}));break;case"function":
/* eslint-disable guard-for-in */
for(s in e){a={};break}
/* eslint-enable guard-for-in */if(!a){a=n(e,i);break}
/* falls through */case"object":a=a||{},u(e,(function(){Object.keys(e).sort().forEach((function(n){a[n]=t.canonicalize(e[n],r)}))}));break;case"date":case"number":case"regexp":case"boolean":case"symbol":a=e;break;default:a=e+""}return a},t.deprecate=function e(t){(t=String(t))&&!e.cache[t]&&(e.cache[t]=1,a(t,"DeprecationWarning"))},t.deprecate.cache={},
/**
	   * Show a generic warning.
	   * Ignores empty messages.
	   *
	   * @param {string} [msg] - Warning to print
	   * @private
	   */
t.warn=function(e){e&&a(e)},
/**
	   * @summary
	   * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)
	   * @description
	   * When invoking this function you get a filter function that get the Error.stack as an input,
	   * and return a prettify output.
	   * (i.e: strip Mocha and internal node functions from stack trace).
	   * @returns {Function}
	   */
t.stackTraceFilter=function(){
// TODO: Replace with `process.browser`
var e,r="undefined"==typeof document?{node:1}:{browser:1},n=Cp.sep;return r.node?e=t.cwd()+n:(e=("undefined"==typeof location?window.location:location).href.replace(/\/[^/]*$/,"/"),n="/"),function(t){return(t=(t=t.split("\n")).reduce((function(t,o){return function(e){return~e.indexOf("node_modules"+n+"mocha"+n)||~e.indexOf(n+"mocha.js")||~e.indexOf(n+"mocha.min.js")}(o)||r.node&&function(e){return~e.indexOf("(timers.js:")||~e.indexOf("(events.js:")||~e.indexOf("(node.js:")||~e.indexOf("(module.js:")||~e.indexOf("GeneratorFunctionPrototype.next (native)")||0}(o)||(// Clean up cwd(absolute)
/:\d+:\d+\)?$/.test(o)&&(o=o.replace("("+e,"(")),t.push(o)),t}),[])).join("\n")}},
/**
	   * Crude, but effective.
	   * @public
	   * @param {*} value
	   * @returns {boolean} Whether or not `value` is a Promise
	   */
t.isPromise=function(e){return"object"===qo(e)&&null!==e&&"function"==typeof e.then},
/**
	   * Clamps a numeric value to an inclusive range.
	   *
	   * @param {number} value - Value to be clamped.
	   * @param {numer[]} range - Two element array specifying [min, max] range.
	   * @returns {number} clamped value
	   */
t.clamp=function(e,t){return Math.min(Math.max(e,t[0]),t[1])},
/**
	   * Single quote text by combining with undirectional ASCII quotation marks.
	   *
	   * @description
	   * Provides a simple means of markup for quoting text to be used in output.
	   * Use this to quote names of variables, methods, and packages.
	   *
	   * <samp>package 'foo' cannot be found</samp>
	   *
	   * @private
	   * @param {string} str - Value to be quoted.
	   * @returns {string} quoted value
	   * @example
	   * sQuote('n') // => 'n'
	   */
t.sQuote=function(e){return"'"+e+"'"},
/**
	   * Double quote text by combining with undirectional ASCII quotation marks.
	   *
	   * @description
	   * Provides a simple means of markup for quoting text to be used in output.
	   * Use this to quote names of datatypes, classes, pathnames, and strings.
	   *
	   * <samp>argument 'value' must be "string" or "number"</samp>
	   *
	   * @private
	   * @param {string} str - Value to be quoted.
	   * @returns {string} quoted value
	   * @example
	   * dQuote('number') // => "number"
	   */
t.dQuote=function(e){return'"'+e+'"'},
/**
	   * It's a noop.
	   * @public
	   */
t.noop=function(){},
/**
	   * Creates a map-like object.
	   *
	   * @description
	   * A "map" is an object with no prototype, for our purposes. In some cases
	   * this would be more appropriate than a `Map`, especially if your environment
	   * doesn't support it. Recommended for use in Mocha's public APIs.
	   *
	   * @public
	   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map|MDN:Map}
	   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Custom_and_Null_objects|MDN:Object.create - Custom objects}
	   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign|MDN:Object.assign}
	   * @param {...*} [obj] - Arguments to `Object.assign()`.
	   * @returns {Object} An object with no prototype, having `...obj` properties
	   */
t.createMap=function(e){return r.apply(null,[Object.create(null)].concat(Array.prototype.slice.call(arguments)))},
/**
	   * Creates a read-only map-like object.
	   *
	   * @description
	   * This differs from {@link module:utils.createMap createMap} only in that
	   * the argument must be non-empty, because the result is frozen.
	   *
	   * @see {@link module:utils.createMap createMap}
	   * @param {...*} [obj] - Arguments to `Object.assign()`.
	   * @returns {Object} A frozen object with no prototype, having `...obj` properties
	   * @throws {TypeError} if argument is not a non-empty object.
	   */
t.defineConstants=function(e){if("object"!==o(e)||!Object.keys(e).length)throw new TypeError("Invalid argument; expected a non-empty object");return Object.freeze(t.createMap(e))},
/**
	   * Whether current version of Node support ES modules
	   *
	   * @description
	   * Versions prior to 10 did not support ES Modules, and version 10 has an old incompatible version of ESM.
	   * This function returns whether Node.JS has ES Module supports that is compatible with Mocha's needs,
	   * which is version >=12.11.
	   *
	   * @param {partialSupport} whether the full Node.js ESM support is available (>= 12) or just something that supports the runtime (>= 10)
	   *
	   * @returns {Boolean} whether the current version of Node.JS supports ES Modules in a way that is compatible with Mocha
	   */
t.supportsEsModules=function(e){if(!t.isBrowser()&&Dr.versions&&Dr.versions.node){var r=Dr.versions.node.split("."),n=+r[0],o=+r[1];return e?n>=10:n>=13||12===n&&o>=11}},
/**
	   * Returns current working directory
	   *
	   * Wrapper around `process.cwd()` for isolation
	   * @private
	   */
t.cwd=function(){return Dr.cwd()},
/**
	   * Returns `true` if Mocha is running in a browser.
	   * Checks for `process.browser`.
	   * @returns {boolean}
	   * @private
	   */
t.isBrowser=function(){return Boolean(1)}})),Wh=Object.freeze({__proto__:null,default:{}}),$h=
/**
	 * Initialize a new `Pending` error with the given message.
	 *
	 * @param {string} message
	 */
function(e){this.message=e}
/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 */,Jh=function(e){
/**
	  * Selects a color for a debug namespace
	  * @param {String} namespace The namespace string for the for the debug instance to be colored
	  * @return {Number|String} An ANSI color code for the given namespace
	  * @api private
	  */
function t(e){for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[Math.abs(t)%r.colors.length]}
/**
	  * Create a debugger with the given `namespace`.
	  *
	  * @param {String} namespace
	  * @return {Function}
	  * @api public
	  */
function r(e){var i;function a(){
// Disabled?
if(a.enabled){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var o=a,s=Number(new Date),u=s-(i||s);// Set `diff` timestamp
o.diff=u,o.prev=i,o.curr=s,i=s,t[0]=r.coerce(t[0]),"string"!=typeof t[0]&&
// Anything else let's inspect with %O
t.unshift("%O");// Apply any `formatters` transformations
var c=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,(function(e,n){
// If we encounter an escaped % then don't increase the array index
if("%%"===e)return e;c++;var i=r.formatters[n];if("function"==typeof i){var a=t[c];e=i.call(o,a),// Now we need to remove `args[index]` since it's inlined in the `format`
t.splice(c,1),c--}return e})),// Apply env-specific formatting (colors, etc.)
r.formatArgs.call(o,t);var l=o.log||r.log;l.apply(o,t)}}return a.namespace=e,a.enabled=r.enabled(e),a.useColors=r.useColors(),a.color=t(e),a.destroy=n,a.extend=o,// Debug.formatArgs = formatArgs;
// debug.rawLog = rawLog;
// env-specific initialization logic for debug instances
"function"==typeof r.init&&r.init(a),r.instances.push(a),a}function n(){var e=r.instances.indexOf(this);return-1!==e?(r.instances.splice(e,1),1):0}function o(e,t){return r(this.namespace+(void 0===t?":":t)+e)}
/**
	  * Enables a debug mode by namespaces. This can include modes
	  * separated by a colon and wildcards.
	  *
	  * @param {String} namespaces
	  * @api public
	  */return r.debug=r,r.default=r,r.coerce=
/**
	  * Coerce `val`.
	  *
	  * @param {Mixed} val
	  * @return {Mixed}
	  * @api private
	  */
function(e){return e instanceof Error?e.stack||e.message:e},r.disable=
/**
	  * Disable debug output.
	  *
	  * @api public
	  */
function(){r.enable("")}
/**
	  * Returns true if the given mode name is enabled, false otherwise.
	  *
	  * @param {String} name
	  * @return {Boolean}
	  * @api public
	  */,r.enable=function(e){var t;r.save(e),r.names=[],r.skips=[];var n=("string"==typeof e?e:"").split(/[\s,]+/),o=n.length;for(t=0;t<o;t++)n[t]&&("-"===(e=n[t].replace(/\*/g,".*?"))[0]?r.skips.push(new RegExp("^"+e.substr(1)+"$")):r.names.push(new RegExp("^"+e+"$")));for(t=0;t<r.instances.length;t++){var i=r.instances[t];i.enabled=r.enabled(i.namespace)}},r.enabled=function(e){if("*"===e[e.length-1])return 1;var t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return 0;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return 1;return 0},r.humanize=$p,Object.keys(e).forEach((function(t){r[t]=e[t]})),
/**
	  * Active `debug` instances.
	  */
r.instances=[],
/**
	  * The currently active debug mode names, and names to skip.
	  */
r.names=[],r.skips=[],
/**
	  * Map of special "%n" handling functions, for the debug "format" argument.
	  *
	  * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	  */
r.formatters={},r.selectColor=t,r.enable(r.load()),r},Kh=r((function(e,t){function r(e){return(r="function"==typeof Symbol&&"symbol"===qo(Symbol.iterator)?function(e){return qo(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":qo(e)})(e)}
/* eslint-env browser */
/**
	   * This is the web browser implementation of `debug()`.
	   */t.log=
/**
	   * Invokes `console.log()` when available.
	   * No-op when `console.log` is not a "function".
	   *
	   * @api public
	   */
function(){var e;// This hackery is required for IE8/9, where
// the `console.log` function doesn't have 'apply'
return"object"===("undefined"==typeof console?"undefined":r(console))&&console.log&&(e=console).log.apply(e,arguments)}
/**
	   * Save `namespaces`.
	   *
	   * @param {String} namespaces
	   * @api private
	   */,t.formatArgs=
/**
	   * Colorize log arguments if enabled.
	   *
	   * @api public
	   */
function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),this.useColors){var r="color: "+this.color;t.splice(1,0,r,"color: inherit");// The final "%c" is somewhat tricky, because there could be other
// arguments passed either before or after the %c, so we need to
// figure out the correct index to insert the CSS into
var n=0,o=0;t[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(n++,"%c"===e&&(
// We only are interested in the *last* %c
// (the user may have provided their own)
o=n))})),t.splice(o,0,r)}},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){// Swallow
// XXX (@Qix-) should we be logging these?
}}
/**
	   * Load `namespaces`.
	   *
	   * @return {String} returns the previously persisted debug modes
	   * @api private
	   */,t.load=function(){var e;try{e=t.storage.getItem("debug")}catch(e){}// Swallow
// XXX (@Qix-) should we be logging these?
// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
return!e&&void 0!==Dr&&"env"in Dr&&(e=Dr.env.DEBUG),e}
/**
	   * Localstorage attempts to return the localstorage.
	   *
	   * This is necessary because safari throws
	   * when a user disables cookies/localstorage
	   * and you attempt to access it.
	   *
	   * @return {LocalStorage}
	   * @api private
	   */,t.useColors=
/**
	   * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	   * and the Firebug extension (any Firefox version) are known
	   * to support "%c" CSS customizations.
	   *
	   * TODO: add a `localStorage` variable to explicitly enable/disable colors
	   */
// eslint-disable-next-line complexity
function(){
// NB: In an Electron preload script, document will be defined but not fully
// initialized. Since we know we're in Chrome, we'll just detect this case
// explicitly
return"undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs)?1:// Internet Explorer and Edge do not support colors.
"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?0:"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||// Is firebug? http://stackoverflow.com/a/398120/376773
"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||// Is firefox >= v31?
// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||// Double check webkit in userAgent just in case we are in a worker
"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{
// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
// The Browser also has localStorage in the global context.
return localStorage}catch(e){// Swallow
// XXX (@Qix-) should we be logging these?
}}(),
/**
	   * Colors.
	   */
t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=Jh(t),
/**
	   * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	   */
e.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}})),Zh=cl.format,Qh={
/**
	   * An unrecoverable error.
	   */
FATAL:"ERR_MOCHA_FATAL",
/**
	   * The type of an argument to a function call is invalid
	   */
INVALID_ARG_TYPE:"ERR_MOCHA_INVALID_ARG_TYPE",
/**
	   * The value of an argument to a function call is invalid
	   */
INVALID_ARG_VALUE:"ERR_MOCHA_INVALID_ARG_VALUE",
/**
	   * Something was thrown, but it wasn't an `Error`
	   */
INVALID_EXCEPTION:"ERR_MOCHA_INVALID_EXCEPTION",
/**
	   * An interface (e.g., `Mocha.interfaces`) is unknown or invalid
	   */
INVALID_INTERFACE:"ERR_MOCHA_INVALID_INTERFACE",
/**
	   * A reporter (.e.g, `Mocha.reporters`) is unknown or invalid
	   */
INVALID_REPORTER:"ERR_MOCHA_INVALID_REPORTER",
/**
	   * `done()` was called twice in a `Test` or `Hook` callback
	   */
MULTIPLE_DONE:"ERR_MOCHA_MULTIPLE_DONE",
/**
	   * No files matched the pattern provided by the user
	   */
NO_FILES_MATCH_PATTERN:"ERR_MOCHA_NO_FILES_MATCH_PATTERN",
/**
	   * Known, but unsupported behavior of some kind
	   */
UNSUPPORTED:"ERR_MOCHA_UNSUPPORTED",
/**
	   * Invalid state transition occurring in `Mocha` instance
	   */
INSTANCE_ALREADY_RUNNING:"ERR_MOCHA_INSTANCE_ALREADY_RUNNING",
/**
	   * Invalid state transition occurring in `Mocha` instance
	   */
INSTANCE_ALREADY_DISPOSED:"ERR_MOCHA_INSTANCE_ALREADY_DISPOSED",
/**
	   * Use of `only()` w/ `--forbid-only` results in this error.
	   */
FORBIDDEN_EXCLUSIVITY:"ERR_MOCHA_FORBIDDEN_EXCLUSIVITY"};
/**
	 * Creates an error object to be thrown when the reporter specified in the options was not found.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} reporter - User-specified reporter value.
	 * @returns {Error} instance detailing the error condition
	 */
function Xh(e,t){var r=new TypeError(e);return r.code=Qh.INVALID_REPORTER,r.reporter=t,r}
/**
	 * Creates an error object to be thrown when the interface specified in the options was not found.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} ui - User-specified interface value.
	 * @returns {Error} instance detailing the error condition
	 */function ed(e,t){var r=new Error(e);return r.code=Qh.INVALID_INTERFACE,r.interface=t,r}
/**
	 * Creates an error object to be thrown when a behavior, option, or parameter is unsupported.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @returns {Error} instance detailing the error condition
	 */
/**
	 * Creates an error object to be thrown when an argument did not use the supported type
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} argument - Argument name.
	 * @param {string} expected - Expected argument datatype.
	 * @returns {Error} instance detailing the error condition
	 */
function td(e,t,r){var n=new TypeError(e);return n.code=Qh.INVALID_ARG_TYPE,n.argument=t,n.expected=r,n.actual=qo(t),n}
/**
	 * Creates an error object to be thrown when an argument did not use the supported value
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} argument - Argument name.
	 * @param {string} value - Argument value.
	 * @param {string} [reason] - Why value is invalid.
	 * @returns {Error} instance detailing the error condition
	 */var rd={createInvalidArgumentTypeError:td,createInvalidArgumentValueError:function(e,t,r,n){var o=new TypeError(e);return o.code=Qh.INVALID_ARG_VALUE,o.argument=t,o.value=r,o.reason=void 0!==n?n:"is invalid",o}
/**
	 * Creates an error object to be thrown when an exception was caught, but the `Error` is falsy or undefined.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @returns {Error} instance detailing the error condition
	 */,createInvalidExceptionError:function(e,t){var r=new Error(e);return r.code=Qh.INVALID_EXCEPTION,r.valueType=qo(t),r.value=t,r}
/**
	 * Creates an error object to be thrown when an unrecoverable error occurs.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @returns {Error} instance detailing the error condition
	 */,createInvalidInterfaceError:ed,createInvalidReporterError:Xh,createMissingArgumentError:
/**
	 * Creates an error object to be thrown when an argument is missing.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} argument - Argument name.
	 * @param {string} expected - Expected argument datatype.
	 * @returns {Error} instance detailing the error condition
	 */
function(e,t,r){return td(e,t,r)},createNoFilesMatchPatternError:
/**
	 * Creates an error object to be thrown when no files to be tested could be found using specified pattern.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} pattern - User-specified argument value.
	 * @returns {Error} instance detailing the error condition
	 */
function(e,t){var r=new Error(e);return r.code=Qh.NO_FILES_MATCH_PATTERN,r.pattern=t,r},createUnsupportedError:function(e){var t=new Error(e);return t.code=Qh.UNSUPPORTED,t},createInvalidPluginError:
/**
	 * Dynamically creates a plugin-type-specific error based on plugin type
	 * @param {string} message - Error message
	 * @param {"reporter"|"interface"} pluginType - Plugin type. Future: expand as needed
	 * @param {string} [pluginId] - Name/path of plugin, if any
	 * @throws When `pluginType` is not known
	 * @public
	 * @returns {Error}
	 */
function(e,t,r){switch(t){case"reporter":return Xh(e,r);case"interface":return ed(e,r);default:throw new Error('unknown pluginType "'+t+'"')}}
/**
	 * Creates an error object to be thrown when a mocha object's `run` method is executed while it is already disposed.
	 * @param {string} message The error message to be displayed.
	 * @param {boolean} cleanReferencesAfterRun the value of `cleanReferencesAfterRun`
	 * @param {Mocha} instance the mocha instance that throw this error
	 */,createMochaInstanceAlreadyDisposedError:function(e,t,r){var n=new Error(e);return n.code=Qh.INSTANCE_ALREADY_DISPOSED,n.cleanReferencesAfterRun=t,n.instance=r,n}
/**
	 * Creates an error object to be thrown when a mocha object's `run` method is called while a test run is in progress.
	 * @param {string} message The error message to be displayed.
	 */,createMochaInstanceAlreadyRunningError:function(e,t){var r=new Error(e);return r.code=Qh.INSTANCE_ALREADY_RUNNING,r.instance=t,r}
/*
	 * Creates an error object to be thrown when done() is called multiple times in a test
	 *
	 * @public
	 * @param {Runnable} runnable - Original runnable
	 * @param {Error} [originalErr] - Original error, if any
	 * @returns {Error} instance detailing the error condition
	 */,createFatalError:function(e,t){var r=new Error(e);return r.code=Qh.FATAL,r.valueType=qo(t),r.value=t,r},createMultipleDoneError:function(e,t){var r;try{r=Zh("<%s>",e.fullTitle()),e.parent.root&&(r+=" (of root suite)")}catch(t){r=Zh("<%s> (of unknown suite)",e.title)}var n=Zh("done() called multiple times in %s %s",e.type?e.type:"unknown runnable",r);e.file&&(n+=Zh(" of file %s",e.file)),t&&(n+=Zh("; in addition, done() received error: %s",t));var o=new Error(n);return o.code=Qh.MULTIPLE_DONE,o.valueType=qo(t),o.value=t,o}
/**
	 * Creates an error object to be thrown when `.only()` is used with
	 * `--forbid-only`.
	 * @public
	 * @param {Mocha} mocha - Mocha instance
	 * @returns {Error} Error with code {@link constants.FORBIDDEN_EXCLUSIVITY}
	 */,createForbiddenExclusivityError:function(e){var t=new Error(e.isWorker?"`.only` is not supported in parallel mode":"`.only` forbidden by --forbid-only");return t.code=Qh.FORBIDDEN_EXCLUSIVITY,t},constants:Qh},nd=Jr.EventEmitter,od=Kh("mocha:runnable"),id=rd.createInvalidExceptionError,ad=rd.createMultipleDoneError,sd=e.Date,ud=e.setTimeout,cd=e.clearTimeout,ld=Object.prototype.toString,fd=pd;
/**
	 * Initialize a new `Runnable` with the given `title` and callback `fn`.
	 *
	 * @class
	 * @extends external:EventEmitter
	 * @public
	 * @param {String} title
	 * @param {Function} fn
	 */
function pd(e,t){this.title=e,this.fn=t,this.body=(t||"").toString(),this.async=t&&t.length,this.sync=!this.async,this._timeout=2e3,this._slow=75,this._retries=-1,this.reset()}
/**
	 * Inherit from `EventEmitter.prototype`.
	 */Yh.inherits(pd,nd),
/**
	 * Resets the state initially or for a next run.
	 */
pd.prototype.reset=function(){this.timedOut=0,this._currentRetry=0,this.pending=0,delete this.state,delete this.err},
/**
	 * Get current timeout value in msecs.
	 *
	 * @private
	 * @returns {number} current timeout threshold value
	 */
/**
	 * @summary
	 * Set timeout threshold value (msecs).
	 *
	 * @description
	 * A string argument can use shorthand (e.g., "2s") and will be converted.
	 * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].
	 * If clamped value matches either range endpoint, timeouts will be disabled.
	 *
	 * @private
	 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}
	 * @param {number|string} ms - Timeout threshold value.
	 * @returns {Runnable} this
	 * @chainable
	 */
pd.prototype.timeout=function(e){if(!arguments.length)return this._timeout;"string"==typeof e&&(e=$p(e));// Clamp to range
var t=Math.pow(2,31)-1,r=[0,t];// see #1652 for reasoning
return(e=Yh.clamp(e,r))===r[0]||e===r[1]?this._timeout=0:this._timeout=e,od("timeout %d",this._timeout),this.timer&&this.resetTimeout(),this},
/**
	 * Set or get slow `ms`.
	 *
	 * @private
	 * @param {number|string} ms
	 * @return {Runnable|number} ms or Runnable instance.
	 */
pd.prototype.slow=function(e){return arguments.length&&void 0!==e?("string"==typeof e&&(e=$p(e)),od("slow %d",e),this._slow=e,this):this._slow},
/**
	 * Halt and mark as pending.
	 *
	 * @memberof Mocha.Runnable
	 * @public
	 */
pd.prototype.skip=function(){throw this.pending=1,new $h("sync skip; aborting execution")},
/**
	 * Check if this runnable or its parent suite is marked as pending.
	 *
	 * @private
	 */
pd.prototype.isPending=function(){return this.pending||this.parent&&this.parent.isPending()},
/**
	 * Return `true` if this Runnable has failed.
	 * @return {boolean}
	 * @private
	 */
pd.prototype.isFailed=function(){return!this.isPending()&&this.state===hd.STATE_FAILED},
/**
	 * Return `true` if this Runnable has passed.
	 * @return {boolean}
	 * @private
	 */
pd.prototype.isPassed=function(){return!this.isPending()&&this.state===hd.STATE_PASSED},
/**
	 * Set or get number of retries.
	 *
	 * @private
	 */
pd.prototype.retries=function(e){if(!arguments.length)return this._retries;this._retries=e},
/**
	 * Set or get current retry
	 *
	 * @private
	 */
pd.prototype.currentRetry=function(e){if(!arguments.length)return this._currentRetry;this._currentRetry=e},
/**
	 * Return the full title generated by recursively concatenating the parent's
	 * full title.
	 *
	 * @memberof Mocha.Runnable
	 * @public
	 * @return {string}
	 */
pd.prototype.fullTitle=function(){return this.titlePath().join(" ")},
/**
	 * Return the title path generated by concatenating the parent's title path with the title.
	 *
	 * @memberof Mocha.Runnable
	 * @public
	 * @return {string}
	 */
pd.prototype.titlePath=function(){return this.parent.titlePath().concat([this.title])},
/**
	 * Clear the timeout.
	 *
	 * @private
	 */
pd.prototype.clearTimeout=function(){cd(this.timer)},
/**
	 * Reset the timeout.
	 *
	 * @private
	 */
pd.prototype.resetTimeout=function(){var e=this,t=this.timeout();0!==t&&(this.clearTimeout(),this.timer=ud((function(){0!==e.timeout()&&(e.callback(e._timeoutError(t)),e.timedOut=1)}),t))},
/**
	 * Set or get a list of whitelisted globals for this test run.
	 *
	 * @private
	 * @param {string[]} globals
	 */
pd.prototype.globals=function(e){if(!arguments.length)return this._allowedGlobals;this._allowedGlobals=e},
/**
	 * Run the test and invoke `fn(err)`.
	 *
	 * @param {Function} fn
	 * @private
	 */
pd.prototype.run=function(e){var t,r=this,n=new sd,o=this.ctx,i=0;if(this.isPending())return e();// Sometimes the ctx exists, but it is not runnable
// finished
function a(o){var a=r.timeout();if(!r.timedOut){if(t)// called multiple times
return function(e){i||(i=1,r.emit("error",ad(r,e)))}(o);r.clearTimeout(),r.duration=new sd-n,t=1,!o&&r.duration>a&&a>0&&(o=r._timeoutError(a)),e(o)}}// for .resetTimeout() and Runner#uncaught()
if(o&&o.runnable&&o.runnable(this),this.callback=a,this.fn&&"function"!=typeof this.fn.call)a(new TypeError("A runnable must be passed a function as its second argument."));else// explicit async with `done` argument
if(this.async){this.resetTimeout(),// allows skip() to be used in an explicit async context
this.skip=function(){// halt execution, the uncaught handler will ignore the failure.
throw this.pending=1,a(),new $h("async skip; aborting execution")};try{!function(e){var t=e.call(o,(function(e){return e instanceof Error||"[object Error]"===ld.call(e)?a(e):e?"[object Object]"===Object.prototype.toString.call(e)?a(new Error("done() invoked with non-Error: "+JSON.stringify(e))):a(new Error("done() invoked with non-Error: "+e)):t&&Yh.isPromise(t)?a(new Error("Resolution method is overspecified. Specify a callback *or* return a Promise; not both.")):void a()}))}(this.fn)}catch(e){if(
// handles async runnables which actually run synchronously
i=1,e instanceof $h)return;// done() is already called in this.skip()
if(this.allowUncaught)throw e;a(pd.toValueOrError(e))}}// sync or promise-returning
else try{!function(e){var t=e.call(o);if(t&&"function"==typeof t.then)r.resetTimeout(),t.then((function(){// Return null so libraries like bluebird do not warn about
// subsequently constructed Promises.
return a(),null}),(function(e){a(e||new Error("Promise rejected with no or falsy reason"))}));else{if(r.asyncOnly)return a(new Error("--async-only option in use without declaring `done()` or returning a promise"));a()}}(this.fn)}catch(e){if(i=1,e instanceof $h)return a();if(this.allowUncaught)throw e;a(pd.toValueOrError(e))}},
/**
	 * Instantiates a "timeout" error
	 *
	 * @param {number} ms - Timeout (in milliseconds)
	 * @returns {Error} a "timeout" error
	 * @private
	 */
pd.prototype._timeoutError=function(e){var t="Timeout of "+e+'ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves.';return this.file&&(t+=" ("+this.file+")"),new Error(t)};var hd=Yh.defineConstants(
/**
	 * {@link Runnable}-related constants.
	 * @public
	 * @memberof Runnable
	 * @readonly
	 * @static
	 * @alias constants
	 * @enum {string}
	 */
{
/**
	   * Value of `state` prop when a `Runnable` has failed
	   */
STATE_FAILED:"failed",
/**
	   * Value of `state` prop when a `Runnable` has passed
	   */
STATE_PASSED:"passed",
/**
	   * Value of `state` prop when a `Runnable` has been skipped by user
	   */
STATE_PENDING:"pending"});
/**
	 * Given `value`, return identity if truthy, otherwise create an "invalid exception" error and return that.
	 * @param {*} [value] - Value to return, if present
	 * @returns {*|Error} `value`, otherwise an `Error`
	 * @private
	 */pd.toValueOrError=function(e){return e||id("Runnable failed with falsy or undefined exception. Please throw an Error instead.",e)},pd.constants=hd;var dd=Je.some,gd=lt("some"),md=at("some");
// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
qe({target:"Array",proto:1,forced:!gd||!md},{some:function(e/* , thisArg */){return dd(this,e,arguments.length>1?arguments[1]:void 0)}});var yd=Yh.inherits,vd=bd;
/**
	 * Expose `Hook`.
	 */
/**
	 * Initialize a new `Hook` with the given `title` and callback `fn`
	 *
	 * @class
	 * @extends Runnable
	 * @param {String} title
	 * @param {Function} fn
	 */
function bd(e,t){fd.call(this,e,t),this.type="hook"}
/**
	 * Inherit from `Runnable.prototype`.
	 */yd(bd,fd),
/**
	 * Resets the state for a next run.
	 */
bd.prototype.reset=function(){fd.prototype.reset.call(this),delete this._error},
/**
	 * Get or set the test `err`.
	 *
	 * @memberof Hook
	 * @public
	 * @param {Error} err
	 * @return {Error}
	 */
bd.prototype.error=function(e){if(!arguments.length)return e=this._error,this._error=null,e;this._error=e},
/**
	 * Returns an object suitable for IPC.
	 * Functions are represented by keys beginning with `$$`.
	 * @private
	 * @returns {Object}
	 */
bd.prototype.serialize=function(){return{$$isPending:this.isPending(),$$titlePath:this.titlePath(),ctx:{currentTest:{title:this.ctx&&this.ctx.currentTest&&this.ctx.currentTest.title}},parent:{root:this.parent.root,title:this.parent.title},title:this.title,type:this.type}};var wd=r((function(e,t){
/**
	   * Module dependencies.
	   * @private
	   */
var r=Jr.EventEmitter,n=Yh.inherits,o=Kh("mocha:suite"),i=rd.createInvalidArgumentTypeError;
/**
	   * Constructs a new `Suite` instance with the given `title`, `ctx`, and `isRoot`.
	   *
	   * @public
	   * @class
	   * @extends EventEmitter
	   * @see {@link https://nodejs.org/api/events.html#events_class_eventemitter|EventEmitter}
	   * @param {string} title - Suite title.
	   * @param {Context} parentContext - Parent context instance.
	   * @param {boolean} [isRoot=false] - Whether this is the root suite.
	   */
function a(e,t,r){if(!Yh.isString(e))throw i('Suite argument "title" must be a string. Received type "'+qo(e)+'"',"title","string");function n(){}this.title=e,n.prototype=t,this.ctx=new n,this.suites=[],this.tests=[],this.root=1==r,this.pending=0,this._retries=-1,this._beforeEach=[],this._beforeAll=[],this._afterEach=[],this._afterAll=[],this._timeout=2e3,this._slow=75,this._bail=0,this._onlyTests=[],this._onlySuites=[],this.reset(),this.on("newListener",(function(e){u[e]&&Yh.deprecate('Event "'+e+'" is deprecated.  Please let the Mocha team know about your use case: https://git.io/v6Lwm')}))}
/**
	   * Inherit from `EventEmitter.prototype`.
	   */e.exports=a,
/**
	   * Create a new `Suite` with the given `title` and parent `Suite`.
	   *
	   * @public
	   * @param {Suite} parent - Parent suite (required!)
	   * @param {string} title - Title
	   * @return {Suite}
	   */
a.create=function(e,t){var r=new a(t,e.ctx);return r.parent=e,t=r.fullTitle(),e.addSuite(r),r},n(a,r),
/**
	   * Resets the state initially or for a next run.
	   */
a.prototype.reset=function(){function e(e){e.reset()}this.delayed=0,this.suites.forEach(e),this.tests.forEach(e),this._beforeEach.forEach(e),this._afterEach.forEach(e),this._beforeAll.forEach(e),this._afterAll.forEach(e)},
/**
	   * Return a clone of this `Suite`.
	   *
	   * @private
	   * @return {Suite}
	   */
a.prototype.clone=function(){var e=new a(this.title);return o("clone"),e.ctx=this.ctx,e.root=this.root,e.timeout(this.timeout()),e.retries(this.retries()),e.slow(this.slow()),e.bail(this.bail()),e},
/**
	   * Set or get timeout `ms` or short-hand such as "2s".
	   *
	   * @private
	   * @todo Do not attempt to set value if `ms` is undefined
	   * @param {number|string} ms
	   * @return {Suite|number} for chaining
	   */
a.prototype.timeout=function(e){if(!arguments.length)return this._timeout;"string"==typeof e&&(e=$p(e));// Clamp to range
var t=Math.pow(2,31)-1,r=[0,t];return e=Yh.clamp(e,r),o("timeout %d",e),this._timeout=parseInt(e,10),this},
/**
	   * Set or get number of times to retry a failed test.
	   *
	   * @private
	   * @param {number|string} n
	   * @return {Suite|number} for chaining
	   */
a.prototype.retries=function(e){return arguments.length?(o("retries %d",e),this._retries=parseInt(e,10)||0,this):this._retries},
/**
	   * Set or get slow `ms` or short-hand such as "2s".
	   *
	   * @private
	   * @param {number|string} ms
	   * @return {Suite|number} for chaining
	   */
a.prototype.slow=function(e){return arguments.length?("string"==typeof e&&(e=$p(e)),o("slow %d",e),this._slow=e,this):this._slow},
/**
	   * Set or get whether to bail after first error.
	   *
	   * @private
	   * @param {boolean} bail
	   * @return {Suite|number} for chaining
	   */
a.prototype.bail=function(e){return arguments.length?(o("bail %s",e),this._bail=e,this):this._bail},
/**
	   * Check if this suite or its parent suite is marked as pending.
	   *
	   * @private
	   */
a.prototype.isPending=function(){return this.pending||this.parent&&this.parent.isPending()},
/**
	   * Generic hook-creator.
	   * @private
	   * @param {string} title - Title of hook
	   * @param {Function} fn - Hook callback
	   * @returns {Hook} A new hook
	   */
a.prototype._createHook=function(e,t){var r=new vd(e,t);return r.parent=this,r.timeout(this.timeout()),r.retries(this.retries()),r.slow(this.slow()),r.ctx=this.ctx,r.file=this.file,r},
/**
	   * Run `fn(test[, done])` before running tests.
	   *
	   * @private
	   * @param {string} title
	   * @param {Function} fn
	   * @return {Suite} for chaining
	   */
a.prototype.beforeAll=function(e,t){if(this.isPending())return this;"function"==typeof e&&(e=(t=e).name),e='"before all" hook'+(e?": "+e:"");var r=this._createHook(e,t);return this._beforeAll.push(r),this.emit(s.EVENT_SUITE_ADD_HOOK_BEFORE_ALL,r),this},
/**
	   * Run `fn(test[, done])` after running tests.
	   *
	   * @private
	   * @param {string} title
	   * @param {Function} fn
	   * @return {Suite} for chaining
	   */
a.prototype.afterAll=function(e,t){if(this.isPending())return this;"function"==typeof e&&(e=(t=e).name),e='"after all" hook'+(e?": "+e:"");var r=this._createHook(e,t);return this._afterAll.push(r),this.emit(s.EVENT_SUITE_ADD_HOOK_AFTER_ALL,r),this},
/**
	   * Run `fn(test[, done])` before each test case.
	   *
	   * @private
	   * @param {string} title
	   * @param {Function} fn
	   * @return {Suite} for chaining
	   */
a.prototype.beforeEach=function(e,t){if(this.isPending())return this;"function"==typeof e&&(e=(t=e).name),e='"before each" hook'+(e?": "+e:"");var r=this._createHook(e,t);return this._beforeEach.push(r),this.emit(s.EVENT_SUITE_ADD_HOOK_BEFORE_EACH,r),this},
/**
	   * Run `fn(test[, done])` after each test case.
	   *
	   * @private
	   * @param {string} title
	   * @param {Function} fn
	   * @return {Suite} for chaining
	   */
a.prototype.afterEach=function(e,t){if(this.isPending())return this;"function"==typeof e&&(e=(t=e).name),e='"after each" hook'+(e?": "+e:"");var r=this._createHook(e,t);return this._afterEach.push(r),this.emit(s.EVENT_SUITE_ADD_HOOK_AFTER_EACH,r),this},
/**
	   * Add a test `suite`.
	   *
	   * @private
	   * @param {Suite} suite
	   * @return {Suite} for chaining
	   */
a.prototype.addSuite=function(e){return e.parent=this,e.root=0,e.timeout(this.timeout()),e.retries(this.retries()),e.slow(this.slow()),e.bail(this.bail()),this.suites.push(e),this.emit(s.EVENT_SUITE_ADD_SUITE,e),this},
/**
	   * Add a `test` to this suite.
	   *
	   * @private
	   * @param {Test} test
	   * @return {Suite} for chaining
	   */
a.prototype.addTest=function(e){return e.parent=this,e.timeout(this.timeout()),e.retries(this.retries()),e.slow(this.slow()),e.ctx=this.ctx,this.tests.push(e),this.emit(s.EVENT_SUITE_ADD_TEST,e),this},
/**
	   * Return the full title generated by recursively concatenating the parent's
	   * full title.
	   *
	   * @memberof Suite
	   * @public
	   * @return {string}
	   */
a.prototype.fullTitle=function(){return this.titlePath().join(" ")},
/**
	   * Return the title path generated by recursively concatenating the parent's
	   * title path.
	   *
	   * @memberof Suite
	   * @public
	   * @return {string}
	   */
a.prototype.titlePath=function(){var e=[];return this.parent&&(e=e.concat(this.parent.titlePath())),this.root||e.push(this.title),e},
/**
	   * Return the total number of tests.
	   *
	   * @memberof Suite
	   * @public
	   * @return {number}
	   */
a.prototype.total=function(){return this.suites.reduce((function(e,t){return e+t.total()}),0)+this.tests.length},
/**
	   * Iterates through each suite recursively to find all tests. Applies a
	   * function in the format `fn(test)`.
	   *
	   * @private
	   * @param {Function} fn
	   * @return {Suite}
	   */
a.prototype.eachTest=function(e){return this.tests.forEach(e),this.suites.forEach((function(t){t.eachTest(e)})),this},
/**
	   * This will run the root suite if we happen to be running in delayed mode.
	   * @private
	   */
a.prototype.run=function(){this.root&&this.emit(s.EVENT_ROOT_SUITE_RUN)},
/**
	   * Determines whether a suite has an `only` test or suite as a descendant.
	   *
	   * @private
	   * @returns {Boolean}
	   */
a.prototype.hasOnly=function(){return this._onlyTests.length>0||this._onlySuites.length>0||this.suites.some((function(e){return e.hasOnly()}))},
/**
	   * Filter suites based on `isOnly` logic.
	   *
	   * @private
	   * @returns {Boolean}
	   */
a.prototype.filterOnly=function(){if(this._onlyTests.length)
// If the suite contains `only` tests, run those and ignore any nested suites.
this.tests=this._onlyTests,this.suites=[];else{
// Otherwise, do not run any of the tests in this suite.
this.tests=[],this._onlySuites.forEach((function(e){
// If there are other `only` tests/suites nested in the current `only` suite, then filter that `only` suite.
// Otherwise, all of the tests on this `only` suite should be run, so don't filter it.
e.hasOnly()&&e.filterOnly()}));// Run the `only` suites, as well as any other suites that have `only` tests/suites as descendants.
var e=this._onlySuites;this.suites=this.suites.filter((function(t){return-1!==e.indexOf(t)||t.filterOnly()}))}// Keep the suite only if there is something to run
return this.tests.length>0||this.suites.length>0},
/**
	   * Adds a suite to the list of subsuites marked `only`.
	   *
	   * @private
	   * @param {Suite} suite
	   */
a.prototype.appendOnlySuite=function(e){this._onlySuites.push(e)},
/**
	   * Marks a suite to be `only`.
	   *
	   * @private
	   */
a.prototype.markOnly=function(){this.parent&&this.parent.appendOnlySuite(this)},
/**
	   * Adds a test to the list of tests marked `only`.
	   *
	   * @private
	   * @param {Test} test
	   */
a.prototype.appendOnlyTest=function(e){this._onlyTests.push(e)},
/**
	   * Returns the array of hooks by hook name; see `HOOK_TYPE_*` constants.
	   * @private
	   */
a.prototype.getHooks=function(e){return this["_"+e]},
/**
	   * cleans all references from this suite and all child suites.
	   */
a.prototype.dispose=function(){this.suites.forEach((function(e){e.dispose()})),this.cleanReferences()},
/**
	   * Cleans up the references to all the deferred functions
	   * (before/after/beforeEach/afterEach) and tests of a Suite.
	   * These must be deleted otherwise a memory leak can happen,
	   * as those functions may reference variables from closures,
	   * thus those variables can never be garbage collected as long
	   * as the deferred functions exist.
	   *
	   * @private
	   */
a.prototype.cleanReferences=function(){function e(e){for(var t=0;t<e.length;t++)delete e[t].fn}Array.isArray(this._beforeAll)&&e(this._beforeAll),Array.isArray(this._beforeEach)&&e(this._beforeEach),Array.isArray(this._afterAll)&&e(this._afterAll),Array.isArray(this._afterEach)&&e(this._afterEach);for(var t=0;t<this.tests.length;t++)delete this.tests[t].fn},
/**
	   * Returns an object suitable for IPC.
	   * Functions are represented by keys beginning with `$$`.
	   * @private
	   * @returns {Object}
	   */
a.prototype.serialize=function(){return{_bail:this._bail,$$fullTitle:this.fullTitle(),$$isPending:this.isPending(),root:this.root,title:this.title}};var s=Yh.defineConstants(
/**
	   * {@link Suite}-related constants.
	   * @public
	   * @memberof Suite
	   * @alias constants
	   * @readonly
	   * @static
	   * @enum {string}
	   */
{
/**
	     * Event emitted after a test file has been loaded Not emitted in browser.
	     */
EVENT_FILE_POST_REQUIRE:"post-require",
/**
	     * Event emitted before a test file has been loaded. In browser, this is emitted once an interface has been selected.
	     */
EVENT_FILE_PRE_REQUIRE:"pre-require",
/**
	     * Event emitted immediately after a test file has been loaded. Not emitted in browser.
	     */
EVENT_FILE_REQUIRE:"require",
/**
	     * Event emitted when `global.run()` is called (use with `delay` option)
	     */
EVENT_ROOT_SUITE_RUN:"run",
/**
	     * Namespace for collection of a `Suite`'s "after all" hooks
	     */
HOOK_TYPE_AFTER_ALL:"afterAll",
/**
	     * Namespace for collection of a `Suite`'s "after each" hooks
	     */
HOOK_TYPE_AFTER_EACH:"afterEach",
/**
	     * Namespace for collection of a `Suite`'s "before all" hooks
	     */
HOOK_TYPE_BEFORE_ALL:"beforeAll",
/**
	     * Namespace for collection of a `Suite`'s "before all" hooks
	     */
HOOK_TYPE_BEFORE_EACH:"beforeEach",
// the following events are all deprecated
/**
	     * Emitted after an "after all" `Hook` has been added to a `Suite`. Deprecated
	     */
EVENT_SUITE_ADD_HOOK_AFTER_ALL:"afterAll",
/**
	     * Emitted after an "after each" `Hook` has been added to a `Suite` Deprecated
	     */
EVENT_SUITE_ADD_HOOK_AFTER_EACH:"afterEach",
/**
	     * Emitted after an "before all" `Hook` has been added to a `Suite` Deprecated
	     */
EVENT_SUITE_ADD_HOOK_BEFORE_ALL:"beforeAll",
/**
	     * Emitted after an "before each" `Hook` has been added to a `Suite` Deprecated
	     */
EVENT_SUITE_ADD_HOOK_BEFORE_EACH:"beforeEach",
/**
	     * Emitted after a child `Suite` has been added to a `Suite`. Deprecated
	     */
EVENT_SUITE_ADD_SUITE:"suite",
/**
	     * Emitted after a `Test` has been added to a `Suite`. Deprecated
	     */
EVENT_SUITE_ADD_TEST:"test"}),u=Object.keys(s).filter((function(e){return"EVENT_SUITE_ADD"===e.substring(0,15)})).reduce((function(e,t){return e[s[t]]=1,e}),Yh.createMap());
/**
	   * @summary There are no known use cases for these events.
	   * @desc This is a `Set`-like object having all keys being the constant's string value and the value being `true`.
	   * @todo Remove eventually
	   * @type {Object<string,boolean>}
	   * @ignore
	   */a.constants=s})),Ed=Jr.EventEmitter,Ad=Yh.inherits,Td=Kh("mocha:runner"),xd=wd.constants.HOOK_TYPE_BEFORE_EACH,Sd=wd.constants.HOOK_TYPE_AFTER_EACH,_d=wd.constants.HOOK_TYPE_AFTER_ALL,Nd=wd.constants.HOOK_TYPE_BEFORE_ALL,Dd=wd.constants.EVENT_ROOT_SUITE_RUN,Cd=fd.constants.STATE_FAILED,kd=fd.constants.STATE_PASSED,Od=fd.constants.STATE_PENDING,Rd=Yh.dQuote,Ld=Yh.sQuote,qd=Yh.stackTraceFilter(),Id=Yh.stringify,Bd=Yh.type,Pd=rd.createInvalidExceptionError,jd=rd.createUnsupportedError,Fd=rd.createFatalError,Ud=["setTimeout","clearTimeout","setInterval","clearInterval","XMLHttpRequest","Date","setImmediate","clearImmediate"],Vd=Yh.defineConstants(
/**
	 * {@link Runner}-related constants.
	 * @public
	 * @memberof Runner
	 * @readonly
	 * @alias constants
	 * @static
	 * @enum {string}
	 */
{
/**
	   * Emitted when {@link Hook} execution begins
	   */
EVENT_HOOK_BEGIN:"hook",
/**
	   * Emitted when {@link Hook} execution ends
	   */
EVENT_HOOK_END:"hook end",
/**
	   * Emitted when Root {@link Suite} execution begins (all files have been parsed and hooks/tests are ready for execution)
	   */
EVENT_RUN_BEGIN:"start",
/**
	   * Emitted when Root {@link Suite} execution has been delayed via `delay` option
	   */
EVENT_DELAY_BEGIN:"waiting",
/**
	   * Emitted when delayed Root {@link Suite} execution is triggered by user via `global.run()`
	   */
EVENT_DELAY_END:"ready",
/**
	   * Emitted when Root {@link Suite} execution ends
	   */
EVENT_RUN_END:"end",
/**
	   * Emitted when {@link Suite} execution begins
	   */
EVENT_SUITE_BEGIN:"suite",
/**
	   * Emitted when {@link Suite} execution ends
	   */
EVENT_SUITE_END:"suite end",
/**
	   * Emitted when {@link Test} execution begins
	   */
EVENT_TEST_BEGIN:"test",
/**
	   * Emitted when {@link Test} execution ends
	   */
EVENT_TEST_END:"test end",
/**
	   * Emitted when {@link Test} execution fails
	   */
EVENT_TEST_FAIL:"fail",
/**
	   * Emitted when {@link Test} execution succeeds
	   */
EVENT_TEST_PASS:"pass",
/**
	   * Emitted when {@link Test} becomes pending
	   */
EVENT_TEST_PENDING:"pending",
/**
	   * Emitted when {@link Test} execution has failed, but will retry
	   */
EVENT_TEST_RETRY:"retry",
/**
	   * Initial state of Runner
	   */
STATE_IDLE:"idle",
/**
	   * State set to this value when the Runner has started running
	   */
STATE_RUNNING:"running",
/**
	   * State set to this value when the Runner has stopped
	   */
STATE_STOPPED:"stopped"}),Md=Hd;
/**
	 * Module dependencies.
	 * @private
	 */
/**
	 * Initialize a `Runner` at the Root {@link Suite}, which represents a hierarchy of {@link Suite|Suites} and {@link Test|Tests}.
	 *
	 * @extends external:EventEmitter
	 * @public
	 * @class
	 * @param {Suite} suite - Root suite
	 * @param {Object|boolean} [opts] - Options. If `boolean`, whether or not to delay execution of root suite until ready (for backwards compatibility).
	 * @param {boolean} [opts.delay] - Whether to delay execution of root suite until ready.
	 * @param {boolean} [opts.cleanReferencesAfterRun] - Whether to clean references to test fns and hooks when a suite is done.
	 */
function Hd(e,t){void 0===t&&(t={}),"boolean"==typeof t?(this._delay=t,t={}):this._delay=t.delay;var r=this;this._globals=[],this._abort=0,this.suite=e,this._opts=t,this.state=Vd.STATE_IDLE,this.total=e.total(),this.failures=0,this._eventListeners=[],this.on(Vd.EVENT_TEST_END,(function(e){if("test"===e.type&&e.retriedTest()&&e.parent){var t=e.parent.tests&&e.parent.tests.indexOf(e.retriedTest());t>-1&&(e.parent.tests[t]=e)}r.checkGlobals(e)})),this.on(Vd.EVENT_HOOK_END,(function(e){r.checkGlobals(e)})),this._defaultGrep=/.*/,this.grep(this._defaultGrep),this.globals(this.globalProps()),this.uncaught=this._uncaught.bind(this)}
/**
	 * Wrapper for setImmediate, process.nextTick, or browser polyfill.
	 *
	 * @param {Function} fn
	 * @private
	 */
/**
	 * Check if argument is an instance of Error object or a duck-typed equivalent.
	 *
	 * @private
	 * @param {Object} err - object to check
	 * @param {string} err.message - error message
	 * @returns {boolean}
	 */
function zd(e){return e instanceof Error||e&&"string"==typeof e.message}
/**
	 *
	 * Converts thrown non-extensible type into proper Error.
	 *
	 * @private
	 * @param {*} thrown - Non-extensible type thrown by code
	 * @return {Error}
	 */function Gd(e){return new Error("the "+Bd(e)+" "+Id(e)+" was thrown, throw an Error :)")}Hd.immediately=e.setImmediate||gr,
/**
	 * Inherit from `EventEmitter.prototype`.
	 */
Ad(Hd,Ed),
/**
	 * Replacement for `target.on(eventName, listener)` that does bookkeeping to remove them when this runner instance is disposed.
	 * @param {EventEmitter} target - The `EventEmitter`
	 * @param {string} eventName - The event name
	 * @param {string} fn - Listener function
	 * @private
	 */
Hd.prototype._addEventListener=function(e,t,r){e.on(t,r),this._eventListeners.push([e,t,r])},
/**
	 * Replacement for `target.removeListener(eventName, listener)` that also updates the bookkeeping.
	 * @param {EventEmitter} target - The `EventEmitter`
	 * @param {string} eventName - The event anme
	 * @param {function} listener - Listener function
	 * @private
	 */
Hd.prototype._removeEventListener=function(e,t,r){for(var n=-1,o=0;o<this._eventListeners.length;o++){var i=this._eventListeners[o];if(i[0]===e&&i[1]===t&&i[2]===r){n=o;break}}if(-1!==n){var a=this._eventListeners.splice(n,1)[0];a[0].removeListener(a[1],a[2])}},
/**
	 * Removes all event handlers set during a run on this instance.
	 * Remark: this does _not_ clean/dispose the tests or suites themselves.
	 */
Hd.prototype.dispose=function(){this.removeAllListeners(),this._eventListeners.forEach((function(e){e[0].removeListener(e[1],e[2])}))},
/**
	 * Run tests with full titles matching `re`. Updates runner.total
	 * with number of tests matched.
	 *
	 * @public
	 * @memberof Runner
	 * @param {RegExp} re
	 * @param {boolean} invert
	 * @return {Runner} Runner instance.
	 */
Hd.prototype.grep=function(e,t){return Td("grep(): setting to %s",e),this._grep=e,this._invert=t,this.total=this.grepTotal(this.suite),this},
/**
	 * Returns the number of tests matching the grep search for the
	 * given suite.
	 *
	 * @memberof Runner
	 * @public
	 * @param {Suite} suite
	 * @return {number}
	 */
Hd.prototype.grepTotal=function(e){var t=this,r=0;return e.eachTest((function(e){var n=t._grep.test(e.fullTitle());t._invert&&(n=!n),n&&r++})),r},
/**
	 * Return a list of global properties.
	 *
	 * @return {Array}
	 * @private
	 */
Hd.prototype.globalProps=function(){// non-enumerables
for(var t=Object.keys(e),r=0;r<Ud.length;++r)~t.indexOf(Ud[r])||t.push(Ud[r]);return t},
/**
	 * Allow the given `arr` of globals.
	 *
	 * @public
	 * @memberof Runner
	 * @param {Array} arr
	 * @return {Runner} Runner instance.
	 */
Hd.prototype.globals=function(e){return arguments.length?(Td("globals(): setting to %O",e),this._globals=this._globals.concat(e),this):this._globals},
/**
	 * Check for global variable leaks.
	 *
	 * @private
	 */
Hd.prototype.checkGlobals=function(t){if(this.checkLeaks){var r,n=this._globals,o=this.globalProps();if(t&&(n=n.concat(t._allowedGlobals||[])),this.prevGlobalsLength!==o.length&&(this.prevGlobalsLength=o.length,r=
/**
	 * Filter leaks with the given globals flagged as `ok`.
	 *
	 * @private
	 * @param {Array} ok
	 * @param {Array} globals
	 * @return {Array}
	 */
function(t,r){return r.filter((function(r){
// Firefox and Chrome exposes iframes as index inside the window object
return/^\d+/.test(r)||e.navigator&&/^getInterface/.test(r)||e.navigator&&/^\d+/.test(r)||/^mocha-/.test(r)?0:!(t.filter((function(e){return~e.indexOf("*")?0===r.indexOf(e.split("*")[0]):r===e})).length||e.navigator&&"onerror"===r);// in firefox
// if runner runs in an iframe, this iframe's window.getInterface method
// not init at first it is assigned in some seconds
}))}(n,o),this._globals=this._globals.concat(r),r.length)){var i=new Error(cl.format("global leak(s) detected: %s",r.map(Ld).join(", ")));this.fail(t,i)}}},
/**
	 * Fail the given `test`.
	 *
	 * If `test` is a hook, failures work in the following pattern:
	 * - If bail, run corresponding `after each` and `after` hooks,
	 *   then exit
	 * - Failed `before` hook skips all tests in a suite and subsuites,
	 *   but jumps to corresponding `after` hook
	 * - Failed `before each` hook skips remaining tests in a
	 *   suite and jumps to corresponding `after each` hook,
	 *   which is run only once
	 * - Failed `after` hook does not alter execution order
	 * - Failed `after each` hook skips remaining tests in a
	 *   suite and subsuites, but executes other `after each`
	 *   hooks
	 *
	 * @private
	 * @param {Runnable} test
	 * @param {Error} err
	 * @param {boolean} [force=false] - Whether to fail a pending test.
	 */
Hd.prototype.fail=function(e,t,r){if(r=1==r,!e.isPending()||r){if(this.state===Vd.STATE_STOPPED){if(t.code===rd.constants.MULTIPLE_DONE)throw t;throw Fd("Test failed after root suite execution completed!",t)}++this.failures,Td("total number of failures: %d",this.failures),e.state=Cd,zd(t)||(t=Gd(t));try{t.stack=this.fullStackTrace||!t.stack?t.stack:qd(t.stack)}catch(e){// some environments do not take kindly to monkeying with the stack
}this.emit(Vd.EVENT_TEST_FAIL,e,t)}},
/**
	 * Run hook `name` callbacks and then invoke `fn()`.
	 *
	 * @private
	 * @param {string} name
	 * @param {Function} fn
	 */
Hd.prototype.hook=function(e,t){var r=this.suite,n=r.getHooks(e),o=this;Hd.immediately((function(){!function i(a){var s=n[a];if(!s)return t();function u(e){var t;e.originalTitle=e.originalTitle||e.title,e.ctx&&e.ctx.currentTest?e.title=e.originalTitle+" for "+Rd(e.ctx.currentTest.title):(t=e.parent.title?e.parent.title:e.parent.root?"{root}":"",e.title=e.originalTitle+" in "+Rd(t))}o.currentRunnable=s,s.ctx.currentTest=e===Nd?s.parent.tests[0]:e===_d?s.parent.tests[s.parent.tests.length-1]:o.test,u(s),s.allowUncaught=o.allowUncaught,o.emit(Vd.EVENT_HOOK_BEGIN,s),s.listeners("error").length||o._addEventListener(s,"error",(function(e){o.fail(s,e)})),s.run((function(c){var l=s.error();// conditional skip
if(l&&o.fail(o.test,l),s.pending)if(e===Sd)
// TODO define and implement use case
o.test&&(o.test.pending=1);else{if(e===xd)// activates hook for next test
return o.test&&(o.test.pending=1),o.emit(Vd.EVENT_HOOK_END,s),s.pending=0,t(new Error("abort hookDown"));if(e!==Nd){s.pending=0;var f=jd("`this.skip` forbidden");return o.fail(s,f),t(f)}r.tests.forEach((function(e){e.pending=1})),r.suites.forEach((function(e){e.pending=1})),n=[]}else if(c)// stop executing hooks, notify callee of hook err
return o.fail(s,c),t(c);o.emit(Vd.EVENT_HOOK_END,s),delete s.ctx.currentTest,u(s),i(++a)}))}(0)}))},
/**
	 * Run hook `name` for the given array of `suites`
	 * in order, and callback `fn(err, errSuite)`.
	 *
	 * @private
	 * @param {string} name
	 * @param {Array} suites
	 * @param {Function} fn
	 */
Hd.prototype.hooks=function(e,t,r){var n=this,o=this.suite;!function i(a){if(n.suite=a,!a)return n.suite=o,r();n.hook(e,(function(e){if(e){var a=n.suite;return n.suite=o,r(e,a)}i(t.pop())}))}(t.pop())},
/**
	 * Run hooks from the top level down.
	 *
	 * @param {String} name
	 * @param {Function} fn
	 * @private
	 */
Hd.prototype.hookUp=function(e,t){var r=[this.suite].concat(this.parents()).reverse();this.hooks(e,r,t)},
/**
	 * Run hooks from the bottom up.
	 *
	 * @param {String} name
	 * @param {Function} fn
	 * @private
	 */
Hd.prototype.hookDown=function(e,t){var r=[this.suite].concat(this.parents());this.hooks(e,r,t)},
/**
	 * Return an array of parent Suites from
	 * closest to furthest.
	 *
	 * @return {Array}
	 * @private
	 */
Hd.prototype.parents=function(){for(var e=this.suite,t=[];e.parent;)e=e.parent,t.push(e);return t},
/**
	 * Run the current test and callback `fn(err)`.
	 *
	 * @param {Function} fn
	 * @private
	 */
Hd.prototype.runTest=function(e){var t=this,r=this.test;if(r){if(this.asyncOnly&&(r.asyncOnly=1),this._addEventListener(r,"error",(function(e){t.fail(r,e)})),this.allowUncaught)return r.allowUncaught=1,r.run(e);try{r.run(e)}catch(t){e(t)}}},
/**
	 * Run tests in the given `suite` and invoke the callback `fn()` when complete.
	 *
	 * @private
	 * @param {Suite} suite
	 * @param {Function} fn
	 */
Hd.prototype.runTests=function(e,t){var r,n=this,o=e.tests.slice();function i(e,r,o){
// before/after Each hook for errSuite failed:
var a=n.suite;// for failed 'after each' hook start from errSuite parent,
// otherwise start from errSuite itself
n.suite=o?r.parent:r,n.suite?
// call hookUp afterEach
n.hookUp(Sd,(function(e,o){// some hooks may fail even now
if(n.suite=a,e)return i(0,o,1);// report error suite
t(r)})):(
// there is no need calling other 'after each' hooks
n.suite=a,t(r))}function a(s,u){if(
// if we bail after first err
n.failures&&e._bail&&(o=[]),n._abort)return t();if(s)return i(0,u,1);// next test
// all done
if(!(r=o.shift()))return t();// grep
var c=n._grep.test(r.fullTitle());if(n._invert&&(c=!c),c){// static skip, no hooks are executed
if(r.isPending())return n.forbidPending?n.fail(r,new Error("Pending test forbidden"),1):(r.state=Od,n.emit(Vd.EVENT_TEST_PENDING,r)),n.emit(Vd.EVENT_TEST_END,r),a();// execute test and hook(s)
n.emit(Vd.EVENT_TEST_BEGIN,n.test=r),n.hookDown(xd,(function(e,t){
// conditional skip within beforeEach
if(r.isPending()){n.forbidPending?n.fail(r,new Error("Pending test forbidden"),1):(r.state=Od,n.emit(Vd.EVENT_TEST_PENDING,r)),n.emit(Vd.EVENT_TEST_END,r);// skip inner afterEach hooks below errSuite level
var s=n.suite;return n.suite=t||n.suite,n.hookUp(Sd,(function(e,t){n.suite=s,a(e,t)}))}if(e)return i(0,t,0);n.currentRunnable=n.test,n.runTest((function(e){// conditional skip within it
if((r=n.test).pending)return n.forbidPending?n.fail(r,new Error("Pending test forbidden"),1):(r.state=Od,n.emit(Vd.EVENT_TEST_PENDING,r)),n.emit(Vd.EVENT_TEST_END,r),n.hookUp(Sd,a);if(e){var t=r.currentRetry();if(t<r.retries()){var i=r.clone();// Early return + hook trigger so that it doesn't
// increment the count wrong
return i.currentRetry(t+1),o.unshift(i),n.emit(Vd.EVENT_TEST_RETRY,r,e),n.hookUp(Sd,a)}return n.fail(r,e),n.emit(Vd.EVENT_TEST_END,r),n.hookUp(Sd,a)}r.state=kd,n.emit(Vd.EVENT_TEST_PASS,r),n.emit(Vd.EVENT_TEST_END,r),n.hookUp(Sd,a)}))}))}else
// Run immediately only if we have defined a grep. When we
// define a grep — It can cause maximum callstack error if
// the grep is doing a large recursive loop by neglecting
// all tests. The run immediately function also comes with
// a performance cost. So we don't want to run immediately
// if we run the whole test suite, because running the whole
// test suite don't do any immediate recursive loops. Thus,
// allowing a JS runtime to breathe.
n._grep!==n._defaultGrep?Hd.immediately(a):a()}this.next=a,this.hookErr=i,a()},
/**
	 * Run the given `suite` and invoke the callback `fn()` when complete.
	 *
	 * @private
	 * @param {Suite} suite
	 * @param {Function} fn
	 */
Hd.prototype.runSuite=function(e,t){var r=0,n=this,o=this.grepTotal(e);if(Td("runSuite(): running %s",e.fullTitle()),!o||n.failures&&e._bail)return Td("runSuite(): bailing"),t();function i(t){if(t)
// current suite failed on a hook from errSuite
return t===e?a():a(t);// errSuite is among the parents of current suite
// stop execution of errSuite and all sub-suites
if(n._abort)return a();var o=e.suites[r++];if(!o)return a();// Avoid grep neglecting large number of tests causing a
// huge recursive loop and thus a maximum call stack error.
// See comment in `this.runTests()` for more information.
n._grep!==n._defaultGrep?Hd.immediately((function(){n.runSuite(o,i)})):n.runSuite(o,i)}function a(r){n.suite=e,n.nextSuite=i,// remove reference to test
delete n.test,n.hook(_d,(function(){n.emit(Vd.EVENT_SUITE_END,e),t(r)}))}this.emit(Vd.EVENT_SUITE_BEGIN,this.suite=e),this.nextSuite=i,this.hook(Nd,(function(t){if(t)return a();n.runTests(e,i)}))},
/**
	 * Handle uncaught exceptions within runner.
	 *
	 * This function is bound to the instance as `Runner#uncaught` at instantiation
	 * time. It's intended to be listening on the `Process.uncaughtException` event.
	 * In order to not leak EE listeners, we need to ensure no more than a single
	 * `uncaughtException` listener exists per `Runner`.  The only way to do
	 * this--because this function needs the context (and we don't have lambdas)--is
	 * to use `Function.prototype.bind`. We need strict equality to unregister and
	 * _only_ unregister the _one_ listener we set from the
	 * `Process.uncaughtException` event; would be poor form to just remove
	 * everything. See {@link Runner#run} for where the event listener is registered
	 * and unregistered.
	 * @param {Error} err - Some uncaught error
	 * @private
	 */
Hd.prototype._uncaught=function(e){
// this is defensive to prevent future developers from mis-calling this function.
// it's more likely that it'd be called with the incorrect context--say, the global
// `process` object--than it would to be called with a context that is not a "subclass"
// of `Runner`.
if(!(this instanceof Hd))throw Fd("Runner#uncaught() called with invalid context",this);if(e instanceof $h)Td("uncaught(): caught a Pending");else{// browser does not exit script when throwing in global.onerror()
if(this.allowUncaught&&!Yh.isBrowser())throw Td("uncaught(): bubbling exception due to --allow-uncaught"),e;if(this.state===Vd.STATE_STOPPED)throw Td("uncaught(): throwing after run has completed!"),e;e?Td("uncaught(): got truthy exception %O",e):(Td("uncaught(): undefined/falsy exception"),e=Pd("Caught falsy/undefined exception which would otherwise be uncaught. No stack trace found; try a debugger",e)),zd(e)||(e=Gd(e),Td('uncaught(): converted "error" %o to Error',e)),e.uncaught=1;var t=this.currentRunnable;if(!t)return t=new fd("Uncaught error outside test suite"),Td("uncaught(): no current Runnable; created a phony one"),t.parent=this.suite,void(this.state===Vd.STATE_RUNNING?(Td("uncaught(): failing gracefully"),this.fail(t,e)):(
// Can't recover from this failure
Td("uncaught(): test run has not yet started; unrecoverable"),this.emit(Vd.EVENT_RUN_BEGIN),this.fail(t,e),this.emit(Vd.EVENT_RUN_END)));if(t.clearTimeout(),!t.isFailed())return t.isPending()?(Td("uncaught(): pending Runnable wound up failing!"),void// report 'pending test' retrospectively as failed
this.fail(t,e,1)):// we cannot recover gracefully if a Runnable has already passed
// then fails asynchronously
t.isPassed()?(Td("uncaught(): Runnable has already passed; bailing gracefully"),this.fail(t,e),void this.abort()):(Td("uncaught(): forcing Runnable to complete with Error"),t.callback(e));Td("uncaught(): Runnable has already failed")}},
/**
	 * Run the root suite and invoke `fn(failures)`
	 * on completion.
	 *
	 * @public
	 * @memberof Runner
	 * @param {Function} fn - Callback when finished
	 * @param {{files: string[], options: Options}} [opts] - For subclasses
	 * @return {Runner} Runner instance.
	 */
Hd.prototype.run=function(e,t){var r=this,n=this.suite;function o(){Td("run(): starting"),// If there is an `only` filter
n.hasOnly()&&(n.filterOnly(),Td("run(): filtered exclusive Runnables")),r.state=Vd.STATE_RUNNING,r._delay&&(r.emit(Vd.EVENT_DELAY_END),Td('run(): "delay" ended')),Td("run(): emitting %s",Vd.EVENT_RUN_BEGIN),r.emit(Vd.EVENT_RUN_BEGIN),Td("run(): emitted %s",Vd.EVENT_RUN_BEGIN),r.runSuite(n,(function(){Td("run(): root suite completed; emitting %s",Vd.EVENT_RUN_END),r.emit(Vd.EVENT_RUN_END),Td("run(): emitted %s",Vd.EVENT_RUN_END)}))}// references cleanup to avoid memory leaks
return e=e||function(){},this._opts.cleanReferencesAfterRun&&this.on(Vd.EVENT_SUITE_END,(function(e){e.cleanReferences()})),// callback
this.on(Vd.EVENT_RUN_END,(function(){r.state=Vd.STATE_STOPPED,Td(Vd.EVENT_RUN_END),Td("run(): emitted %s",Vd.EVENT_RUN_END),e(r.failures)})),r._removeEventListener(Dr,"uncaughtException",r.uncaught),r._addEventListener(Dr,"uncaughtException",r.uncaught),this._delay?(
// for reporters, I guess.
// might be nice to debounce some dots while we wait.
this.emit(Vd.EVENT_DELAY_BEGIN,n),n.once(Dd,o),Td("run(): waiting for green light due to --delay")):Hd.immediately((function(){o()})),this},
/**
	 * Cleanly abort execution.
	 *
	 * @memberof Runner
	 * @public
	 * @return {Runner} Runner instance.
	 */
Hd.prototype.abort=function(){return Td("abort(): aborting"),this._abort=1,this},Hd.constants=Vd;var Yd=n(Wh),Wd=r((function(t,r){
/**
	   * @module Base
	   */
/**
	   * Module dependencies.
	   */
var n=Md.constants,o=n.EVENT_TEST_PASS,i=n.EVENT_TEST_FAIL,a=Yh.isBrowser();
/**
	   * Expose `Base`.
	   */
r=t.exports=h;
/**
	   * Check if both stdio streams are associated with a tty.
	   */
var s=a||Dr.stdout.isTTY&&Dr.stderr.isTTY,u=console.log;
/**
	   * Save log references to avoid tests interfering (see GH-3604).
	   */
/**
	   * Enable coloring by default, except in the browser interface.
	   */
r.useColors=!a&&(Yd.stdout||void 0!==Dr.env.MOCHA_COLORS),
/**
	   * Inline diffs instead of +/-
	   */
r.inlineDiffs=0,
/**
	   * Default color map.
	   */
r.colors={pass:90,fail:31,"bright pass":92,"bright fail":91,"bright yellow":93,pending:36,suite:0,"error title":0,"error message":31,"error stack":90,checkmark:32,fast:90,medium:33,slow:31,green:32,light:90,"diff gutter":90,"diff added":32,"diff removed":31,"diff added inline":"30;42","diff removed inline":"30;41"},
/**
	   * Default symbol map.
	   */
r.symbols={ok:"✓",err:"✖",dot:"․",comma:",",bang:"!"},// With node.js on Windows: use symbols available in terminal default fonts
"win32"===Dr.platform&&(r.symbols.ok="√",r.symbols.err="×",r.symbols.dot=".")
/**
	   * Color `str` with the given `type`,
	   * allowing colors to be disabled,
	   * as well as user-defined color
	   * schemes.
	   *
	   * @private
	   * @param {string} type
	   * @param {string} str
	   * @return {string}
	   */;var c=r.color=function(e,t){return r.useColors?"["+r.colors[e]+"m"+t+"[0m":String(t)};
/**
	   * Expose term window size, with some defaults for when stderr is not a tty.
	   */r.window={width:75},s&&(r.window.width=a?("innerHeight"in e?[e.innerHeight,e.innerWidth]:[640,480])[1]:Dr.stdout.getWindowSize(1)[0])
/**
	   * Expose some basic cursor interactions that are common among reporters.
	   */,r.cursor={hide:function(){s&&Dr.stdout.write("[?25l")},show:function(){s&&Dr.stdout.write("[?25h")},deleteLine:function(){s&&Dr.stdout.write("[2K")},beginningOfLine:function(){s&&Dr.stdout.write("[0G")},CR:function(){s?(r.cursor.deleteLine(),r.cursor.beginningOfLine()):Dr.stdout.write("\r")}};var l=r.showDiff=function(e){return e&&0!=e.showDiff&&(t=e.actual,r=e.expected,g.call(t)===g.call(r))&&void 0!==e.expected;
/**
	   * Checks that a / b have the same type.
	   *
	   * @private
	   * @param {Object} a
	   * @param {Object} b
	   * @return {boolean}
	   */
var t,r};function f(e){Yh.isString(e.actual)&&Yh.isString(e.expected)||(e.actual=Yh.stringify(e.actual),e.expected=Yh.stringify(e.expected))}
/**
	   * Returns a diff between 2 strings with coloured ANSI output.
	   *
	   * @description
	   * The diff will be either inline or unified dependent on the value
	   * of `Base.inlineDiff`.
	   *
	   * @param {string} actual
	   * @param {string} expected
	   * @return {string} Diff
	   */var p=r.generateDiff=function(e,t){try{return r.inlineDiffs?
/**
	   * Returns inline diff between 2 strings with coloured ANSI output.
	   *
	   * @private
	   * @param {String} actual
	   * @param {String} expected
	   * @return {string} Diff
	   */
function(e,t){var r=
/**
	   * Returns character diff for `err`.
	   *
	   * @private
	   * @param {String} actual
	   * @param {String} expected
	   * @return {string} the diff
	   */
function(e,t){return Hp.diffWordsWithSpace(e,t).map((function(e){return e.added?d("diff added inline",e.value):e.removed?d("diff removed inline",e.value):e.value})).join("")}
/**
	   * Colors lines for `str`, using the color `name`.
	   *
	   * @private
	   * @param {string} name
	   * @param {string} str
	   * @return {string}
	   */(e,t),n=r.split("\n");// linenos
if(n.length>4){var o=String(n.length).length;r=n.map((function(e,t){
/**
	   * Pads the given `str` to `len`.
	   *
	   * @private
	   * @param {string} str
	   * @param {string} len
	   * @return {string}
	   */
return function(e,t){return e=String(e),Array(t-e.length+1).join(" ")+e}(++t,o)+" | "+e})).join("\n")}// legend
// indent
return r=(r="\n"+c("diff removed inline","actual")+" "+c("diff added inline","expected")+"\n\n"+r+"\n").replace(/^/gm,"      ")}
/**
	   * Returns unified diff between two strings with coloured ANSI output.
	   *
	   * @private
	   * @param {String} actual
	   * @param {String} expected
	   * @return {string} The diff.
	   */(e,t):function(e,t){var r=Hp.createPatch("string",e,t).split("\n").splice(5);return"\n      "+d("diff added","+ expected")+" "+d("diff removed","- actual")+"\n\n"+r.map((function(e){return"+"===e[0]?"      "+d("diff added",e):"-"===e[0]?"      "+d("diff removed",e):e.match(/@@/)?"--":e.match(/\\ No newline/)?null:"      "+e})).filter((function(e){return null!=e})).join("\n")}(e,t)}catch(e){return"\n      "+c("diff added","+ expected")+" "+c("diff removed","- actual:  failed to generate Mocha diff")+"\n"}};
/**
	   * Outputs the given `failures` as a list.
	   *
	   * @public
	   * @memberof Mocha.reporters.Base
	   * @variation 1
	   * @param {Object[]} failures - Each is Test instance with corresponding
	   *     Error property
	   */
/**
	   * Constructs a new `Base` reporter instance.
	   *
	   * @description
	   * All other reporters generally inherit from this reporter.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function h(e,t){var r=this.failures=[];if(!e)throw new TypeError("Missing runner argument");this.options=t||{},this.runner=e,this.stats=e.stats,// assigned so Reporters keep a closer reference
e.on(o,(function(e){e.duration>e.slow()?e.speed="slow":e.duration>e.slow()/2?e.speed="medium":e.speed="fast"})),e.on(i,(function(e,t){l(t)&&f(t),// more than one error per test
e.err&&t instanceof Error?e.err.multiple=(e.err.multiple||[]).concat(t):e.err=t,r.push(e)}))}
/**
	   * Outputs common epilogue used by many of the bundled reporters.
	   *
	   * @public
	   * @memberof Mocha.reporters
	   */function d(e,t){return t.split("\n").map((function(t){return c(e,t)})).join("\n")}
/**
	   * Object#toString reference.
	   */r.list=function(e){var t,n;h.consoleLog(),e.forEach((function(e,o){
// format
var i,a,s,u=c("error title","  %s) %s:\n")+c("error message","     %s")+c("error stack","\n%s\n");// msg
e.err&&e.err.multiple?(n!==e&&(n=e,t=[e.err].concat(e.err.multiple)),a=t.shift()):a=e.err,s=a.message&&"function"==typeof a.message.toString?a.message+"":"function"==typeof a.inspect?a.inspect()+"":"";var d=a.stack||s,g=s?d.indexOf(s):-1;// explicitly show diff
if(-1===g?i=s:(g+=s.length,i=d.slice(0,g),// remove msg from stack
d=d.slice(g+1)),// uncaught
a.uncaught&&(i="Uncaught "+i),!r.hideDiff&&l(a)){f(a),u=c("error title","  %s) %s:\n%s")+c("error stack","\n%s\n");var m=s.match(/^([^:]+): expected/);i="\n      "+c("error message",m?m[1]:i),i+=p(a.actual,a.expected)}// indent stack trace
d=d.replace(/^/gm,"  ");// indented test title
var y="";e.titlePath().forEach((function(e,t){0!==t&&(y+="\n     ");for(var r=0;r<t;r++)y+="  ";y+=e})),h.consoleLog(u,o+1,y,i,d)}))},h.prototype.epilogue=function(){var e,t=this.stats;h.consoleLog(),// passes
e=c("bright pass"," ")+c("green"," %d passing")+c("light"," (%s)"),h.consoleLog(e,t.passes||0,$p(t.duration)),// pending
t.pending&&(e=c("pending"," ")+c("pending"," %d pending"),h.consoleLog(e,t.pending)),// failures
t.failures&&(e=c("fail","  %d failing"),h.consoleLog(e,t.failures),h.list(this.failures),h.consoleLog()),h.consoleLog()};var g=Object.prototype.toString;h.consoleLog=u,h.abstract=1})),$d=r((function(e,t){
/**
	   * @module Dot
	   */
/**
	   * Module dependencies.
	   */
var r=Yh.inherits,n=Md.constants,o=n.EVENT_TEST_PASS,i=n.EVENT_TEST_FAIL,a=n.EVENT_RUN_BEGIN,s=n.EVENT_TEST_PENDING,u=n.EVENT_RUN_END;
/**
	   * Constructs a new `Dot` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function c(e,t){Wd.call(this,e,t);var r=this,n=.75*Wd.window.width|0,c=-1;e.on(a,(function(){Dr.stdout.write("\n")})),e.on(s,(function(){++c%n==0&&Dr.stdout.write("\n  "),Dr.stdout.write(Wd.color("pending",Wd.symbols.comma))})),e.on(o,(function(e){++c%n==0&&Dr.stdout.write("\n  "),"slow"===e.speed?Dr.stdout.write(Wd.color("bright yellow",Wd.symbols.dot)):Dr.stdout.write(Wd.color(e.speed,Wd.symbols.dot))})),e.on(i,(function(){++c%n==0&&Dr.stdout.write("\n  "),Dr.stdout.write(Wd.color("fail",Wd.symbols.bang))})),e.once(u,(function(){Dr.stdout.write("\n"),r.epilogue()}))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=c,r(c,Wd),c.description="dot matrix representation"})),Jd=r((function(e,t){
/**
	   * @module Doc
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_TEST_PASS,o=r.EVENT_TEST_FAIL,i=r.EVENT_SUITE_BEGIN,a=r.EVENT_SUITE_END;
/**
	   * Constructs a new `Doc` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function s(e,t){Wd.call(this,e,t);var r=2;function s(){return Array(r).join("  ")}e.on(i,(function(e){e.root||(++r,Wd.consoleLog('%s<section class="suite">',s()),++r,Wd.consoleLog("%s<h1>%s</h1>",s(),Yh.escape(e.title)),Wd.consoleLog("%s<dl>",s()))})),e.on(a,(function(e){e.root||(Wd.consoleLog("%s</dl>",s()),--r,Wd.consoleLog("%s</section>",s()),--r)})),e.on(n,(function(e){Wd.consoleLog("%s  <dt>%s</dt>",s(),Yh.escape(e.title)),Wd.consoleLog("%s  <dt>%s</dt>",s(),Yh.escape(e.file));var t=Yh.escape(Yh.clean(e.body));Wd.consoleLog("%s  <dd><pre><code>%s</code></pre></dd>",s(),t)})),e.on(o,(function(e,t){Wd.consoleLog('%s  <dt class="error">%s</dt>',s(),Yh.escape(e.title)),Wd.consoleLog('%s  <dt class="error">%s</dt>',s(),Yh.escape(e.file));var r=Yh.escape(Yh.clean(e.body));Wd.consoleLog('%s  <dd class="error"><pre><code>%s</code></pre></dd>',s(),r),Wd.consoleLog('%s  <dd class="error">%s</dd>',s(),Yh.escape(t))}))}e.exports=s,s.description="HTML documentation"})),Kd=r((function(e,t){
/**
	   * @module TAP
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_TEST_PASS,o=r.EVENT_TEST_FAIL,i=r.EVENT_RUN_BEGIN,a=r.EVENT_RUN_END,s=r.EVENT_TEST_PENDING,u=r.EVENT_TEST_END,c=Yh.inherits,l=cl.format;
/**
	   * Constructs a new `TAP` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function f(e,t){Wd.call(this,e,t);var r=this,c=1,l="12";t&&t.reporterOptions&&t.reporterOptions.tapVersion&&(l=t.reporterOptions.tapVersion.toString()),this._producer=
/**
	   * Returns a `tapVersion`-appropriate TAP producer instance, if possible.
	   *
	   * @private
	   * @param {string} tapVersion - Version of TAP specification to produce.
	   * @returns {TAPProducer} specification-appropriate instance
	   * @throws {Error} if specification version has no associated producer.
	   */
function(e){var t={12:new g,13:new m}[e];if(!t)throw new Error("invalid or unsupported TAP version: "+JSON.stringify(e));return t}
/**
	   * @summary
	   * Constructs a new TAPProducer.
	   *
	   * @description
	   * <em>Only</em> to be used as an abstract base class.
	   *
	   * @private
	   * @constructor
	   */(l),e.once(i,(function(){r._producer.writeVersion()})),e.on(u,(function(){++c})),e.on(s,(function(e){r._producer.writePending(c,e)})),e.on(n,(function(e){r._producer.writePass(c,e)})),e.on(o,(function(e,t){r._producer.writeFail(c,e,t)})),e.once(a,(function(){r._producer.writeEpilogue(e.stats)}))}
/**
	   * Inherit from `Base.prototype`.
	   */
/**
	   * Returns a TAP-safe title of `test`.
	   *
	   * @private
	   * @param {Test} test - Test instance.
	   * @return {String} title with any hash character removed
	   */
function p(e){return e.fullTitle().replace(/#/g,"")}
/**
	   * Writes newline-terminated formatted string to reporter output stream.
	   *
	   * @private
	   * @param {string} format - `printf`-like format string
	   * @param {...*} [varArgs] - Format string arguments
	   */function h(e,t){var r=Array.from(arguments);r[0]+="\n",Dr.stdout.write(l.apply(null,r))}function d(){}
/**
	   * Writes the TAP version to reporter output stream.
	   *
	   * @abstract
	   */
/**
	   * @summary
	   * Constructs a new TAP12Producer.
	   *
	   * @description
	   * Produces output conforming to the TAP12 specification.
	   *
	   * @private
	   * @constructor
	   * @extends TAPProducer
	   * @see {@link https://testanything.org/tap-specification.html|Specification}
	   */
function g(){
/**
	     * Writes that test failed to reporter output stream, with error formatting.
	     * @override
	     */
this.writeFail=function(e,t,r){d.prototype.writeFail.call(this,e,t,r),r.message&&h(r.message.replace(/^/gm,"  ")),r.stack&&h(r.stack.replace(/^/gm,"  "))}}
/**
	   * Inherit from `TAPProducer.prototype`.
	   */
/**
	   * @summary
	   * Constructs a new TAP13Producer.
	   *
	   * @description
	   * Produces output conforming to the TAP13 specification.
	   *
	   * @private
	   * @constructor
	   * @extends TAPProducer
	   * @see {@link https://testanything.org/tap-version-13-specification.html|Specification}
	   */
function m(){function e(e){return Array(e+1).join("  ")}
/**
	     * Writes the TAP version to reporter output stream.
	     * @override
	     */
this.writeVersion=function(){h("TAP version 13")},
/**
	     * Writes that test failed to reporter output stream, with error formatting.
	     * @override
	     */
this.writeFail=function(t,r,n){d.prototype.writeFail.call(this,t,r,n),(null!=n.message||null!=n.stack)&&(h(e(1)+"---"),n.message&&(h(e(2)+"message: |-"),h(n.message.replace(/^/gm,e(3)))),n.stack&&(h(e(2)+"stack: |-"),h(n.stack.replace(/^/gm,e(3)))),h(e(1)+"..."))}}
/**
	   * Inherit from `TAPProducer.prototype`.
	   */e.exports=f,c(f,Wd),d.prototype.writeVersion=function(){},
/**
	   * Writes the plan to reporter output stream.
	   *
	   * @abstract
	   * @param {number} ntests - Number of tests that are planned to run.
	   */
d.prototype.writePlan=function(e){h("%d..%d",1,e)},
/**
	   * Writes that test passed to reporter output stream.
	   *
	   * @abstract
	   * @param {number} n - Index of test that passed.
	   * @param {Test} test - Instance containing test information.
	   */
d.prototype.writePass=function(e,t){h("ok %d %s",e,p(t))},
/**
	   * Writes that test was skipped to reporter output stream.
	   *
	   * @abstract
	   * @param {number} n - Index of test that was skipped.
	   * @param {Test} test - Instance containing test information.
	   */
d.prototype.writePending=function(e,t){h("ok %d %s # SKIP -",e,p(t))},
/**
	   * Writes that test failed to reporter output stream.
	   *
	   * @abstract
	   * @param {number} n - Index of test that failed.
	   * @param {Test} test - Instance containing test information.
	   * @param {Error} err - Reason the test failed.
	   */
d.prototype.writeFail=function(e,t,r){h("not ok %d %s",e,p(t))},
/**
	   * Writes the summary epilogue to reporter output stream.
	   *
	   * @abstract
	   * @param {Object} stats - Object containing run statistics.
	   */
d.prototype.writeEpilogue=function(e){
// :TBD: Why is this not counting pending tests?
h("# tests "+(e.passes+e.failures)),h("# pass "+e.passes),// :TBD: Why are we not showing pending results?
h("# fail "+e.failures),this.writePlan(e.passes+e.failures+e.pending)},c(g,d),c(m,d),f.description="TAP-compatible output"})),Zd=r((function(e,t){
/**
	   * @module JSON
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_TEST_PASS,o=r.EVENT_TEST_FAIL,i=r.EVENT_TEST_END,a=r.EVENT_RUN_END,s=r.EVENT_TEST_PENDING;
/**
	   * Constructs a new `JSON` reporter instance.
	   *
	   * @public
	   * @class JSON
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function u(e,t){Wd.call(this,e,t);var r=this,u=[],l=[],f=[],p=[];e.on(i,(function(e){u.push(e)})),e.on(n,(function(e){p.push(e)})),e.on(o,(function(e){f.push(e)})),e.on(s,(function(e){l.push(e)})),e.once(a,(function(){var t={stats:r.stats,tests:u.map(c),pending:l.map(c),failures:f.map(c),passes:p.map(c)};e.testResults=t,Dr.stdout.write(JSON.stringify(t,null,2))}))}
/**
	   * Return a plain-object representation of `test`
	   * free of cyclic properties etc.
	   *
	   * @private
	   * @param {Object} test
	   * @return {Object}
	   */function c(e){var t=e.err||{};return t instanceof Error&&(t=
/**
	   * Transform an Error object into a JSON object.
	   *
	   * @private
	   * @param {Error} err
	   * @return {Object}
	   */
function(e){var t={};return Object.getOwnPropertyNames(e).forEach((function(r){t[r]=e[r]}),e),t}(t)),{title:e.title,fullTitle:e.fullTitle(),file:e.file,duration:e.duration,currentRetry:e.currentRetry(),err:l(t)}}
/**
	   * Replaces any circular references inside `obj` with '[object Object]'
	   *
	   * @private
	   * @param {Object} obj
	   * @return {Object}
	   */function l(e){var t=[];return JSON.parse(JSON.stringify(e,(function(e,r){if("object"===qo(r)&&null!==r){if(-1!==t.indexOf(r))
// Instead of going in a circle, we'll print [object Object]
return""+r;t.push(r)}return r})))}e.exports=u,u.description="single JSON object"})),Qd="".repeat||function(e){var t=String(y(this)),r="",n=le(e);if(n<0||n==1/0)throw RangeError("Wrong number of repetitions");for(;n>0;(n>>>=1)&&(t+=t))1&n&&(r+=t);return r},Xd=1..toFixed,eg=Math.floor,tg=function(e,t,r){return 0===t?r:t%2==1?tg(e,t-1,r*e):tg(e*e,t/2,r)},rg=Xd&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!s((function(){
// V8 ~ Android 4.3-
Xd.call({})}));
// `Number.prototype.toFixed` method
// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed
qe({target:"Number",proto:1,forced:rg},{
// eslint-disable-next-line max-statements
toFixed:function(e){var t,r,n,o,i=function(e){if("number"!=typeof e&&"Number"!=d(e))throw TypeError("Incorrect invocation");return+e}(this),a=le(e),s=[0,0,0,0,0,0],u="",c="0",l=function(e,t){for(var r=-1,n=t;++r<6;)n+=e*s[r],s[r]=n%1e7,n=eg(n/1e7)},f=function(e){for(var t=6,r=0;--t>=0;)r+=s[t],s[t]=eg(r/e),r=r%e*1e7},p=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==s[e]){var r=String(s[e]);t=""===t?r:t+Qd.call("0",7-r.length)+r}return t};if(a<0||a>20)throw RangeError("Incorrect fraction digits");
// eslint-disable-next-line no-self-compare
if(i!=i)return"NaN";if(i<=-1e21||i>=1e21)return String(i);if(i<0&&(u="-",i=-i),i>1e-21)if(r=(t=function(e){for(var t=0,r=e;r>=4096;)t+=12,r/=4096;for(;r>=2;)t+=1,r/=2;return t}(i*tg(2,69,1))-69)<0?i*tg(2,-t,1):i/tg(2,t,1),r*=4503599627370496,(t=52-t)>0){for(l(0,r),n=a;n>=7;)l(1e7,0),n-=7;for(l(tg(10,n,1),0),n=t-1;n>=23;)f(1<<23),n-=23;f(1<<n),l(1,1),f(2),c=p()}else l(0,r),l(1<<-t,0),c=p()+Qd.call("0",a);return c=a>0?u+((o=c.length)<=a?"0."+Qd.call("0",a-o)+c:c.slice(0,o-a)+"."+c.slice(o-a)):u+c}});
/**
	 @module browser/Progress
	*/
/**
	 * Expose `Progress`.
	 */
var ng=og;
/**
	 * Initialize a new `Progress` indicator.
	 */function og(){this.percent=0,this.size(0),this.fontSize(11),this.font("helvetica, arial, sans-serif")}
/**
	 * Set progress size to `size`.
	 *
	 * @public
	 * @param {number} size
	 * @return {Progress} Progress instance.
	 */og.prototype.size=function(e){return this._size=e,this},
/**
	 * Set text to `text`.
	 *
	 * @public
	 * @param {string} text
	 * @return {Progress} Progress instance.
	 */
og.prototype.text=function(e){return this._text=e,this},
/**
	 * Set font size to `size`.
	 *
	 * @public
	 * @param {number} size
	 * @return {Progress} Progress instance.
	 */
og.prototype.fontSize=function(e){return this._fontSize=e,this},
/**
	 * Set font to `family`.
	 *
	 * @param {string} family
	 * @return {Progress} Progress instance.
	 */
og.prototype.font=function(e){return this._font=e,this},
/**
	 * Update percentage to `n`.
	 *
	 * @param {number} n
	 * @return {Progress} Progress instance.
	 */
og.prototype.update=function(e){return this.percent=e,this},
/**
	 * Draw on `ctx`.
	 *
	 * @param {CanvasRenderingContext2d} ctx
	 * @return {Progress} Progress instance.
	 */
og.prototype.draw=function(e){try{var t=Math.min(this.percent,100),r=this._size,n=r/2,o=n,i=n,a=n-1,s=this._fontSize;e.font=s+"px "+this._font;var u=2*Math.PI*(t/100);e.clearRect(0,0,r,r),// outer circle
e.strokeStyle="#9f9f9f",e.beginPath(),e.arc(o,i,a,0,u,0),e.stroke(),// inner circle
e.strokeStyle="#eee",e.beginPath(),e.arc(o,i,a-1,0,u,1),e.stroke();// text
var c=this._text||(0|t)+"%",l=e.measureText(c).width;e.fillText(c,o-l/2+1,i+s/2-1)}catch(e){// don't fail if we can't render progress
}return this};var ig=r((function(t,r){
/* eslint-env browser */
/**
	   * @module HTML
	   */
/**
	   * Module dependencies.
	   */
var n=Md.constants,o=n.EVENT_TEST_PASS,i=n.EVENT_TEST_FAIL,a=n.EVENT_SUITE_BEGIN,s=n.EVENT_SUITE_END,u=n.EVENT_TEST_PENDING,c=Yh.escape,l=e.Date;
/**
	   * Constructs a new `HTML` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function f(e,t){Wd.call(this,e,t);var r,n,f,p=this,v=this.stats,b=h('<ul id="mocha-stats"><li class="progress"><canvas width="40" height="40"></canvas></li><li class="passes"><a href="javascript:void(0);">passes:</a> <em>0</em></li><li class="failures"><a href="javascript:void(0);">failures:</a> <em>0</em></li><li class="duration">duration: <em>0</em>s</li></ul>'),w=b.getElementsByTagName("li"),E=w[1].getElementsByTagName("em")[0],A=w[1].getElementsByTagName("a")[0],T=w[2].getElementsByTagName("em")[0],x=w[2].getElementsByTagName("a")[0],S=w[3].getElementsByTagName("em")[0],_=b.getElementsByTagName("canvas")[0],N=h('<ul id="mocha-report"></ul>'),D=[N],C=document.getElementById("mocha");if(_.getContext){var k=window.devicePixelRatio||1;_.style.width=_.width,_.style.height=_.height,_.width*=k,_.height*=k,(n=_.getContext("2d")).scale(k,k),r=new ng}if(!C)return f="#mocha div missing, add it to your document",void document.body.appendChild(h('<div id="mocha-error">%s</div>',f));// pass toggle
function O(e){
// Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.
D[0]&&D[0].appendChild(e)}function R(){
// TODO: add to stats
var t=v.tests/e.total*100|0;r&&r.update(t).draw(n);// update stats
var o=new l-v.start;m(E,v.passes),m(T,v.failures),m(S,(o/1e3).toFixed(2))}y(A,"click",(function(e){e.preventDefault(),g();var t=/pass/.test(N.className)?"":" pass";N.className=N.className.replace(/fail|pass/g,"")+t,N.className.trim()&&d("test pass")})),// failure toggle
y(x,"click",(function(e){e.preventDefault(),g();var t=/fail/.test(N.className)?"":" fail";N.className=N.className.replace(/fail|pass/g,"")+t,N.className.trim()&&d("test fail")})),C.appendChild(b),C.appendChild(N),r&&r.size(40),e.on(a,(function(e){if(!e.root){// suite
var t=h('<li class="suite"><h1><a href="%s">%s</a></h1></li>',p.suiteURL(e),c(e.title));// container
D[0].appendChild(t),D.unshift(document.createElement("ul")),t.appendChild(D[0])}})),e.on(s,(function(e){e.root?R():D.shift()})),e.on(o,(function(e){var t=p.testURL(e),r=h('<li class="test pass %e"><h2>%e<span class="duration">%ems</span> <a href="%s" class="replay">&#x2023;</a></h2></li>',e.speed,e.title,e.duration,t);p.addCodeToggle(r,e.body),O(r),R()})),e.on(i,(function(e){var t,r=h('<li class="test fail"><h2>%e <a href="%e" class="replay">&#x2023;</a></h2></li>',e.title,p.testURL(e)),n=e.err.toString();if(// <=IE7 stringifies to [Object Error]. Since it can be overloaded, we
// check for the result of the stringifying.
"[object Error]"===n&&(n=e.err.message),e.err.stack){var o=e.err.stack.indexOf(e.err.message);t=-1===o?e.err.stack:e.err.stack.substr(e.err.message.length+o)}else e.err.sourceURL&&void 0!==e.err.line&&(
// Safari doesn't give you a stack. Let's at least provide a source line.
t="\n("+e.err.sourceURL+":"+e.err.line+")");t=t||"",e.err.htmlMessage&&t?r.appendChild(h('<div class="html-error">%s\n<pre class="error">%e</pre></div>',e.err.htmlMessage,t)):e.err.htmlMessage?r.appendChild(h('<div class="html-error">%s</div>',e.err.htmlMessage)):r.appendChild(h('<pre class="error">%e%e</pre>',n,t)),p.addCodeToggle(r,e.body),O(r),R()})),e.on(u,(function(e){O(h('<li class="test pass pending"><h2>%e</h2></li>',e.title)),R()}))}
/**
	   * Makes a URL, preserving querystring ("search") parameters.
	   *
	   * @param {string} s
	   * @return {string} A new URL.
	   */function p(e){var t=window.location.search;// Remove previous grep query parameter if present
return t&&(t=t.replace(/[?&]grep=[^&\s]*/g,"").replace(/^&/,"?")),window.location.pathname+(t?t+"&":"?")+"grep="+encodeURIComponent(Ap(e))}
/**
	   * Provide suite URL.
	   *
	   * @param {Object} [suite]
	   */
/**
	   * Return a DOM fragment from `html`.
	   *
	   * @param {string} html
	   */
function h(e){var t=arguments,r=document.createElement("div"),n=1;return r.innerHTML=e.replace(/%([se])/g,(function(e,r){switch(r){case"s":return String(t[n++]);case"e":return c(t[n++]);
// no default
}})),r.firstChild}
/**
	   * Check for suites that do not have elements
	   * with `classname`, and hide them.
	   *
	   * @param {text} classname
	   */function d(e){for(var t=document.getElementsByClassName("suite"),r=0;r<t.length;r++)t[r].getElementsByClassName(e).length||(t[r].className+=" hidden")}
/**
	   * Unhide .hidden suites.
	   */function g(){for(var e=document.getElementsByClassName("suite hidden");e.length>0;)e[0].className=e[0].className.replace("suite hidden","suite")}
/**
	   * Set an element's text contents.
	   *
	   * @param {HTMLElement} el
	   * @param {string} contents
	   */function m(e,t){e.textContent?e.textContent=t:e.innerText=t}
/**
	   * Listen on `event` with callback `fn`.
	   */function y(e,t,r){e.addEventListener?e.addEventListener(t,r,0):e.attachEvent("on"+t,r)}t.exports=f,f.prototype.suiteURL=function(e){return p(e.fullTitle())},
/**
	   * Provide test URL.
	   *
	   * @param {Object} [test]
	   */
f.prototype.testURL=function(e){return p(e.fullTitle())},
/**
	   * Adds code toggle functionality for the provided test's list element.
	   *
	   * @param {HTMLLIElement} el
	   * @param {string} contents
	   */
f.prototype.addCodeToggle=function(e,t){y(e.getElementsByTagName("h2")[0],"click",(function(){r.style.display="none"===r.style.display?"block":"none"}));var r=h("<pre><code>%e</code></pre>",Yh.clean(t));e.appendChild(r),r.style.display="none"},f.browserOnly=1})),ag=r((function(e,t){
/**
	   * @module List
	   */
/**
	   * Module dependencies.
	   */
var r=Yh.inherits,n=Md.constants,o=n.EVENT_RUN_BEGIN,i=n.EVENT_RUN_END,a=n.EVENT_TEST_BEGIN,s=n.EVENT_TEST_FAIL,u=n.EVENT_TEST_PASS,c=n.EVENT_TEST_PENDING,l=Wd.color,f=Wd.cursor;
/**
	   * Constructs a new `List` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function p(e,t){Wd.call(this,e,t);var r=0;e.on(o,(function(){Wd.consoleLog()})),e.on(a,(function(e){Dr.stdout.write(l("pass","    "+e.fullTitle()+": "))})),e.on(c,(function(e){var t=l("checkmark","  -")+l("pending"," %s");Wd.consoleLog(t,e.fullTitle())})),e.on(u,(function(e){var t=l("checkmark","  "+Wd.symbols.ok)+l("pass"," %s: ")+l(e.speed,"%dms");f.CR(),Wd.consoleLog(t,e.fullTitle(),e.duration)})),e.on(s,(function(e){f.CR(),Wd.consoleLog(l("fail","  %d) %s"),++r,e.fullTitle())})),e.once(i,this.epilogue.bind(this))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=p,r(p,Wd),p.description='like "spec" reporter but flat'})),sg=r((function(e,t){
/**
	   * @module Min
	   */
/**
	   * Module dependencies.
	   */
var r=Yh.inherits,n=Md.constants,o=n.EVENT_RUN_END,i=n.EVENT_RUN_BEGIN;
/**
	   * Constructs a new `Min` reporter instance.
	   *
	   * @description
	   * This minimal test reporter is best used with '--watch'.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function a(e,t){Wd.call(this,e,t),e.on(i,(function(){
// clear screen
Dr.stdout.write("[2J"),// set cursor position
Dr.stdout.write("[1;3H")})),e.once(o,this.epilogue.bind(this))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=a,r(a,Wd),a.description="essentially just a summary"})),ug=r((function(e,t){
/**
	   * @module Spec
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_RUN_BEGIN,o=r.EVENT_RUN_END,i=r.EVENT_SUITE_BEGIN,a=r.EVENT_SUITE_END,s=r.EVENT_TEST_FAIL,u=r.EVENT_TEST_PASS,c=r.EVENT_TEST_PENDING,l=Yh.inherits,f=Wd.color;
/**
	   * Constructs a new `Spec` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function p(e,t){Wd.call(this,e,t);var r=0,l=0;function p(){return Array(r).join("  ")}e.on(n,(function(){Wd.consoleLog()})),e.on(i,(function(e){++r,Wd.consoleLog(f("suite","%s%s"),p(),e.title)})),e.on(a,(function(){1==--r&&Wd.consoleLog()})),e.on(c,(function(e){var t=p()+f("pending","  - %s");Wd.consoleLog(t,e.title)})),e.on(u,(function(e){var t;"fast"===e.speed?(t=p()+f("checkmark","  "+Wd.symbols.ok)+f("pass"," %s"),Wd.consoleLog(t,e.title)):(t=p()+f("checkmark","  "+Wd.symbols.ok)+f("pass"," %s")+f(e.speed," (%dms)"),Wd.consoleLog(t,e.title,e.duration))})),e.on(s,(function(e){Wd.consoleLog(p()+f("fail","  %d) %s"),++l,e.title)})),e.once(o,this.epilogue.bind(this))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=p,l(p,Wd),p.description="hierarchical & verbose [default]"})),cg=r((function(e,t){
/**
	   * @module Nyan
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=Yh.inherits,o=r.EVENT_RUN_BEGIN,i=r.EVENT_TEST_PENDING,a=r.EVENT_TEST_PASS,s=r.EVENT_RUN_END,u=r.EVENT_TEST_FAIL;
/**
	   * Constructs a new `Nyan` reporter instance.
	   *
	   * @public
	   * @class Nyan
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function c(e,t){Wd.call(this,e,t);var r=this,n=.75*Wd.window.width|0,c=this.nyanCatWidth=11;this.colorIndex=0,this.numberOfLines=4,this.rainbowColors=r.generateColors(),this.scoreboardWidth=5,this.tick=0,this.trajectories=[[],[],[],[]],this.trajectoryWidthMax=n-c,e.on(o,(function(){Wd.cursor.hide(),r.draw()})),e.on(i,(function(){r.draw()})),e.on(a,(function(){r.draw()})),e.on(u,(function(){r.draw()})),e.once(s,(function(){Wd.cursor.show();for(var e=0;e<r.numberOfLines;e++)l("\n");r.epilogue()}))}
/**
	   * Inherit from `Base.prototype`.
	   */
/**
	   * Stdout helper.
	   *
	   * @param {string} string A message to write to stdout.
	   */
function l(e){Dr.stdout.write(e)}e.exports=c,n(c,Wd),
/**
	   * Draw the nyan cat
	   *
	   * @private
	   */
c.prototype.draw=function(){this.appendRainbow(),this.drawScoreboard(),this.drawRainbow(),this.drawNyanCat(),this.tick=!this.tick},
/**
	   * Draw the "scoreboard" showing the number
	   * of passes, failures and pending tests.
	   *
	   * @private
	   */
c.prototype.drawScoreboard=function(){var e=this.stats;function t(e,t){l(" "),l(Wd.color(e,t)),l("\n")}t("green",e.passes),t("fail",e.failures),t("pending",e.pending),l("\n"),this.cursorUp(this.numberOfLines)},
/**
	   * Append the rainbow.
	   *
	   * @private
	   */
c.prototype.appendRainbow=function(){for(var e=this.tick?"_":"-",t=this.rainbowify(e),r=0;r<this.numberOfLines;r++){var n=this.trajectories[r];n.length>=this.trajectoryWidthMax&&n.shift(),n.push(t)}},
/**
	   * Draw the rainbow.
	   *
	   * @private
	   */
c.prototype.drawRainbow=function(){var e=this;this.trajectories.forEach((function(t){l("["+e.scoreboardWidth+"C"),l(t.join("")),l("\n")})),this.cursorUp(this.numberOfLines)},
/**
	   * Draw the nyan cat
	   *
	   * @private
	   */
c.prototype.drawNyanCat=function(){var e="["+(this.scoreboardWidth+this.trajectories[0].length)+"C",t="";l(e),l("_,------,"),l("\n"),l(e),l("_|"+(t=this.tick?"  ":"   ")+"/\\_/\\ "),l("\n"),l(e),t=this.tick?"_":"__",l((this.tick?"~":"^")+"|"+t+this.face()+" "),l("\n"),l(e),l((t=this.tick?" ":"  ")+'""  "" '),l("\n"),this.cursorUp(this.numberOfLines)},
/**
	   * Draw nyan cat face.
	   *
	   * @private
	   * @return {string}
	   */
c.prototype.face=function(){var e=this.stats;return e.failures?"( x .x)":e.pending?"( o .o)":e.passes?"( ^ .^)":"( - .-)"},
/**
	   * Move cursor up `n`.
	   *
	   * @private
	   * @param {number} n
	   */
c.prototype.cursorUp=function(e){l("["+e+"A")},
/**
	   * Move cursor down `n`.
	   *
	   * @private
	   * @param {number} n
	   */
c.prototype.cursorDown=function(e){l("["+e+"B")},
/**
	   * Generate rainbow colors.
	   *
	   * @private
	   * @return {Array}
	   */
c.prototype.generateColors=function(){for(var e=[],t=0;t<42;t++){var r=Math.floor(Math.PI/3),n=t*(1/6),o=Math.floor(3*Math.sin(n)+3),i=Math.floor(3*Math.sin(n+2*r)+3),a=Math.floor(3*Math.sin(n+4*r)+3);e.push(36*o+6*i+a+16)}return e},
/**
	   * Apply rainbow to the given `str`.
	   *
	   * @private
	   * @param {string} str
	   * @return {string}
	   */
c.prototype.rainbowify=function(e){if(!Wd.useColors)return e;var t=this.rainbowColors[this.colorIndex%this.rainbowColors.length];return this.colorIndex+=1,"[38;5;"+t+"m"+e+"[0m"},c.description='"nyan cat"'})),lg={},fg=r((function(t,r){
/**
	   * @module XUnit
	   */
/**
	   * Module dependencies.
	   */
var n=rd.createUnsupportedError,o=Md.constants,i=o.EVENT_TEST_PASS,a=o.EVENT_TEST_FAIL,s=o.EVENT_RUN_END,u=o.EVENT_TEST_PENDING,c=fd.constants.STATE_FAILED,l=Yh.inherits,f=Yh.escape,p=e.Date;
/**
	   * Constructs a new `XUnit` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function h(e,t){Wd.call(this,e,t);var r,o=this.stats,c=[],l=this;if(t&&t.reporterOptions){if(t.reporterOptions.output){if(!lg.createWriteStream)throw n("file output not supported in browser");lg.mkdirSync(Cp.dirname(t.reporterOptions.output),{recursive:1}),l.fileStream=lg.createWriteStream(t.reporterOptions.output)}// get the suite name from the reporter options (if provided)
r=t.reporterOptions.suiteName}// fall back to the default suite name
r=r||"Mocha Tests",e.on(u,(function(e){c.push(e)})),e.on(i,(function(e){c.push(e)})),e.on(a,(function(e){c.push(e)})),e.once(s,(function(){l.write(d("testsuite",{name:r,tests:o.tests,failures:0,errors:o.failures,skipped:o.tests-o.failures-o.passes,timestamp:(new p).toUTCString(),time:o.duration/1e3||0},0)),c.forEach((function(e){l.test(e)})),l.write("</testsuite>")}))}
/**
	   * Inherit from `Base.prototype`.
	   */
/**
	   * HTML tag helper.
	   *
	   * @param name
	   * @param attrs
	   * @param close
	   * @param content
	   * @return {string}
	   */
function d(e,t,r,n){var o,i=r?"/>":">",a=[];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&a.push(s+'="'+f(t[s])+'"');return o="<"+e+(a.length?" "+a.join(" "):"")+i,n&&(o+=n+"</"+e+i),o}t.exports=h,l(h,Wd),
/**
	   * Override done to close the stream (if it's a file).
	   *
	   * @param failures
	   * @param {Function} fn
	   */
h.prototype.done=function(e,t){this.fileStream?this.fileStream.end((function(){t(e)})):t(e)},
/**
	   * Write out the given line.
	   *
	   * @param {string} line
	   */
h.prototype.write=function(e){this.fileStream?this.fileStream.write(e+"\n"):"object"===qo(Dr)&&Dr.stdout?Dr.stdout.write(e+"\n"):Wd.consoleLog(e)},
/**
	   * Output tag for the given `test.`
	   *
	   * @param {Test} test
	   */
h.prototype.test=function(e){Wd.useColors=0;var t={classname:e.parent.fullTitle(),name:e.title,time:e.duration/1e3||0};if(e.state===c){var r=e.err,n=!Wd.hideDiff&&Wd.showDiff(r)?"\n"+Wd.generateDiff(r.actual,r.expected):"";this.write(d("testcase",t,0,d("failure",{},0,f(r.message)+f(n)+"\n"+f(r.stack))))}else e.isPending()?this.write(d("testcase",t,0,d("skipped",{},1))):this.write(d("testcase",t,1))},h.description="XUnit-compatible XML output"})),pg=r((function(e,t){
/**
	   * @module Markdown
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_RUN_END,o=r.EVENT_SUITE_BEGIN,i=r.EVENT_SUITE_END,a=r.EVENT_TEST_PASS;
/**
	   * Constructs a new `Markdown` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function s(e,t){Wd.call(this,e,t);var r=0,s="";function u(e){return function e(t,r){++r;var n,o="";for(var i in t)"suite"!==i&&("$"!==i&&(n=" - ["+i.substring(1)+"]",n+="(#"+Yh.slug(t[i].suite.fullTitle())+")\n",o+=Array(r).join("  ")+n),o+=e(t[i],r));return o}(function e(t,r){var n=r,o="$"+t.title;return r=r[o]=r[o]||{suite:t},t.suites.forEach((function(t){e(t,r)})),n}(e,{}),0)}u(e.suite),e.on(o,(function(e){++r;var t,n=Yh.slug(e.fullTitle());s+='<a name="'+n+'"></a>\n',s+=(t=e.title,Array(r).join("#")+" "+t+"\n")})),e.on(i,(function(){--r})),e.on(a,(function(e){var t=Yh.clean(e.body);s+=e.title+".\n",s+="\n```js\n",s+=t+"\n",s+="```\n\n"})),e.once(n,(function(){Dr.stdout.write("# TOC\n"),Dr.stdout.write(u(e.suite)),Dr.stdout.write(s)}))}e.exports=s,s.description="GitHub Flavored Markdown"})),hg=r((function(e,t){
/**
	   * @module Progress
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_RUN_BEGIN,o=r.EVENT_TEST_END,i=r.EVENT_RUN_END,a=Yh.inherits,s=Wd.color,u=Wd.cursor;
/**
	   * Constructs a new `Progress` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function c(e,t){Wd.call(this,e,t);var r=this,a=.5*Wd.window.width|0,c=e.total,l=0,f=-1,p=(// default chars
t=t||{}).reporterOptions||{};t.open=p.open||"[",t.complete=p.complete||"▬",t.incomplete=p.incomplete||Wd.symbols.dot,t.close=p.close||"]",t.verbose=p.verbose||0,// tests started
e.on(n,(function(){Dr.stdout.write("\n"),u.hide()})),// tests complete
e.on(o,(function(){l++;var e=a*(l/c)|0,r=a-e;(e!==f||t.verbose)&&(f=e,u.CR(),Dr.stdout.write("[J"),Dr.stdout.write(s("progress","  "+t.open)),Dr.stdout.write(Array(e).join(t.complete)),Dr.stdout.write(Array(r).join(t.incomplete)),Dr.stdout.write(s("progress",t.close)),t.verbose&&Dr.stdout.write(s("progress"," "+l+" of "+c)))})),// tests are complete, output some stats
// and the failures if any
e.once(i,(function(){u.show(),Dr.stdout.write("\n"),r.epilogue()}))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=c,
/**
	   * General progress bar color.
	   */
Wd.colors.progress=90,a(c,Wd),c.description="a progress bar"})),dg=r((function(e,t){
/**
	   * @module Landing
	   */
/**
	   * Module dependencies.
	   */
var r=Yh.inherits,n=Md.constants,o=n.EVENT_RUN_BEGIN,i=n.EVENT_RUN_END,a=n.EVENT_TEST_END,s=fd.constants.STATE_FAILED,u=Wd.cursor,c=Wd.color;
/**
	   * Constructs a new `Landing` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function l(e,t){Wd.call(this,e,t);var r=this,n=.75*Wd.window.width|0,l=Dr.stdout,f=c("plane","✈"),p=-1,h=0,d=0;function g(){var e=Array(n).join("-");return"  "+c("runway",e)}e.on(o,(function(){l.write("\n\n\n  "),u.hide()})),e.on(a,(function(e){
// check if the plane crashed
var t=-1===p?n*++h/++d|0:p;// show the crash
e.state===s&&(f=c("plane crash","✈"),p=t),// render landing strip
l.write("["+(n+1)+"D[2A"),l.write(g()),l.write("\n  "),l.write(c("runway",Array(t).join("⋅"))),l.write(f),l.write(c("runway",Array(n-t).join("⋅")+"\n")),l.write(g()),l.write("[0m")})),e.once(i,(function(){u.show(),Dr.stdout.write("\n"),r.epilogue()})),// if cursor is hidden when we ctrl-C, then it will remain hidden unless...
Dr.once("SIGINT",(function(){u.show(),gr((function(){Dr.kill(Dr.pid,"SIGINT")}))}))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=l,
/**
	   * Airplane color.
	   */
Wd.colors.plane=0,
/**
	   * Airplane crash color.
	   */
Wd.colors["plane crash"]=31,
/**
	   * Runway color.
	   */
Wd.colors.runway=90,r(l,Wd),l.description="Unicode landing strip"})),gg=r((function(e,t){
/**
	   * @module JSONStream
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_TEST_PASS,o=r.EVENT_TEST_FAIL,i=r.EVENT_RUN_BEGIN,a=r.EVENT_RUN_END;
/**
	   * Constructs a new `JSONStream` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function s(e,t){Wd.call(this,e,t);var r=this,s=e.total;e.once(i,(function(){u(["start",{total:s}])})),e.on(n,(function(e){u(["pass",c(e)])})),e.on(o,(function(e,t){(e=c(e)).err=t.message,e.stack=t.stack||null,u(["fail",e])})),e.once(a,(function(){u(["end",r.stats])}))}
/**
	   * Mocha event to be written to the output stream.
	   * @typedef {Array} JSONStream~MochaEvent
	   */
/**
	   * Writes Mocha event to reporter output stream.
	   *
	   * @private
	   * @param {JSONStream~MochaEvent} event - Mocha event to be output.
	   */function u(e){Dr.stdout.write(JSON.stringify(e)+"\n")}
/**
	   * Returns an object literal representation of `test`
	   * free of cyclic properties, etc.
	   *
	   * @private
	   * @param {Test} test - Instance used as data source.
	   * @return {Object} object containing pared-down test instance data
	   */function c(e){return{title:e.title,fullTitle:e.fullTitle(),file:e.file,duration:e.duration,currentRetry:e.currentRetry()}}e.exports=s,s.description="newline delimited JSON events"})),mg=r((function(e,t){
// for dynamic (try/catch) requires, which Browserify doesn't handle.
t.Base=t.base=Wd,t.Dot=t.dot=$d,t.Doc=t.doc=Jd,t.TAP=t.tap=Kd,t.JSON=t.json=Zd,t.HTML=t.html=ig,t.List=t.list=ag,t.Min=t.min=sg,t.Spec=t.spec=ug,t.Nyan=t.nyan=cg,t.XUnit=t.xunit=fg,t.Markdown=t.markdown=pg,t.Progress=t.progress=hg,t.Landing=t.landing=dg,t.JSONStream=t["json-stream"]=gg})),yg="https://ibin.co/4QuRuGjXvl36.png",vg={name:"mocha",version:"8.1.1",homepage:"https://mochajs.org/",notifyLogo:yg},bg=n(Object.freeze({__proto__:null,name:"mocha",version:"8.1.1",homepage:"https://mochajs.org/",notifyLogo:yg,default:vg})),wg=e.Date,Eg=e.setTimeout,Ag=Md.constants.EVENT_RUN_END,Tg=Yh.isBrowser;
/**
	 * @summary
	 * Determines if notification should proceed.
	 *
	 * @description
	 * Notification shall <strong>not</strong> proceed unless `value` is true.
	 *
	 * `value` will equal one of:
	 * <ul>
	 *   <li><code>true</code> (from `isPermitted`)</li>
	 *   <li><code>false</code> (from `isPermitted`)</li>
	 *   <li><code>undefined</code> (from `Promise.race`)</li>
	 * </ul>
	 *
	 * @private
	 * @param {boolean|undefined} value - Determines if notification permissible.
	 * @returns {Promise<undefined>} Notification can proceed
	 */
function xg(e){if(!e){var t="not permitted by user ("+(0==e?"blocked":"unacknowledged")+")";return Promise.reject(new Error(t))}return Promise.resolve()}
/**
	 * Displays the notification.
	 *
	 * @private
	 * @param {Runner} runner - Runner instance.
	 */
/**
	 * As notifications are tangential to our purpose, just log the error.
	 *
	 * @private
	 * @param {Error} err - Why notification didn't happen.
	 */
function Sg(e){console.error("notification error:",e.message)}var _g=function(){var e="Notification"in window,t="function"==typeof Promise;return Tg()&&e&&t},Ng=function(e){var t={granted:function(){return Promise.resolve(1)},denied:function(){return Promise.resolve(0)},default:function(){return Notification.requestPermission().then((function(e){return"granted"===e}))}}[Notification.permission]();
/**
	   * Attempt notification.
	   */e.once(Ag,(function(){
// If user hasn't responded yet... "No notification for you!" (Seinfeld)
Promise.race([t,Promise.resolve(void 0)]).then(xg).then((function(){!function(e){var t,r,n,o=e.stats,i={cross:"❌",tick:"✅"},a=bg.notifyLogo;o.failures?(t=o.failures+" of "+o.tests+" tests failed",r=i.cross+" "+t,n="Failed"):(t=o.passes+" tests passed in "+o.duration+"ms",r=i.tick+" "+t,n="Passed");// Send notification
var s={badge:a,body:r,dir:"ltr",icon:a,lang:"en-US",name:"mocha",requireInteraction:0,timestamp:wg.now()},u=new Notification(n,s);Eg(u.close.bind(u),4e3)}(e)})).catch(Sg)}))},Dg=["js","cjs","mjs"],Cg={diff:1,extension:Dg,package:"./package.json",reporter:"spec",slow:75,timeout:2e3,ui:"bdd","watch-ignore":["node_modules",".git"]},kg=Object.freeze({__proto__:null,diff:1,extension:Dg,reporter:"spec",slow:75,timeout:2e3,ui:"bdd",default:Cg}),Og=Md.constants,Rg=Og.EVENT_TEST_PASS,Lg=Og.EVENT_TEST_FAIL,qg=Og.EVENT_SUITE_BEGIN,Ig=Og.EVENT_RUN_BEGIN,Bg=Og.EVENT_TEST_PENDING,Pg=Og.EVENT_RUN_END,jg=Og.EVENT_TEST_END,Fg=e.Date,Ug=
/**
	 * Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.
	 *
	 * @private
	 * @param {Runner} runner - Runner instance
	 * @throws {TypeError} If falsy `runner`
	 */
function(e){
/**
	   * @type StatsCollector
	   */
var t={suites:0,tests:0,passes:0,pending:0,failures:0};if(!e)throw new TypeError("Missing runner argument");e.stats=t,e.once(Ig,(function(){t.start=new Fg})),e.on(qg,(function(e){e.root||t.suites++})),e.on(Rg,(function(){t.passes++})),e.on(Lg,(function(){t.failures++})),e.on(Bg,(function(){t.pending++})),e.on(jg,(function(){t.tests++})),e.once(Pg,(function(){t.end=new Fg,t.duration=t.end-t.start}))},Vg=rd.createInvalidArgumentTypeError,Mg=Yh.isString,Hg=zg;
/**
	 * Initialize a new `Test` with the given `title` and callback `fn`.
	 *
	 * @public
	 * @class
	 * @extends Runnable
	 * @param {String} title - Test title (required)
	 * @param {Function} [fn] - Test callback.  If omitted, the Test is considered "pending"
	 */
function zg(e,t){if(!Mg(e))throw Vg('Test argument "title" should be a string. Received type "'+qo(e)+'"',"title","string");this.type="test",fd.call(this,e,t),this.reset()}
/**
	 * Inherit from `Runnable.prototype`.
	 */Yh.inherits(zg,fd),
/**
	 * Resets the state initially or for a next run.
	 */
zg.prototype.reset=function(){fd.prototype.reset.call(this),this.pending=!this.fn,delete this.state},
/**
	 * Set or get retried test
	 *
	 * @private
	 */
zg.prototype.retriedTest=function(e){if(!arguments.length)return this._retriedTest;this._retriedTest=e},
/**
	 * Add test to the list of tests marked `only`.
	 *
	 * @private
	 */
zg.prototype.markOnly=function(){this.parent.appendOnlyTest(this)},zg.prototype.clone=function(){var e=new zg(this.title,this.fn);return e.timeout(this.timeout()),e.slow(this.slow()),e.retries(this.retries()),e.currentRetry(this.currentRetry()),e.retriedTest(this.retriedTest()||this),e.globals(this.globals()),e.parent=this.parent,e.file=this.file,e.ctx=this.ctx,e},
/**
	 * Returns an minimal object suitable for transmission over IPC.
	 * Functions are represented by keys beginning with `$$`.
	 * @private
	 * @returns {Object}
	 */
zg.prototype.serialize=function(){return{$$currentRetry:this._currentRetry,$$fullTitle:this.fullTitle(),$$isPending:this.pending,$$retriedTest:this._retriedTest||null,$$slow:this._slow,$$titlePath:this.titlePath(),body:this.body,duration:this.duration,err:this.err,parent:{$$fullTitle:this.parent.fullTitle()},speed:this.speed,state:this.state,title:this.title,type:this.type,file:this.file}};
/**
	 @module interfaces/common
	*/
var Gg=rd.createMissingArgumentError,Yg=rd.createUnsupportedError,Wg=rd.createForbiddenExclusivityError,$g=function(e,t,r){return{
/**
	     * This is only present if flag --delay is passed into Mocha. It triggers
	     * root suite execution.
	     *
	     * @param {Suite} suite The root suite.
	     * @return {Function} A function which runs the root suite
	     */
runWithSuite:function(e){return function(){e.run()}},
/**
	     * Execute before running tests.
	     *
	     * @param {string} name
	     * @param {Function} fn
	     */
before:function(t,r){e[0].beforeAll(t,r)},
/**
	     * Execute after running tests.
	     *
	     * @param {string} name
	     * @param {Function} fn
	     */
after:function(t,r){e[0].afterAll(t,r)},
/**
	     * Execute before each test case.
	     *
	     * @param {string} name
	     * @param {Function} fn
	     */
beforeEach:function(t,r){e[0].beforeEach(t,r)},
/**
	     * Execute after each test case.
	     *
	     * @param {string} name
	     * @param {Function} fn
	     */
afterEach:function(t,r){e[0].afterEach(t,r)},suite:{
/**
	       * Create an exclusive Suite; convenience function
	       * See docstring for create() below.
	       *
	       * @param {Object} opts
	       * @returns {Suite}
	       */
only:function(e){if(r.options.forbidOnly)throw Wg(r);return e.isOnly=1,this.create(e)},
/**
	       * Create a Suite, but skip it; convenience function
	       * See docstring for create() below.
	       *
	       * @param {Object} opts
	       * @returns {Suite}
	       */
skip:function(e){return e.pending=1,this.create(e)},
/**
	       * Creates a suite.
	       *
	       * @param {Object} opts Options
	       * @param {string} opts.title Title of Suite
	       * @param {Function} [opts.fn] Suite Function (not always applicable)
	       * @param {boolean} [opts.pending] Is Suite pending?
	       * @param {string} [opts.file] Filepath where this Suite resides
	       * @param {boolean} [opts.isOnly] Is Suite exclusive?
	       * @returns {Suite}
	       */
create:function(t){var n=wd.create(e[0],t.title);if(n.pending=Boolean(t.pending),n.file=t.file,e.unshift(n),t.isOnly&&n.markOnly(),n.pending&&r.options.forbidPending&&
/**
	   * Check if the suite should be tested.
	   *
	   * @private
	   * @param {Suite} suite - suite to check
	   * @returns {boolean}
	   */
function(e){return!r.options.grep||r.options.grep&&r.options.grep.test(e.fullTitle())&&!r.options.invert}(n))throw Yg("Pending test forbidden");if("function"==typeof t.fn)t.fn.call(n),e.shift();else{if(void 0===t.fn&&!n.pending)throw Gg('Suite "'+n.fullTitle()+'" was defined but no callback was supplied. Supply a callback or explicitly skip the suite.',"callback","function");!t.fn&&n.pending&&e.shift()}return n}},test:{
/**
	       * Exclusive test-case.
	       *
	       * @param {Object} mocha
	       * @param {Function} test
	       * @returns {*}
	       */
only:function(e,t){if(e.options.forbidOnly)throw Wg(e);return t.markOnly(),t},
/**
	       * Pending test case.
	       *
	       * @param {string} title
	       */
skip:function(e){t.test(e)},
/**
	       * Number of retry attempts
	       *
	       * @param {number} n
	       */
retries:function(e){t.retries(e)}}}},Jg=wd.constants.EVENT_FILE_PRE_REQUIRE,Kg=function(e){var t=[e];e.on(Jg,(function(r,n,o){var i=$g(t,r,o);r.before=i.before,r.after=i.after,r.beforeEach=i.beforeEach,r.afterEach=i.afterEach,r.run=o.options.delay&&i.runWithSuite(e),
/**
	     * Describe a "suite" with the given `title`
	     * and callback `fn` containing nested suites
	     * and/or tests.
	     */
r.describe=r.context=function(e,t){return i.suite.create({title:e,file:n,fn:t})},
/**
	     * Pending describe.
	     */
r.xdescribe=r.xcontext=r.describe.skip=function(e,t){return i.suite.skip({title:e,file:n,fn:t})},
/**
	     * Exclusive suite.
	     */
r.describe.only=function(e,t){return i.suite.only({title:e,file:n,fn:t})},
/**
	     * Describe a specification or test-case
	     * with the given `title` and callback `fn`
	     * acting as a thunk.
	     */
r.it=r.specify=function(e,r){var o=t[0];o.isPending()&&(r=null);var i=new Hg(e,r);return i.file=n,o.addTest(i),i},
/**
	     * Exclusive test-case.
	     */
r.it.only=function(e,t){return i.test.only(o,r.it(e,t))},
/**
	     * Pending test case.
	     */
r.xit=r.xspecify=r.it.skip=function(e){return r.it(e)},
/**
	     * Number of attempts to retry.
	     */
r.it.retries=function(e){r.retries(e)}}))};Kg.description="BDD or RSpec style [default]";var Zg=wd.constants.EVENT_FILE_PRE_REQUIRE,Qg=function(e){var t=[e];e.on(Zg,(function(r,n,o){var i=$g(t,r,o);r.setup=i.beforeEach,r.teardown=i.afterEach,r.suiteSetup=i.before,r.suiteTeardown=i.after,r.run=o.options.delay&&i.runWithSuite(e),
/**
	     * Describe a "suite" with the given `title` and callback `fn` containing
	     * nested suites and/or tests.
	     */
r.suite=function(e,t){return i.suite.create({title:e,file:n,fn:t})},
/**
	     * Pending suite.
	     */
r.suite.skip=function(e,t){return i.suite.skip({title:e,file:n,fn:t})},
/**
	     * Exclusive test-case.
	     */
r.suite.only=function(e,t){return i.suite.only({title:e,file:n,fn:t})},
/**
	     * Describe a specification or test-case with the given `title` and
	     * callback `fn` acting as a thunk.
	     */
r.test=function(e,r){var o=t[0];o.isPending()&&(r=null);var i=new Hg(e,r);return i.file=n,o.addTest(i),i},
/**
	     * Exclusive test-case.
	     */
r.test.only=function(e,t){return i.test.only(o,r.test(e,t))},r.test.skip=i.test.skip,r.test.retries=i.test.retries}))};
/**
	 * TDD-style interface:
	 *
	 *      suite('Array', function() {
	 *        suite('#indexOf()', function() {
	 *          suiteSetup(function() {
	 *
	 *          });
	 *
	 *          test('should return -1 when not present', function() {
	 *
	 *          });
	 *
	 *          test('should return the index when present', function() {
	 *
	 *          });
	 *
	 *          suiteTeardown(function() {
	 *
	 *          });
	 *        });
	 *      });
	 *
	 * @param {Suite} suite Root suite.
	 */Qg.description='traditional "suite"/"test" instead of BDD\'s "describe"/"it"';var Xg=wd.constants.EVENT_FILE_PRE_REQUIRE,em=function(e){var t=[e];e.on(Xg,(function(r,n,o){var i=$g(t,r,o);r.before=i.before,r.after=i.after,r.beforeEach=i.beforeEach,r.afterEach=i.afterEach,r.run=o.options.delay&&i.runWithSuite(e),
/**
	     * Describe a "suite" with the given `title`.
	     */
r.suite=function(e){return t.length>1&&t.shift(),i.suite.create({title:e,file:n,fn:0})},
/**
	     * Exclusive Suite.
	     */
r.suite.only=function(e){return t.length>1&&t.shift(),i.suite.only({title:e,file:n,fn:0})},
/**
	     * Describe a specification or test-case
	     * with the given `title` and callback `fn`
	     * acting as a thunk.
	     */
r.test=function(e,r){var o=new Hg(e,r);return o.file=n,t[0].addTest(o),o},
/**
	     * Exclusive test-case.
	     */
r.test.only=function(e,t){return i.test.only(o,r.test(e,t))},r.test.skip=i.test.skip,r.test.retries=i.test.retries}))};
/**
	 * QUnit-style interface:
	 *
	 *     suite('Array');
	 *
	 *     test('#length', function() {
	 *       var arr = [1,2,3];
	 *       ok(arr.length == 3);
	 *     });
	 *
	 *     test('#indexOf()', function() {
	 *       var arr = [1,2,3];
	 *       ok(arr.indexOf(1) == 0);
	 *       ok(arr.indexOf(2) == 1);
	 *       ok(arr.indexOf(3) == 2);
	 *     });
	 *
	 *     suite('String');
	 *
	 *     test('#length', function() {
	 *       ok('foo'.length == 3);
	 *     });
	 *
	 * @param {Suite} suite Root suite.
	 */em.description="QUnit style";
/**
	 * Exports-style (as Node.js module) interface:
	 *
	 *     exports.Array = {
	 *       '#indexOf()': {
	 *         'should return -1 when the value is not present': function() {
	 *
	 *         },
	 *
	 *         'should return the correct index when the value is present': function() {
	 *
	 *         }
	 *       }
	 *     };
	 *
	 * @param {Suite} suite Root suite.
	 */
var tm=function(e){var t=[e];e.on(wd.constants.EVENT_FILE_REQUIRE,(function e(r,n){var o;for(var i in r)if("function"==typeof r[i]){var a=r[i];switch(i){case"before":t[0].beforeAll(a);break;case"after":t[0].afterAll(a);break;case"beforeEach":t[0].beforeEach(a);break;case"afterEach":t[0].afterEach(a);break;default:var s=new Hg(i,a);s.file=n,t[0].addTest(s)}}else o=wd.create(t[0],i),t.unshift(o),e(r[i],n),t.shift()}))};tm.description='Node.js module ("exports") style';var rm={bdd:Kg,tdd:Qg,qunit:em,exports:tm},nm=om;
/**
	 * Initialize a new `Context`.
	 *
	 * @private
	 */
function om(){}
/**
	 * Set or get the context `Runnable` to `runnable`.
	 *
	 * @private
	 * @param {Runnable} runnable
	 * @return {Context} context
	 */om.prototype.runnable=function(e){return arguments.length?(this.test=this._runnable=e,this):this._runnable},
/**
	 * Set or get test timeout `ms`.
	 *
	 * @private
	 * @param {number} ms
	 * @return {Context} self
	 */
om.prototype.timeout=function(e){return arguments.length?(this.runnable().timeout(e),this):this.runnable().timeout()},
/**
	 * Set or get test slowness threshold `ms`.
	 *
	 * @private
	 * @param {number} ms
	 * @return {Context} self
	 */
om.prototype.slow=function(e){return arguments.length?(this.runnable().slow(e),this):this.runnable().slow()},
/**
	 * Mark a test as skipped.
	 *
	 * @private
	 * @throws Pending
	 */
om.prototype.skip=function(){this.runnable().skip()},
/**
	 * Set or get a number of allowed retries on failed tests
	 *
	 * @private
	 * @param {number} n
	 * @return {Context} self
	 */
om.prototype.retries=function(e){return arguments.length?(this.runnable().retries(e),this):this.runnable().retries()};var im=n(kg),am=r((function(t,r){
/*!
	   * mocha
	   * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>
	   * MIT Licensed
	   */
var n=Yh.supportsEsModules(1)?Yd:void 0,i=rd.createInvalidReporterError,a=rd.createInvalidInterfaceError,s=rd.createMochaInstanceAlreadyDisposedError,u=rd.createMochaInstanceAlreadyRunningError,c=wd.constants.EVENT_FILE_PRE_REQUIRE,l=wd.constants.EVENT_FILE_POST_REQUIRE,f=wd.constants.EVENT_FILE_REQUIRE,p=Yh.sQuote,h=Kh("mocha:mocha");r=t.exports=m;
/**
	   * A Mocha instance is a finite state machine.
	   * These are the states it can be in.
	   * @private
	   */
var d=Yh.defineConstants({
/**
	     * Initial state of the mocha instance
	     * @private
	     */
INIT:"init",
/**
	     * Mocha instance is running tests
	     * @private
	     */
RUNNING:"running",
/**
	     * Mocha instance is done running tests and references to test functions and hooks are cleaned.
	     * You can reset this state by unloading the test files.
	     * @private
	     */
REFERENCES_CLEANED:"referencesCleaned",
/**
	     * Mocha instance is disposed and can no longer be used.
	     * @private
	     */
DISPOSED:"disposed"});
/**
	   * To require local UIs and reporters when running in node.
	   */if(!Yh.isBrowser()&&void 0!==t.paths){var g=Yh.cwd();t.paths.push(g,Cp.join(g,"node_modules"))}
/**
	   * Expose internals.
	   * @private
	   */
/**
	   * Constructs a new Mocha instance with `options`.
	   *
	   * @public
	   * @class Mocha
	   * @param {Object} [options] - Settings object.
	   * @param {boolean} [options.allowUncaught] - Propagate uncaught errors?
	   * @param {boolean} [options.asyncOnly] - Force `done` callback or promise?
	   * @param {boolean} [options.bail] - Bail after first test failure?
	   * @param {boolean} [options.checkLeaks] - Check for global variable leaks?
	   * @param {boolean} [options.color] - Color TTY output from reporter?
	   * @param {boolean} [options.delay] - Delay root suite execution?
	   * @param {boolean} [options.diff] - Show diff on failure?
	   * @param {string} [options.fgrep] - Test filter given string.
	   * @param {boolean} [options.forbidOnly] - Tests marked `only` fail the suite?
	   * @param {boolean} [options.forbidPending] - Pending tests fail the suite?
	   * @param {boolean} [options.fullTrace] - Full stacktrace upon failure?
	   * @param {string[]} [options.global] - Variables expected in global scope.
	   * @param {RegExp|string} [options.grep] - Test filter given regular expression.
	   * @param {boolean} [options.growl] - Enable desktop notifications?
	   * @param {boolean} [options.inlineDiffs] - Display inline diffs?
	   * @param {boolean} [options.invert] - Invert test filter matches?
	   * @param {boolean} [options.noHighlighting] - Disable syntax highlighting?
	   * @param {string|constructor} [options.reporter] - Reporter name or constructor.
	   * @param {Object} [options.reporterOption] - Reporter settings object.
	   * @param {number} [options.retries] - Number of times to retry failed tests.
	   * @param {number} [options.slow] - Slow threshold value.
	   * @param {number|string} [options.timeout] - Timeout threshold value.
	   * @param {string} [options.ui] - Interface name.
	   * @param {boolean} [options.parallel] - Run jobs in parallel
	   * @param {number} [options.jobs] - Max number of worker processes for parallel runs
	   * @param {MochaRootHookObject} [options.rootHooks] - Hooks to bootstrap the root
	   * suite with
	   * @param {boolean} [options.isWorker] - Should be `true` if `Mocha` process is running in a worker process.
	   */
function m(e){e=Yh.assign({},im,e||{}),this.files=[],this.options=e,// root suite
this.suite=new r.Suite("",new r.Context,1),this._cleanReferencesAfterRun=1,this._state=d.INIT,this.grep(e.grep).fgrep(e.fgrep).ui(e.ui).reporter(e.reporter,e.reporterOption||e.reporterOptions).slow(e.slow).global(e.global),// this guard exists because Suite#timeout does not consider `undefined` to be valid input
void 0!==e.timeout&&this.timeout(0==e.timeout?0:e.timeout),"retries"in e&&this.retries(e.retries),["allowUncaught","asyncOnly","bail","checkLeaks","color","delay","diff","forbidOnly","forbidPending","fullTrace","growl","inlineDiffs","invert"].forEach((function(t){e[t]&&this[t]()}),this),e.rootHooks&&this.rootHooks(e.rootHooks)
/**
	     * The class which we'll instantiate in {@link Mocha#run}.  Defaults to
	     * {@link Runner} in serial mode; changes in parallel mode.
	     * @memberof Mocha
	     * @private
	     */,this._runnerClass=r.Runner,
/**
	     * Whether or not to call {@link Mocha#loadFiles} implicitly when calling
	     * {@link Mocha#run}.  If this is `true`, then it's up to the consumer to call
	     * {@link Mocha#loadFiles} _or_ {@link Mocha#loadFilesAsync}.
	     * @private
	     * @memberof Mocha
	     */
this._lazyLoadFiles=0,
/**
	     * It's useful for a Mocha instance to know if it's running in a worker process.
	     * We could derive this via other means, but it's helpful to have a flag to refer to.
	     * @memberof Mocha
	     * @private
	     */
this.isWorker=Boolean(e.isWorker),e.parallel&&(void 0===e.jobs||e.jobs>1)&&(h("attempting to enable parallel mode"),this.parallelMode(1))}
/**
	   * Enables or disables bailing on the first failure.
	   *
	   * @public
	   * @see [CLI option](../#-bail-b)
	   * @param {boolean} [bail=true] - Whether to bail on first error.
	   * @returns {Mocha} this
	   * @chainable
	   */r.utils=Yh,r.interfaces=rm,
/**
	   * @public
	   * @memberof Mocha
	   */
r.reporters=mg,r.Runnable=fd,r.Context=nm,
/**
	   *
	   * @memberof Mocha
	   */
r.Runner=Md,r.Suite=wd,r.Hook=vd,r.Test=Hg,m.prototype.bail=function(e){return this.suite.bail(0!=e),this},
/**
	   * @summary
	   * Adds `file` to be loaded for execution.
	   *
	   * @description
	   * Useful for generic setup code that must be included within test suite.
	   *
	   * @public
	   * @see [CLI option](../#-file-filedirectoryglob)
	   * @param {string} file - Pathname of file to be loaded.
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.addFile=function(e){return this.files.push(e),this},
/**
	   * Sets reporter to `reporter`, defaults to "spec".
	   *
	   * @public
	   * @see [CLI option](../#-reporter-name-r-name)
	   * @see [Reporters](../#reporters)
	   * @param {String|Function} reporterName - Reporter name or constructor.
	   * @param {Object} [reporterOptions] - Options used to configure the reporter.
	   * @returns {Mocha} this
	   * @chainable
	   * @throws {Error} if requested reporter cannot be loaded
	   * @example
	   *
	   * // Use XUnit reporter and direct its output to file
	   * mocha.reporter('xunit', { output: '/path/to/testspec.xunit.xml' });
	   */
m.prototype.reporter=function(e,t){if("function"==typeof e)this._reporter=e;else{var r;// Try to load a built-in reporter.
// Try to load reporters from process.cwd() and node_modules
if(mg[e=e||"spec"]&&(r=mg[e]),!r)try{r=o()}catch(t){if("MODULE_NOT_FOUND"===t.code||t.message.indexOf("Cannot find module")>=0)
// Try to load reporters from a path (absolute or relative)
try{r=o(Cp.resolve(Yh.cwd(),e))}catch(r){"MODULE_NOT_FOUND"===r.code||r.message.indexOf("Cannot find module")>=0?Yh.warn(p(e)+" reporter not found"):Yh.warn(p(e)+" reporter blew up with error:\n"+t.stack)}else Yh.warn(p(e)+" reporter blew up with error:\n"+t.stack)}if(!r)throw i("invalid reporter "+p(e),e);this._reporter=r}return this.options.reporterOption=t,// alias option name is used in public reporters xunit/tap/progress
this.options.reporterOptions=t,this},
/**
	   * Sets test UI `name`, defaults to "bdd".
	   *
	   * @public
	   * @see [CLI option](../#-ui-name-u-name)
	   * @see [Interface DSLs](../#interfaces)
	   * @param {string|Function} [ui=bdd] - Interface name or class.
	   * @returns {Mocha} this
	   * @chainable
	   * @throws {Error} if requested interface cannot be loaded
	   */
m.prototype.ui=function(e){var t;if("function"==typeof e)t=e;else if(e=e||"bdd",!(t=r.interfaces[e]))try{t=o()}catch(t){throw a("invalid interface "+p(e),e)}return t(this.suite),this.suite.on(c,(function(e){r.afterEach=e.afterEach||e.teardown,r.after=e.after||e.suiteTeardown,r.beforeEach=e.beforeEach||e.setup,r.before=e.before||e.suiteSetup,r.describe=e.describe||e.suite,r.it=e.it||e.test,r.xit=e.xit||e.test&&e.test.skip,r.setup=e.setup||e.beforeEach,r.suiteSetup=e.suiteSetup||e.before,r.suiteTeardown=e.suiteTeardown||e.after,r.suite=e.suite||e.describe,r.teardown=e.teardown||e.afterEach,r.test=e.test||e.it,r.run=e.run})),this},
/**
	   * Loads `files` prior to execution. Does not support ES Modules.
	   *
	   * @description
	   * The implementation relies on Node's `require` to execute
	   * the test interface functions and will be subject to its cache.
	   * Supports only CommonJS modules. To load ES modules, use Mocha#loadFilesAsync.
	   *
	   * @private
	   * @see {@link Mocha#addFile}
	   * @see {@link Mocha#run}
	   * @see {@link Mocha#unloadFiles}
	   * @see {@link Mocha#loadFilesAsync}
	   * @param {Function} [fn] - Callback invoked upon completion.
	   */
m.prototype.loadFiles=function(t){var r=this,n=this.suite;this.files.forEach((function(t){t=Cp.resolve(t),n.emit(c,e,t,r),n.emit(f,o(),t,r),n.emit(l,e,t,r)})),t&&t()},
/**
	   * Loads `files` prior to execution. Supports Node ES Modules.
	   *
	   * @description
	   * The implementation relies on Node's `require` and `import` to execute
	   * the test interface functions and will be subject to its cache.
	   * Supports both CJS and ESM modules.
	   *
	   * @public
	   * @see {@link Mocha#addFile}
	   * @see {@link Mocha#run}
	   * @see {@link Mocha#unloadFiles}
	   * @returns {Promise}
	   * @example
	   *
	   * // loads ESM (and CJS) test files asynchronously, then runs root suite
	   * mocha.loadFilesAsync()
	   *   .then(() => mocha.run(failures => process.exitCode = failures ? 1 : 0))
	   *   .catch(() => process.exitCode = 1);
	   */
m.prototype.loadFilesAsync=function(){var t=this,r=this.suite;return this.lazyLoadFiles(1),n?n.loadFilesAsync(this.files,(function(n){r.emit(c,e,n,t)}),(function(n,o){r.emit(f,o,n,t),r.emit(l,e,n,t)})):new Promise((function(e){t.loadFiles(e)}))},
/**
	   * Removes a previously loaded file from Node's `require` cache.
	   *
	   * @private
	   * @static
	   * @see {@link Mocha#unloadFiles}
	   * @param {string} file - Pathname of file to be unloaded.
	   */
m.unloadFile=function(e){delete o.cache[o.resolve(e)]},
/**
	   * Unloads `files` from Node's `require` cache.
	   *
	   * @description
	   * This allows required files to be "freshly" reloaded, providing the ability
	   * to reuse a Mocha instance programmatically.
	   * Note: does not clear ESM module files from the cache
	   *
	   * <strong>Intended for consumers &mdash; not used internally</strong>
	   *
	   * @public
	   * @see {@link Mocha#run}
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.unloadFiles=function(){if(this._state===d.DISPOSED)throw s("Mocha instance is already disposed, it cannot be used again.",this._cleanReferencesAfterRun,this);return this.files.forEach((function(e){m.unloadFile(e)})),this._state=d.INIT,this},
/**
	   * Sets `grep` filter after escaping RegExp special characters.
	   *
	   * @public
	   * @see {@link Mocha#grep}
	   * @param {string} str - Value to be converted to a regexp.
	   * @returns {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Select tests whose full title begins with `"foo"` followed by a period
	   * mocha.fgrep('foo.');
	   */
m.prototype.fgrep=function(e){return e?this.grep(new RegExp(Ap(e))):this},
/**
	   * @summary
	   * Sets `grep` filter used to select specific tests for execution.
	   *
	   * @description
	   * If `re` is a regexp-like string, it will be converted to regexp.
	   * The regexp is tested against the full title of each test (i.e., the
	   * name of the test preceded by titles of each its ancestral suites).
	   * As such, using an <em>exact-match</em> fixed pattern against the
	   * test name itself will not yield any matches.
	   * <br>
	   * <strong>Previous filter value will be overwritten on each call!</strong>
	   *
	   * @public
	   * @see [CLI option](../#-grep-regexp-g-regexp)
	   * @see {@link Mocha#fgrep}
	   * @see {@link Mocha#invert}
	   * @param {RegExp|String} re - Regular expression used to select tests.
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Select tests whose full title contains `"match"`, ignoring case
	   * mocha.grep(/match/i);
	   * @example
	   *
	   * // Same as above but with regexp-like string argument
	   * mocha.grep('/match/i');
	   * @example
	   *
	   * // ## Anti-example
	   * // Given embedded test `it('only-this-test')`...
	   * mocha.grep('/^only-this-test$/');    // NO! Use `.only()` to do this!
	   */
m.prototype.grep=function(e){if(Yh.isString(e)){
// extract args if it's regex-like, i.e: [string, pattern, flag]
var t=e.match(/^\/(.*)\/(g|i|)$|.*/);this.options.grep=new RegExp(t[1]||t[0],t[2])}else this.options.grep=e;return this},
/**
	   * Inverts `grep` matches.
	   *
	   * @public
	   * @see {@link Mocha#grep}
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Select tests whose full title does *not* contain `"match"`, ignoring case
	   * mocha.grep(/match/i).invert();
	   */
m.prototype.invert=function(){return this.options.invert=1,this},
/**
	   * Enables or disables checking for global variables leaked while running tests.
	   *
	   * @public
	   * @see [CLI option](../#-check-leaks)
	   * @param {boolean} [checkLeaks=true] - Whether to check for global variable leaks.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.checkLeaks=function(e){return this.options.checkLeaks=0!=e,this},
/**
	   * Enables or disables whether or not to dispose after each test run.
	   * Disable this to ensure you can run the test suite multiple times.
	   * If disabled, be sure to dispose mocha when you're done to prevent memory leaks.
	   * @public
	   * @see {@link Mocha#dispose}
	   * @param {boolean} cleanReferencesAfterRun
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.cleanReferencesAfterRun=function(e){return this._cleanReferencesAfterRun=0!=e,this},
/**
	   * Manually dispose this mocha instance. Mark this instance as `disposed` and unable to run more tests.
	   * It also removes function references to tests functions and hooks, so variables trapped in closures can be cleaned by the garbage collector.
	   * @public
	   */
m.prototype.dispose=function(){if(this._state===d.RUNNING)throw u("Cannot dispose while the mocha instance is still running tests.");this.unloadFiles(),this._previousRunner&&this._previousRunner.dispose(),this.suite.dispose(),this._state=d.DISPOSED},
/**
	   * Displays full stack trace upon test failure.
	   *
	   * @public
	   * @see [CLI option](../#-full-trace)
	   * @param {boolean} [fullTrace=true] - Whether to print full stacktrace upon failure.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.fullTrace=function(e){return this.options.fullTrace=0!=e,this},
/**
	   * Enables desktop notification support if prerequisite software installed.
	   *
	   * @public
	   * @see [CLI option](../#-growl-g)
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.growl=function(){if(this.options.growl=this.isGrowlCapable(),!this.options.growl){var e=Yh.isBrowser()?"notification support not available in this browser...":"notification support prerequisites not installed...";console.error(e+" cannot enable!")}return this},
/**
	   * @summary
	   * Determines if Growl support seems likely.
	   *
	   * @description
	   * <strong>Not available when run in browser.</strong>
	   *
	   * @private
	   * @see {@link Growl#isCapable}
	   * @see {@link Mocha#growl}
	   * @return {boolean} whether Growl support can be expected
	   */
m.prototype.isGrowlCapable=_g,
/**
	   * Implements desktop notifications using a pseudo-reporter.
	   *
	   * @private
	   * @see {@link Mocha#growl}
	   * @see {@link Growl#notify}
	   * @param {Runner} runner - Runner instance.
	   */
m.prototype._growl=Ng,
/**
	   * Specifies whitelist of variable names to be expected in global scope.
	   *
	   * @public
	   * @see [CLI option](../#-global-variable-name)
	   * @see {@link Mocha#checkLeaks}
	   * @param {String[]|String} global - Accepted global variable name(s).
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Specify variables to be expected in global scope
	   * mocha.global(['jQuery', 'MyLib']);
	   */
m.prototype.global=function(e){return this.options.global=(this.options.global||[]).concat(e).filter(Boolean).filter((function(e,t,r){return r.indexOf(e)===t})),this},// for backwards compability, 'globals' is an alias of 'global'
m.prototype.globals=m.prototype.global,
/**
	   * Enables or disables TTY color output by screen-oriented reporters.
	   *
	   * @public
	   * @see [CLI option](../#-color-c-colors)
	   * @param {boolean} [color=true] - Whether to enable color output.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.color=function(e){return this.options.color=0!=e,this},
/**
	   * Enables or disables reporter to use inline diffs (rather than +/-)
	   * in test failure output.
	   *
	   * @public
	   * @see [CLI option](../#-inline-diffs)
	   * @param {boolean} [inlineDiffs=true] - Whether to use inline diffs.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.inlineDiffs=function(e){return this.options.inlineDiffs=0!=e,this},
/**
	   * Enables or disables reporter to include diff in test failure output.
	   *
	   * @public
	   * @see [CLI option](../#-diff)
	   * @param {boolean} [diff=true] - Whether to show diff on failure.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.diff=function(e){return this.options.diff=0!=e,this},
/**
	   * @summary
	   * Sets timeout threshold value.
	   *
	   * @description
	   * A string argument can use shorthand (such as "2s") and will be converted.
	   * If the value is `0`, timeouts will be disabled.
	   *
	   * @public
	   * @see [CLI option](../#-timeout-ms-t-ms)
	   * @see [Timeouts](../#timeouts)
	   * @param {number|string} msecs - Timeout threshold value.
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Sets timeout to one second
	   * mocha.timeout(1000);
	   * @example
	   *
	   * // Same as above but using string argument
	   * mocha.timeout('1s');
	   */
m.prototype.timeout=function(e){return this.suite.timeout(e),this},
/**
	   * Sets the number of times to retry failed tests.
	   *
	   * @public
	   * @see [CLI option](../#-retries-n)
	   * @see [Retry Tests](../#retry-tests)
	   * @param {number} retry - Number of times to retry failed tests.
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Allow any failed test to retry one more time
	   * mocha.retries(1);
	   */
m.prototype.retries=function(e){return this.suite.retries(e),this},
/**
	   * Sets slowness threshold value.
	   *
	   * @public
	   * @see [CLI option](../#-slow-ms-s-ms)
	   * @param {number} msecs - Slowness threshold value.
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Sets "slow" threshold to half a second
	   * mocha.slow(500);
	   * @example
	   *
	   * // Same as above but using string argument
	   * mocha.slow('0.5s');
	   */
m.prototype.slow=function(e){return this.suite.slow(e),this},
/**
	   * Forces all tests to either accept a `done` callback or return a promise.
	   *
	   * @public
	   * @see [CLI option](../#-async-only-a)
	   * @param {boolean} [asyncOnly=true] - Wether to force `done` callback or promise.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.asyncOnly=function(e){return this.options.asyncOnly=0!=e,this},
/**
	   * Disables syntax highlighting (in browser).
	   *
	   * @public
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.noHighlighting=function(){return this.options.noHighlighting=1,this},
/**
	   * Enables or disables uncaught errors to propagate.
	   *
	   * @public
	   * @see [CLI option](../#-allow-uncaught)
	   * @param {boolean} [allowUncaught=true] - Whether to propagate uncaught errors.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.allowUncaught=function(e){return this.options.allowUncaught=0!=e,this},
/**
	   * @summary
	   * Delays root suite execution.
	   *
	   * @description
	   * Used to perform asynch operations before any suites are run.
	   *
	   * @public
	   * @see [delayed root suite](../#delayed-root-suite)
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.delay=function(){return this.options.delay=1,this},
/**
	   * Causes tests marked `only` to fail the suite.
	   *
	   * @public
	   * @see [CLI option](../#-forbid-only)
	   * @param {boolean} [forbidOnly=true] - Whether tests marked `only` fail the suite.
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.forbidOnly=function(e){return this.options.forbidOnly=0!=e,this},
/**
	   * Causes pending tests and tests marked `skip` to fail the suite.
	   *
	   * @public
	   * @see [CLI option](../#-forbid-pending)
	   * @param {boolean} [forbidPending=true] - Whether pending tests fail the suite.
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.forbidPending=function(e){return this.options.forbidPending=0!=e,this},
/**
	   * Throws an error if mocha is in the wrong state to be able to transition to a "running" state.
	   * @private
	   */
m.prototype._guardRunningStateTransition=function(){if(this._state===d.RUNNING)throw u("Mocha instance is currently running tests, cannot start a next test run until this one is done",this);if(this._state===d.DISPOSED||this._state===d.REFERENCES_CLEANED)throw s("Mocha instance is already disposed, cannot start a new test run. Please create a new mocha instance. Be sure to set disable `cleanReferencesAfterRun` when you want to reuse the same mocha instance for multiple test runs.",this._cleanReferencesAfterRun,this)},
/**
	   * Mocha version as specified by "package.json".
	   *
	   * @name Mocha#version
	   * @type string
	   * @readonly
	   */
Object.defineProperty(m.prototype,"version",{value:bg.version,configurable:0,enumerable:1,writable:0}),
/**
	   * Callback to be invoked when test execution is complete.
	   *
	   * @private
	   * @callback DoneCB
	   * @param {number} failures - Number of failures that occurred.
	   */
/**
	   * Runs root suite and invokes `fn()` when complete.
	   *
	   * @description
	   * To run tests multiple times (or to run tests in files that are
	   * already in the `require` cache), make sure to clear them from
	   * the cache first!
	   *
	   * @public
	   * @see {@link Mocha#unloadFiles}
	   * @see {@link Runner#run}
	   * @param {DoneCB} [fn] - Callback invoked when test execution completed.
	   * @returns {Runner} runner instance
	   * @example
	   *
	   * // exit with non-zero status if there were test failures
	   * mocha.run(failures => process.exitCode = failures ? 1 : 0);
	   */
m.prototype.run=function(e){this._guardRunningStateTransition(),this._state=d.RUNNING,this._previousRunner&&(this._previousRunner.dispose(),this.suite.reset()),this.files.length&&!this._lazyLoadFiles&&this.loadFiles();var t=this,n=this.suite,o=this.options;o.files=this.files;var i=new this._runnerClass(n,{delay:o.delay,cleanReferencesAfterRun:this._cleanReferencesAfterRun});Ug(i);var a=new this._reporter(i,o);return i.checkLeaks=1==o.checkLeaks,i.fullStackTrace=o.fullTrace,i.asyncOnly=o.asyncOnly,i.allowUncaught=o.allowUncaught,i.forbidOnly=o.forbidOnly,i.forbidPending=o.forbidPending,o.grep&&i.grep(o.grep,o.invert),o.global&&i.globals(o.global),o.growl&&this._growl(i),void 0!==o.color&&(r.reporters.Base.useColors=o.color),r.reporters.Base.inlineDiffs=o.inlineDiffs,r.reporters.Base.hideDiff=!o.diff,i.run((function(r){t._previousRunner=i,t._cleanReferencesAfterRun?t._state=d.REFERENCES_CLEANED:t._state=d.INIT,e=e||Yh.noop,a.done?a.done(r,e):e(r)}),{files:this.files,options:o})},
/**
	   * Assigns hooks to the root suite
	   * @param {MochaRootHookObject} [hooks] - Hooks to assign to root suite
	   * @chainable
	   */
m.prototype.rootHooks=function(e){if("object"===Yh.type(e)){var t=[].concat(e.beforeAll||[]),r=[].concat(e.beforeEach||[]),n=[].concat(e.afterAll||[]),o=[].concat(e.afterEach||[]),i=this.suite;t.forEach((function(e){i.beforeAll(e)})),r.forEach((function(e){i.beforeEach(e)})),n.forEach((function(e){i.afterAll(e)})),o.forEach((function(e){i.afterEach(e)}))}return this},
/**
	   * Toggles parallel mode.
	   *
	   * Must be run before calling {@link Mocha#run}. Changes the `Runner` class to
	   * use; also enables lazy file loading if not already done so.
	   * @param {boolean} [enable] - If `true`, enable; otherwise disable.
	   * @throws If run in browser
	   * @throws If Mocha not in "INIT" state
	   * @returns {Mocha}
	   * @chainable
	   * @public
	   */
m.prototype.parallelMode=function(e){if(Yh.isBrowser())throw rd.createUnsupportedError("parallel mode is only supported in Node.js");var t=1==e;if(t===this.options.parallel&&this._lazyLoadFiles&&this._runnerClass!==r.Runner)return this;if(this._state!==d.INIT)throw rd.createUnsupportedError("cannot change parallel mode after having called run()");// lazyLoadFiles may have been set `true` otherwise (for ESM loading),
// so keep `true` if so.
return this.options.parallel=t,// swap Runner class
this._runnerClass=t?Yd:r.Runner,this.lazyLoadFiles(this._lazyLoadFiles||t)},
/**
	   * Disables implicit call to {@link Mocha#loadFiles} in {@link Mocha#run}. This
	   * setting is used by watch mode, parallel mode, and for loading ESM files.
	   * @todo This should throw if we've already loaded files; such behavior
	   * necessitates adding a new state.
	   * @param {boolean} [enable] - If `true`, disable eager loading of files in
	   * {@link Mocha#run}
	   * @chainable
	   * @public
	   */
m.prototype.lazyLoadFiles=function(e){return this._lazyLoadFiles=1==e,h("set lazy load to %s",e),this}}));
/* eslint no-unused-vars: off */
/* eslint-env commonjs */
/**
	 * Shim process.stdout.
	 */
Dr.stdout=ef({label:0});
/**
	 * Create a Mocha instance.
	 *
	 * @return {undefined}
	 */
var sm=new am({reporter:"html"}),um=e.Date,cm=e.setTimeout,lm=[],fm=e.onerror;
/**
	 * Save timer references to avoid Sinon interfering (see GH-237).
	 */
/**
	 * Remove uncaughtException listener.
	 * Revert to original onerror handler if previously defined.
	 */
Dr.removeListener=function(t,r){if("uncaughtException"===t){e.onerror=fm||function(){};var n=lm.indexOf(r);-1!==n&&lm.splice(n,1)}},
/**
	 * Implements listenerCount for 'uncaughtException'.
	 */
Dr.listenerCount=function(e){return"uncaughtException"===e?lm.length:0},
/**
	 * Implements uncaughtException listener.
	 */
Dr.on=function(t,r){"uncaughtException"===t&&(e.onerror=function(e,t,n){return r(new Error(e+" ("+t+":"+n+")")),!sm.options.allowUncaught},lm.push(r))},Dr.listeners=function(e){return"uncaughtException"===e?lm:[]},// The BDD UI is registered by default, but no UI will be functional in the
// browser without an explicit call to the overridden `mocha.ui` (see below).
// Ensure that this default UI does not expose its methods to the global scope.
sm.suite.removeAllListeners("pre-require");var pm,hm=[];function dm(){for(var e=(new um).getTime();hm.length&&(new um).getTime()-e<100;)hm.shift()();pm=hm.length?cm(dm,0):null}
/**
	 * High-performance override of Runner.immediately.
	 */return am.Runner.immediately=function(e){hm.push(e),pm||(pm=cm(dm,0))},
/**
	 * Function to allow assertion libraries to throw errors directly into mocha.
	 * This is useful when running tests in a browser because window.onerror will
	 * only receive the 'message' attribute of the Error.
	 */
sm.throwError=function(e){throw lm.forEach((function(t){t(e)})),e},
/**
	 * Override ui to ensure that the ui functions are initialized.
	 * Normally this would happen in Mocha.prototype.loadFiles.
	 */
sm.ui=function(t){return am.prototype.ui.call(this,t),this.suite.emit("pre-require",e,null,this),this},
/**
	 * Setup mocha with the given setting options.
	 */
sm.setup=function(e){"string"==typeof e&&(e={ui:e}),1==e.delay&&this.delay();var t=this;return Object.keys(e).filter((function(e){return"delay"!==e})).forEach((function(r){Object.prototype.hasOwnProperty.call(e,r)&&t[r](e[r])})),this},
/**
	 * Run mocha, returning the Runner.
	 */
sm.run=function(t){var r=sm.options;sm.globals("location");var n=(e.location.search||"").replace("?","").split("&").reduce((function(e,t){var r=t.indexOf("="),n=t.slice(0,r),o=t.slice(++r);// Due to how the URLSearchParams API treats spaces
return e[n]=decodeURIComponent(o.replace(/\+/g,"%20")),e}),{});return n.grep&&sm.grep(n.grep),n.fgrep&&sm.fgrep(n.fgrep),n.invert&&sm.invert(),am.prototype.run.call(sm,(function(n){
// The DOM Document is not available in Web Workers.
var o=e.document;o&&o.getElementById("mocha")&&1!=r.noHighlighting&&af("code"),t&&t(n)}))},
/**
	 * Expose the process shim.
	 * https://github.com/mochajs/mocha/pull/916
	 */
am.process=Dr,
/**
	 * Expose mocha.
	 */
sm.Mocha=am,sm.mocha=sm,Object.assign(sm,e)},e.exports=r()}).call(this,r(9))
/***/},
/* 95 */
/***/function(e,t,r){"use strict";r.r(t);
/* harmony import */var n=r(60);
/* harmony import */const o=r.n(n).a.expect;describe("テストMain",()=>{it("same to be not same at encrypted",async()=>{o("Nya-n").to.not.equal("まーお")})})},
/* 96 */
/***/function(e,t,r){
/*!
 * chai
 * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/*!
 * Dependencies that are used for multiple exports are required here only once
 */
var n=r(97);
/*!
 * test utility
 */t.test=r(98),
/*!
 * type utility
 */
t.type=r(35),
/*!
 * expectTypes utility
 */
t.expectTypes=r(99),
/*!
 * message utility
 */
t.getMessage=r(100),
/*!
 * actual utility
 */
t.getActual=r(51),
/*!
 * Inspect util
 */
t.inspect=r(36),
/*!
 * Object Display util
 */
t.objDisplay=r(52),
/*!
 * Flag utility
 */
t.flag=r(5),
/*!
 * Flag transferring utility
 */
t.transferFlags=r(12),
/*!
 * Deep equal utility
 */
t.eql=r(102),
/*!
 * Deep path info
 */
t.getPathInfo=n.getPathInfo,
/*!
 * Check if a property exists
 */
t.hasProperty=n.hasProperty,
/*!
 * Function name
 */
t.getName=r(53),
/*!
 * add Property
 */
t.addProperty=r(103),
/*!
 * add Method
 */
t.addMethod=r(104),
/*!
 * overwrite Property
 */
t.overwriteProperty=r(105),
/*!
 * overwrite Method
 */
t.overwriteMethod=r(106),
/*!
 * Add a chainable method
 */
t.addChainableMethod=r(107),
/*!
 * Overwrite chainable method
 */
t.overwriteChainableMethod=r(108),
/*!
 * Compare by inspect method
 */
t.compareByInspect=r(109),
/*!
 * Get own enumerable property symbols method
 */
t.getOwnEnumerablePropertySymbols=r(55),
/*!
 * Get own enumerable properties method
 */
t.getOwnEnumerableProperties=r(110),
/*!
 * Checks error against a given set of criteria
 */
t.checkError=r(111),
/*!
 * Proxify util
 */
t.proxify=r(25),
/*!
 * addLengthGuard util
 */
t.addLengthGuard=r(24),
/*!
 * isProxyEnabled helper
 */
t.isProxyEnabled=r(23),
/*!
 * isNaN method
 */
t.isNaN=r(112)},
/* 97 */
/***/function(e,t,r){"use strict";
/* !
 * Chai - pathval utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * @see https://github.com/logicalparadox/filtr
 * MIT Licensed
 */
/**
 * ### .hasProperty(object, name)
 *
 * This allows checking whether an object has own
 * or inherited from prototype chain named property.
 *
 * Basically does the same thing as the `in`
 * operator but works properly with null/undefined values
 * and other primitives.
 *
 *     var obj = {
 *         arr: ['a', 'b', 'c']
 *       , str: 'Hello'
 *     }
 *
 * The following would be the results.
 *
 *     hasProperty(obj, 'str');  // true
 *     hasProperty(obj, 'constructor');  // true
 *     hasProperty(obj, 'bar');  // false
 *
 *     hasProperty(obj.str, 'length'); // true
 *     hasProperty(obj.str, 1);  // true
 *     hasProperty(obj.str, 5);  // false
 *
 *     hasProperty(obj.arr, 'length');  // true
 *     hasProperty(obj.arr, 2);  // true
 *     hasProperty(obj.arr, 3);  // false
 *
 * @param {Object} object
 * @param {String|Symbol} name
 * @returns {Boolean} whether it exists
 * @namespace Utils
 * @name hasProperty
 * @api public
 */function n(e,t){return null==e?0:t in Object(e);// The `in` operator does not work with primitives.
}
/* !
 * ## parsePath(path)
 *
 * Helper function used to parse string object
 * paths. Use in conjunction with `internalGetPathValue`.
 *
 *      var parsed = parsePath('myobject.property.subprop');
 *
 * ### Paths:
 *
 * * Can be infinitely deep and nested.
 * * Arrays are also valid using the formal `myobject.document[3].property`.
 * * Literal dots and brackets (not delimiter) must be backslash-escaped.
 *
 * @param {String} path
 * @returns {Object} parsed
 * @api private
 */function o(e){return e.replace(/([^\\])\[/g,"$1.[").match(/(\\\.|[^.]+?)+/g).map((function(e){var t=/^\[(\d+)\]$/.exec(e);return t?{i:parseFloat(t[1])}:{p:e.replace(/\\([.\[\]])/g,"$1")}}))}
/* !
 * ## internalGetPathValue(obj, parsed[, pathDepth])
 *
 * Helper companion function for `.parsePath` that returns
 * the value located at the parsed address.
 *
 *      var value = getPathValue(obj, parsed);
 *
 * @param {Object} object to search against
 * @param {Object} parsed definition from `parsePath`.
 * @param {Number} depth (nesting level) of the property we want to retrieve
 * @returns {Object|Undefined} value
 * @api private
 */function i(e,t,r){var n=e,o=null;r=void 0===r?t.length:r;for(var i=0;i<r;i++){var a=t[i];n&&(n=void 0===a.p?n[a.i]:n[a.p],i===r-1&&(o=n))}return o}
/* !
 * ## internalSetPathValue(obj, value, parsed)
 *
 * Companion function for `parsePath` that sets
 * the value located at a parsed address.
 *
 *  internalSetPathValue(obj, 'value', parsed);
 *
 * @param {Object} object to search and define on
 * @param {*} value to use upon set
 * @param {Object} parsed definition from `parsePath`
 * @api private
 */
/**
 * ### .getPathInfo(object, path)
 *
 * This allows the retrieval of property info in an
 * object given a string path.
 *
 * The path info consists of an object with the
 * following properties:
 *
 * * parent - The parent object of the property referenced by `path`
 * * name - The name of the final property, a number if it was an array indexer
 * * value - The value of the property, if it exists, otherwise `undefined`
 * * exists - Whether the property exists or not
 *
 * @param {Object} object
 * @param {String} path
 * @returns {Object} info
 * @namespace Utils
 * @name getPathInfo
 * @api public
 */
function a(e,t){var r=o(t),a=r[r.length-1],s={parent:r.length>1?i(e,r,r.length-1):e,name:a.p||a.i,value:i(e,r)};return s.exists=n(s.parent,s.name),s}
/**
 * ### .getPathValue(object, path)
 *
 * This allows the retrieval of values in an
 * object given a string path.
 *
 *     var obj = {
 *         prop1: {
 *             arr: ['a', 'b', 'c']
 *           , str: 'Hello'
 *         }
 *       , prop2: {
 *             arr: [ { nested: 'Universe' } ]
 *           , str: 'Hello again!'
 *         }
 *     }
 *
 * The following would be the results.
 *
 *     getPathValue(obj, 'prop1.str'); // Hello
 *     getPathValue(obj, 'prop1.att[2]'); // b
 *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe
 *
 * @param {Object} object
 * @param {String} path
 * @returns {Object} value or `undefined`
 * @namespace Utils
 * @name getPathValue
 * @api public
 */e.exports={hasProperty:n,getPathInfo:a,getPathValue:function(e,t){return a(e,t).value}
/**
 * ### .setPathValue(object, path, value)
 *
 * Define the value in an object at a given string path.
 *
 * ```js
 * var obj = {
 *     prop1: {
 *         arr: ['a', 'b', 'c']
 *       , str: 'Hello'
 *     }
 *   , prop2: {
 *         arr: [ { nested: 'Universe' } ]
 *       , str: 'Hello again!'
 *     }
 * };
 * ```
 *
 * The following would be acceptable.
 *
 * ```js
 * var properties = require('tea-properties');
 * properties.set(obj, 'prop1.str', 'Hello Universe!');
 * properties.set(obj, 'prop1.arr[2]', 'B');
 * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });
 * ```
 *
 * @param {Object} object
 * @param {String} path
 * @param {Mixed} value
 * @api private
 */,setPathValue:function(e,t,r){return function(e,t,r){// Here we iterate through every part of the path
for(var n=e,o=r.length,i=null,a=0;a<o;a++){var s=null,u=null;// If it's the last part of the path, we set the 'propName' value with the property name
if(i=r[a],a===o-1)// Now we set the property with the name held by 'propName' on object with the desired val
n[s=void 0===i.p?i.i:i.p]=t;else if(void 0!==i.p&&n[i.p])n=n[i.p];else if(void 0!==i.i&&n[i.i])n=n[i.i];else{
// If the obj doesn't have the property we create one with that name to define it
var c=r[a+1];// Here we set the name of the property which will be defined
s=void 0===i.p?i.i:i.p,// Here we decide if this property will be an array or a new object
u=void 0===c.p?[]:{},n[s]=u,n=n[s]}}}(e,r,o(t)),e}}},
/* 98 */
/***/function(e,t,r){
/*!
 * Chai - test utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/*!
 * Module dependencies
 */
var n=r(5);
/**
 * ### .test(object, expression)
 *
 * Test and object for expression.
 *
 * @param {Object} object (constructed Assertion)
 * @param {Arguments} chai.Assertion.prototype.assert arguments
 * @namespace Utils
 * @name test
 */e.exports=function(e,t){var r=n(e,"negate"),o=t[0];return r?!o:o}},
/* 99 */
/***/function(e,t,r){
/*!
 * Chai - expectTypes utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .expectTypes(obj, types)
 *
 * Ensures that the object being tested against is of a valid type.
 *
 *     utils.expectTypes(this, ['array', 'object', 'string']);
 *
 * @param {Mixed} obj constructed Assertion
 * @param {Array} type A list of allowed types for this assertion
 * @namespace Utils
 * @name expectTypes
 * @api public
 */
var n=r(50),o=r(5),i=r(35);e.exports=function(e,t){var r=o(e,"message"),a=o(e,"ssfi");r=r?r+": ":"",e=o(e,"object"),(t=t.map((function(e){return e.toLowerCase()}))).sort();// Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'
var s=t.map((function(e,r){var n=~["a","e","i","o","u"].indexOf(e.charAt(0))?"an":"a";return(t.length>1&&r===t.length-1?"or ":"")+n+" "+e})).join(", "),u=i(e).toLowerCase();if(!t.some((function(e){return u===e})))throw new n(r+"object tested must be "+s+", but "+u+" given",void 0,a)}},
/* 100 */
/***/function(e,t,r){
/*!
 * Chai - message composition utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/*!
 * Module dependencies
 */
var n=r(5),o=r(51),i=r(52);
/**
 * ### .getMessage(object, message, negateMessage)
 *
 * Construct the error message based on flags
 * and template tags. Template tags will return
 * a stringified inspection of the object referenced.
 *
 * Message template tags:
 * - `#{this}` current asserted object
 * - `#{act}` actual value
 * - `#{exp}` expected value
 *
 * @param {Object} object (constructed Assertion)
 * @param {Arguments} chai.Assertion.prototype.assert arguments
 * @namespace Utils
 * @name getMessage
 * @api public
 */e.exports=function(e,t){var r=n(e,"negate"),a=n(e,"object"),s=t[3],u=o(e,t),c=r?t[2]:t[1],l=n(e,"message");return"function"==typeof c&&(c=c()),c=(c=c||"").replace(/#\{this\}/g,(function(){return i(a)})).replace(/#\{act\}/g,(function(){return i(u)})).replace(/#\{exp\}/g,(function(){return i(s)})),l?l+": "+c:c}},
/* 101 */
/***/function(e,t){
/*!
 * Chai - getEnumerableProperties utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .getEnumerableProperties(object)
 *
 * This allows the retrieval of enumerable property names of an object,
 * inherited or not.
 *
 * @param {Object} object
 * @returns {Array}
 * @namespace Utils
 * @name getEnumerableProperties
 * @api public
 */
e.exports=function(e){var t=[];for(var r in e)t.push(r);return t};
/***/},
/* 102 */
/***/function(e,t,r){"use strict";
/* globals Symbol: false, Uint8Array: false, WeakMap: false */
/*!
 * deep-eql
 * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */var n=r(35);function o(){this._key="chai/deep-eql__"+Math.random()+Date.now()}o.prototype={get:function(e){return e[this._key]},set:function(e,t){Object.isExtensible(e)&&Object.defineProperty(e,this._key,{value:t,configurable:1})}};var i="function"==typeof WeakMap?WeakMap:o;
/*!
 * Check to see if the MemoizeMap has recorded a result of the two operands
 *
 * @param {Mixed} leftHandOperand
 * @param {Mixed} rightHandOperand
 * @param {MemoizeMap} memoizeMap
 * @returns {Boolean|null} result
*/function a(e,t,r){
// Technically, WeakMap keys can *only* be objects, not primitives.
if(!r||m(e)||m(t))return null;var n=r.get(e);if(n){var o=n.get(t);if("boolean"==typeof o)return o}return null}
/*!
 * Set the result of the equality into the MemoizeMap
 *
 * @param {Mixed} leftHandOperand
 * @param {Mixed} rightHandOperand
 * @param {MemoizeMap} memoizeMap
 * @param {Boolean} result
*/function s(e,t,r,n){
// Technically, WeakMap keys can *only* be objects, not primitives.
if(r&&!m(e)&&!m(t)){var o=r.get(e);o?o.set(t,n):((o=new i).set(t,n),r.set(e,o))}}
/*!
 * Primary Export
 */
/**
 * Assert deeply nested sameValue equality between two objects of any type.
 *
 * @param {Mixed} leftHandOperand
 * @param {Mixed} rightHandOperand
 * @param {Object} [options] (optional) Additional options
 * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.
 * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of
    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular
    references to blow the stack.
 * @return {Boolean} equal match
 */
function u(e,t,r){
// If we have a comparator, we can't assume anything; so bail to its check first.
if(r&&r.comparator)return l(e,t,r);var n=c(e,t);return null!==n?n:l(e,t,r);// Deeper comparisons are pushed through to a larger function
}
/**
 * Many comparisons can be canceled out early via simple equality or primitive checks.
 * @param {Mixed} leftHandOperand
 * @param {Mixed} rightHandOperand
 * @return {Boolean|null} equal match
 */function c(e,t){
// Equal references (except for Numbers) can be returned early
return e===t?0!==e||1/e==1/t:// handle NaN cases
e!=e&&// eslint-disable-line no-self-compare
t!=t?1:// Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,
// strings, and undefined, can be compared by reference.
m(e)||m(t)?0:null}
/*!
 * The main logic of the `deepEqual` function.
 *
 * @param {Mixed} leftHandOperand
 * @param {Mixed} rightHandOperand
 * @param {Object} [options] (optional) Additional options
 * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.
 * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of
    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular
    references to blow the stack.
 * @return {Boolean} equal match
*/function l(e,t,r){(r=r||{}).memoize=0==r.memoize?0:r.memoize||new i;var o=r&&r.comparator,l=a(e,t,r.memoize);// Check if a memoized result exists.
if(null!==l)return l;var m=a(t,e,r.memoize);if(null!==m)return m;// If a comparator is present, use it.
if(o){var y=o(e,t);// Comparators may return null, in which case we want to go back to default behavior.
if(0==y||1==y)return s(e,t,r.memoize,y),y;// To allow comparators to override *any* behavior, we ran them first. Since it didn't decide
// what to do, we need to make sure to return the basic tests first before we move on.
var v=c(e,t);if(null!==v)
// Don't memoize this, it takes longer to set/retrieve than to just compare.
return v}var b=n(e);if(b!==n(t))return s(e,t,r.memoize,0),0;// Temporarily set the operands in the memoize object to prevent blowing the stack
s(e,t,r.memoize,1);var w=function(e,t,r,n){switch(r){case"String":case"Number":case"Boolean":case"Date":
// If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values
return u(e.valueOf(),t.valueOf());case"Promise":case"Symbol":case"function":case"WeakMap":case"WeakSet":case"Error":return e===t;case"Arguments":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"Array":return p(e,t,n);case"RegExp":
/*!
 * Compare two Regular Expressions for equality.
 *
 * @param {RegExp} leftHandOperand
 * @param {RegExp} rightHandOperand
 * @return {Boolean} result
 */
return function(e,t){return e.toString()===t.toString()}
/*!
 * Compare two Sets/Maps for equality. Faster than other equality functions.
 *
 * @param {Set} leftHandOperand
 * @param {Set} rightHandOperand
 * @param {Object} [options] (Optional)
 * @return {Boolean} result
 */(e,t);case"Generator":
/*!
 * Simple equality for generator objects such as those returned by generator functions.
 *
 * @param {Iterable} leftHandOperand
 * @param {Iterable} rightHandOperand
 * @param {Object} [options] (Optional)
 * @return {Boolean} result
 */
return function(e,t,r){return p(d(e),d(t),r)}
/*!
 * Determine if the given object has an @@iterator function.
 *
 * @param {Object} target
 * @return {Boolean} `true` if the object has an @@iterator function.
 */(e,t,n);case"DataView":return p(new Uint8Array(e.buffer),new Uint8Array(t.buffer),n);case"ArrayBuffer":return p(new Uint8Array(e),new Uint8Array(t),n);case"Set":case"Map":return f(e,t,n);default:
/*!
 * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`
 * for each enumerable key in the object.
 *
 * @param {Mixed} leftHandOperand
 * @param {Mixed} rightHandOperand
 * @param {Object} [options] (Optional)
 * @return {Boolean} result
 */
return function(e,t,r){var n=g(e),o=g(t);if(n.length&&n.length===o.length)return n.sort(),o.sort(),0==p(n,o)?0:
/*!
 * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of
 * each key. If any value of the given key is not equal, the function will return false (early).
 *
 * @param {Mixed} leftHandOperand
 * @param {Mixed} rightHandOperand
 * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against
 * @param {Object} [options] (Optional)
 * @return {Boolean} result
 */
function(e,t,r,n){var o=r.length;if(0===o)return 1;for(var i=0;i<o;i+=1)if(0==u(e[r[i]],t[r[i]],n))return 0;return 1}(e,t,n,r);var i=h(e),a=h(t);if(i.length&&i.length===a.length)return i.sort(),a.sort(),p(i,a,r);if(0===n.length&&0===i.length&&0===o.length&&0===a.length)return 1;return 0}
/*!
 * Returns true if the argument is a primitive.
 *
 * This intentionally returns true for all objects that can be compared by reference,
 * including functions and symbols.
 *
 * @param {Mixed} value
 * @return {Boolean} result
 */(e,t,n)}}(e,t,b,r);return s(e,t,r.memoize,w),w}function f(e,t,r){
// IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach
if(e.size!==t.size)return 0;if(0===e.size)return 1;var n=[],o=[];return e.forEach((function(e,t){n.push([e,t])})),t.forEach((function(e,t){o.push([e,t])})),p(n.sort(),o.sort(),r)}
/*!
 * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.
 *
 * @param {Iterable} leftHandOperand
 * @param {Iterable} rightHandOperand
 * @param {Object} [options] (Optional)
 * @return {Boolean} result
 */function p(e,t,r){var n=e.length;if(n!==t.length)return 0;if(0===n)return 1;for(var o=-1;++o<n;)if(0==u(e[o],t[o],r))return 0;return 1}
/*!
 * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.
 * This will consume the iterator - which could have side effects depending on the @@iterator implementation.
 *
 * @param {Object} target
 * @returns {Array} an array of entries from the @@iterator function
 */
function h(e){if(function(e){return"undefined"!=typeof Symbol&&"object"==typeof e&&void 0!==Symbol.iterator&&"function"==typeof e[Symbol.iterator]}(e))try{return d(e[Symbol.iterator]())}catch(e){return[]}return[]}
/*!
 * Gets all entries from a Generator. This will consume the generator - which could have side effects.
 *
 * @param {Generator} target
 * @returns {Array} an array of entries from the Generator.
 */function d(e){for(var t=e.next(),r=[t.value];0==t.done;)t=e.next(),r.push(t.value);return r}
/*!
 * Gets all own and inherited enumerable keys from a target.
 *
 * @param {Object} target
 * @returns {Array} an array of own and inherited enumerable keys from the target.
 */function g(e){var t=[];for(var r in e)t.push(r);return t}function m(e){return null===e||"object"!=typeof e}
/***/e.exports=u,e.exports.MemoizeMap=i},
/* 103 */
/***/function(e,t,r){
/*!
 * Chai - addProperty utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
var n=r(11),o=r(5),i=r(23),a=r(12);
/**
 * ### .addProperty(ctx, name, getter)
 *
 * Adds a property to the prototype of an object.
 *
 *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {
 *       var obj = utils.flag(this, 'object');
 *       new chai.Assertion(obj).to.be.instanceof(Foo);
 *     });
 *
 * Can also be accessed directly from `chai.Assertion`.
 *
 *     chai.Assertion.addProperty('foo', fn);
 *
 * Then can be used as any other assertion.
 *
 *     expect(myFoo).to.be.foo;
 *
 * @param {Object} ctx object to which the property is added
 * @param {String} name of property to add
 * @param {Function} getter function to be used for name
 * @namespace Utils
 * @name addProperty
 * @api public
 */
e.exports=function(e,t,r){r=void 0===r?function(){}:r,Object.defineProperty(e,t,{get:function e(){
// Setting the `ssfi` flag to `propertyGetter` causes this function to
// be the starting point for removing implementation frames from the
// stack trace of a failed assertion.
// However, we only want to use this function as the starting point if
// the `lockSsfi` flag isn't set and proxy protection is disabled.
// If the `lockSsfi` flag is set, then either this assertion has been
// overwritten by another assertion, or this assertion is being invoked
// from inside of another assertion. In the first case, the `ssfi` flag
// has already been set by the overwriting assertion. In the second
// case, the `ssfi` flag has already been set by the outer assertion.
// If proxy protection is enabled, then the `ssfi` flag has already been
// set by the proxy getter.
i()||o(this,"lockSsfi")||o(this,"ssfi",e);var t=r.call(this);if(void 0!==t)return t;var s=new n.Assertion;return a(this,s),s},configurable:1})}},
/* 104 */
/***/function(e,t,r){
/*!
 * Chai - addMethod utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
var n=r(24),o=r(11),i=r(5),a=r(25),s=r(12);
/**
 * ### .addMethod(ctx, name, method)
 *
 * Adds a method to the prototype of an object.
 *
 *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {
 *       var obj = utils.flag(this, 'object');
 *       new chai.Assertion(obj).to.be.equal(str);
 *     });
 *
 * Can also be accessed directly from `chai.Assertion`.
 *
 *     chai.Assertion.addMethod('foo', fn);
 *
 * Then can be used as any other assertion.
 *
 *     expect(fooStr).to.be.foo('bar');
 *
 * @param {Object} ctx object to which the method is added
 * @param {String} name of method to add
 * @param {Function} method function to be used for name
 * @namespace Utils
 * @name addMethod
 * @api public
 */
e.exports=function(e,t,r){var u=function(){
// Setting the `ssfi` flag to `methodWrapper` causes this function to be the
// starting point for removing implementation frames from the stack trace of
// a failed assertion.
// However, we only want to use this function as the starting point if the
// `lockSsfi` flag isn't set.
// If the `lockSsfi` flag is set, then either this assertion has been
// overwritten by another assertion, or this assertion is being invoked from
// inside of another assertion. In the first case, the `ssfi` flag has
// already been set by the overwriting assertion. In the second case, the
// `ssfi` flag has already been set by the outer assertion.
i(this,"lockSsfi")||i(this,"ssfi",u);var e=r.apply(this,arguments);if(void 0!==e)return e;var t=new o.Assertion;return s(this,t),t};n(u,t,0),e[t]=a(u,t)}},
/* 105 */
/***/function(e,t,r){
/*!
 * Chai - overwriteProperty utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
var n=r(11),o=r(5),i=r(23),a=r(12);
/**
 * ### .overwriteProperty(ctx, name, fn)
 *
 * Overwrites an already existing property getter and provides
 * access to previous value. Must return function to use as getter.
 *
 *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {
 *       return function () {
 *         var obj = utils.flag(this, 'object');
 *         if (obj instanceof Foo) {
 *           new chai.Assertion(obj.name).to.equal('bar');
 *         } else {
 *           _super.call(this);
 *         }
 *       }
 *     });
 *
 *
 * Can also be accessed directly from `chai.Assertion`.
 *
 *     chai.Assertion.overwriteProperty('foo', fn);
 *
 * Then can be used as any other assertion.
 *
 *     expect(myFoo).to.be.ok;
 *
 * @param {Object} ctx object whose property is to be overwritten
 * @param {String} name of property to overwrite
 * @param {Function} getter function that returns a getter function to be used for name
 * @namespace Utils
 * @name overwriteProperty
 * @api public
 */
e.exports=function(e,t,r){var s=Object.getOwnPropertyDescriptor(e,t),u=function(){};s&&"function"==typeof s.get&&(u=s.get),Object.defineProperty(e,t,{get:function e(){
// Setting the `ssfi` flag to `overwritingPropertyGetter` causes this
// function to be the starting point for removing implementation frames
// from the stack trace of a failed assertion.
// However, we only want to use this function as the starting point if
// the `lockSsfi` flag isn't set and proxy protection is disabled.
// If the `lockSsfi` flag is set, then either this assertion has been
// overwritten by another assertion, or this assertion is being invoked
// from inside of another assertion. In the first case, the `ssfi` flag
// has already been set by the overwriting assertion. In the second
// case, the `ssfi` flag has already been set by the outer assertion.
// If proxy protection is enabled, then the `ssfi` flag has already been
// set by the proxy getter.
i()||o(this,"lockSsfi")||o(this,"ssfi",e);// Setting the `lockSsfi` flag to `true` prevents the overwritten
// assertion from changing the `ssfi` flag. By this point, the `ssfi`
// flag is already set to the correct starting point for this assertion.
var t=o(this,"lockSsfi");o(this,"lockSsfi",1);var s=r(u).call(this);if(o(this,"lockSsfi",t),void 0!==s)return s;var c=new n.Assertion;return a(this,c),c},configurable:1})}},
/* 106 */
/***/function(e,t,r){
/*!
 * Chai - overwriteMethod utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
var n=r(24),o=r(11),i=r(5),a=r(25),s=r(12);
/**
 * ### .overwriteMethod(ctx, name, fn)
 *
 * Overwrites an already existing method and provides
 * access to previous function. Must return function
 * to be used for name.
 *
 *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {
 *       return function (str) {
 *         var obj = utils.flag(this, 'object');
 *         if (obj instanceof Foo) {
 *           new chai.Assertion(obj.value).to.equal(str);
 *         } else {
 *           _super.apply(this, arguments);
 *         }
 *       }
 *     });
 *
 * Can also be accessed directly from `chai.Assertion`.
 *
 *     chai.Assertion.overwriteMethod('foo', fn);
 *
 * Then can be used as any other assertion.
 *
 *     expect(myFoo).to.equal('bar');
 *
 * @param {Object} ctx object whose method is to be overwritten
 * @param {String} name of method to overwrite
 * @param {Function} method function that returns a function to be used for name
 * @namespace Utils
 * @name overwriteMethod
 * @api public
 */
e.exports=function(e,t,r){var u=e[t],c=function(){throw new Error(t+" is not a function")};u&&"function"==typeof u&&(c=u);var l=function(){
// Setting the `ssfi` flag to `overwritingMethodWrapper` causes this
// function to be the starting point for removing implementation frames from
// the stack trace of a failed assertion.
// However, we only want to use this function as the starting point if the
// `lockSsfi` flag isn't set.
// If the `lockSsfi` flag is set, then either this assertion has been
// overwritten by another assertion, or this assertion is being invoked from
// inside of another assertion. In the first case, the `ssfi` flag has
// already been set by the overwriting assertion. In the second case, the
// `ssfi` flag has already been set by the outer assertion.
i(this,"lockSsfi")||i(this,"ssfi",l);// Setting the `lockSsfi` flag to `true` prevents the overwritten assertion
// from changing the `ssfi` flag. By this point, the `ssfi` flag is already
// set to the correct starting point for this assertion.
var e=i(this,"lockSsfi");i(this,"lockSsfi",1);var t=r(c).apply(this,arguments);if(i(this,"lockSsfi",e),void 0!==t)return t;var n=new o.Assertion;return s(this,n),n};n(l,t,0),e[t]=a(l,t)}},
/* 107 */
/***/function(e,t,r){
/*!
 * Chai - addChainingMethod utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/*!
 * Module dependencies
 */
var n=r(24),o=r(11),i=r(5),a=r(25),s=r(12),u="function"==typeof Object.setPrototypeOf,c=function(){},l=Object.getOwnPropertyNames(c).filter((function(e){var t=Object.getOwnPropertyDescriptor(c,e);// Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,
// but then returns `undefined` as the property descriptor for `callee`. As a
// workaround, we perform an otherwise unnecessary type-check for `propDesc`,
// and then filter it out if it's not an object as it should be.
return"object"!=typeof t?1:!t.configurable})),f=Function.prototype.call,p=Function.prototype.apply;
/**
 * ### .addChainableMethod(ctx, name, method, chainingBehavior)
 *
 * Adds a method to an object, such that the method can also be chained.
 *
 *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {
 *       var obj = utils.flag(this, 'object');
 *       new chai.Assertion(obj).to.be.equal(str);
 *     });
 *
 * Can also be accessed directly from `chai.Assertion`.
 *
 *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);
 *
 * The result can then be used as both a method assertion, executing both `method` and
 * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.
 *
 *     expect(fooStr).to.be.foo('bar');
 *     expect(fooStr).to.be.foo.equal('foo');
 *
 * @param {Object} ctx object to which the method is added
 * @param {String} name of method to add
 * @param {Function} method function to be used for `name`, when called
 * @param {Function} chainingBehavior function to be called every time the property is accessed
 * @namespace Utils
 * @name addChainableMethod
 * @api public
 */
e.exports=function(e,t,r,c){"function"!=typeof c&&(c=function(){});var h={method:r,chainingBehavior:c};// save the methods so we can overwrite them later, if we need to.
e.__methods||(e.__methods={}),e.__methods[t]=h,Object.defineProperty(e,t,{get:function(){h.chainingBehavior.call(this);var r=function(){
// Setting the `ssfi` flag to `chainableMethodWrapper` causes this
// function to be the starting point for removing implementation
// frames from the stack trace of a failed assertion.
// However, we only want to use this function as the starting point if
// the `lockSsfi` flag isn't set.
// If the `lockSsfi` flag is set, then this assertion is being
// invoked from inside of another assertion. In this case, the `ssfi`
// flag has already been set by the outer assertion.
// Note that overwriting a chainable method merely replaces the saved
// methods in `ctx.__methods` instead of completely replacing the
// overwritten assertion. Therefore, an overwriting assertion won't
// set the `ssfi` or `lockSsfi` flags.
i(this,"lockSsfi")||i(this,"ssfi",r);var e=h.method.apply(this,arguments);if(void 0!==e)return e;var t=new o.Assertion;return s(this,t),t};// Use `Object.setPrototypeOf` if available
if(n(r,t,1),u){
// Inherit all properties from the object by replacing the `Function` prototype
var c=Object.create(this);// Restore the `call` and `apply` methods from `Function`
c.call=f,c.apply=p,Object.setPrototypeOf(r,c)}// Otherwise, redefine all properties (slow!)
else{Object.getOwnPropertyNames(e).forEach((function(t){if(-1===l.indexOf(t)){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n)}}))}return s(this,r),a(r)},configurable:1})}},
/* 108 */
/***/function(e,t,r){
/*!
 * Chai - overwriteChainableMethod utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
var n=r(11),o=r(12);
/**
 * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)
 *
 * Overwrites an already existing chainable method
 * and provides access to the previous function or
 * property.  Must return functions to be used for
 * name.
 *
 *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',
 *       function (_super) {
 *       }
 *     , function (_super) {
 *       }
 *     );
 *
 * Can also be accessed directly from `chai.Assertion`.
 *
 *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);
 *
 * Then can be used as any other assertion.
 *
 *     expect(myFoo).to.have.lengthOf(3);
 *     expect(myFoo).to.have.lengthOf.above(3);
 *
 * @param {Object} ctx object whose method / property is to be overwritten
 * @param {String} name of method / property to overwrite
 * @param {Function} method function that returns a function to be used for name
 * @param {Function} chainingBehavior function that returns a function to be used for property
 * @namespace Utils
 * @name overwriteChainableMethod
 * @api public
 */
e.exports=function(e,t,r,i){var a=e.__methods[t],s=a.chainingBehavior;a.chainingBehavior=function(){var e=i(s).call(this);if(void 0!==e)return e;var t=new n.Assertion;return o(this,t),t};var u=a.method;a.method=function(){var e=r(u).apply(this,arguments);if(void 0!==e)return e;var t=new n.Assertion;return o(this,t),t}}},
/* 109 */
/***/function(e,t,r){
/*!
 * Chai - compareByInspect utility
 * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/*!
 * Module dependencies
 */
var n=r(36);
/**
 * ### .compareByInspect(mixed, mixed)
 *
 * To be used as a compareFunction with Array.prototype.sort. Compares elements
 * using inspect instead of default behavior of using toString so that Symbols
 * and objects with irregular/missing toString can still be sorted without a
 * TypeError.
 *
 * @param {Mixed} first element to compare
 * @param {Mixed} second element to compare
 * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1
 * @name compareByInspect
 * @namespace Utils
 * @api public
 */e.exports=function(e,t){return n(e)<n(t)?-1:1}},
/* 110 */
/***/function(e,t,r){
/*!
 * Chai - getOwnEnumerableProperties utility
 * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/*!
 * Module dependencies
 */
var n=r(55);
/**
 * ### .getOwnEnumerableProperties(object)
 *
 * This allows the retrieval of directly-owned enumerable property names and
 * symbols of an object. This function is necessary because Object.keys only
 * returns enumerable property names, not enumerable property symbols.
 *
 * @param {Object} object
 * @returns {Array}
 * @namespace Utils
 * @name getOwnEnumerableProperties
 * @api public
 */e.exports=function(e){return Object.keys(e).concat(n(e))}},
/* 111 */
/***/function(e,t,r){"use strict";
/* !
 * Chai - checkError utility
 * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
/**
 * ### .checkError
 *
 * Checks that an error conforms to a given set of criteria and/or retrieves information about it.
 *
 * @api public
 */
/**
 * ### .compatibleInstance(thrown, errorLike)
 *
 * Checks if two instances are compatible (strict equal).
 * Returns false if errorLike is not an instance of Error, because instances
 * can only be compatible if they're both error instances.
 *
 * @name compatibleInstance
 * @param {Error} thrown error
 * @param {Error|ErrorConstructor} errorLike object to compare against
 * @namespace Utils
 * @api public
 */
/**
 * ### .getFunctionName(constructorFn)
 *
 * Returns the name of a function.
 * This also includes a polyfill function if `constructorFn.name` is not defined.
 *
 * @name getFunctionName
 * @param {Function} constructorFn
 * @namespace Utils
 * @api private
 */
var n=/\s*function(?:\s|\s*\/\*[^(?:*\/)]+\*\/\s*)*([^\(\/]+)/;function o(e){var t="";if(void 0===e.name){
// Here we run a polyfill if constructorFn.name is not defined
var r=String(e).match(n);r&&(t=r[1])}else t=e.name;return t}
/**
 * ### .getConstructorName(errorLike)
 *
 * Gets the constructor name for an Error instance or constructor itself.
 *
 * @name getConstructorName
 * @param {Error|ErrorConstructor} errorLike
 * @namespace Utils
 * @api public
 */e.exports={compatibleInstance:function(e,t){return t instanceof Error&&e===t}
/**
 * ### .compatibleConstructor(thrown, errorLike)
 *
 * Checks if two constructors are compatible.
 * This function can receive either an error constructor or
 * an error instance as the `errorLike` argument.
 * Constructors are compatible if they're the same or if one is
 * an instance of another.
 *
 * @name compatibleConstructor
 * @param {Error} thrown error
 * @param {Error|ErrorConstructor} errorLike object to compare against
 * @namespace Utils
 * @api public
 */,compatibleConstructor:function(e,t){return t instanceof Error?e.constructor===t.constructor||e instanceof t.constructor:t.prototype instanceof Error||t===Error?e.constructor===t||e instanceof t:0}
/**
 * ### .compatibleMessage(thrown, errMatcher)
 *
 * Checks if an error's message is compatible with a matcher (String or RegExp).
 * If the message contains the String or passes the RegExp test,
 * it is considered compatible.
 *
 * @name compatibleMessage
 * @param {Error} thrown error
 * @param {String|RegExp} errMatcher to look for into the message
 * @namespace Utils
 * @api public
 */,compatibleMessage:function(e,t){var r="string"==typeof e?e:e.message;return t instanceof RegExp?t.test(r):"string"==typeof t?-1!==r.indexOf(t):0},getMessage:
/**
 * ### .getMessage(errorLike)
 *
 * Gets the error message from an error.
 * If `err` is a String itself, we return it.
 * If the error has no message, we return an empty string.
 *
 * @name getMessage
 * @param {Error|String} errorLike
 * @namespace Utils
 * @api public
 */
function(e){var t="";return e&&e.message?t=e.message:"string"==typeof e&&(t=e),t},getConstructorName:function(e){var t=e;return e instanceof Error?t=o(e.constructor):"function"==typeof e&&(
// If `err` is not an instance of Error it is an error constructor itself or another function.
// If we've got a common function we get its name, otherwise we may need to create a new instance
// of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.
t=o(e).trim()||o(new e)),t}}},
/* 112 */
/***/function(e,t){// If ECMAScript 6's Number.isNaN is present, prefer that.
e.exports=Number.isNaN||
/*!
 * Chai - isNaN utility
 * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>
 * MIT Licensed
 */
/**
 * ### .isNaN(value)
 *
 * Checks if the given value is NaN or not.
 *
 *     utils.isNaN(NaN); // true
 *
 * @param {Value} The value which has to be checked if it is NaN
 * @name isNaN
 * @api private
 */
function(e){
// Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number
// section's NOTE.
return e!=e}},
/* 113 */
/***/function(e,t,r){
/*!
 * chai
 * http://chaijs.com
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
var n=r(16);e.exports=function(e,t){
/*!
   * Module dependencies.
   */
var r=e.AssertionError,o=t.flag;
/*!
   * Module export.
   */
/*!
   * Assertion Constructor
   *
   * Creates object for chaining.
   *
   * `Assertion` objects contain metadata in the form of flags. Three flags can
   * be assigned during instantiation by passing arguments to this constructor:
   *
   * - `object`: This flag contains the target of the assertion. For example, in
   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will
   *   contain `numKittens` so that the `equal` assertion can reference it when
   *   needed.
   *
   * - `message`: This flag contains an optional custom error message to be
   *   prepended to the error message that's generated by the assertion when it
   *   fails.
   *
   * - `ssfi`: This flag stands for "start stack function indicator". It
   *   contains a function reference that serves as the starting point for
   *   removing frames from the stack trace of the error that's created by the
   *   assertion when it fails. The goal is to provide a cleaner stack trace to
   *   end users by removing Chai's internal functions. Note that it only works
   *   in environments that support `Error.captureStackTrace`, and only when
   *   `Chai.config.includeStack` hasn't been set to `false`.
   *
   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag
   *   should retain its current value, even as assertions are chained off of
   *   this object. This is usually set to `true` when creating a new assertion
   *   from within another assertion. It's also temporarily set to `true` before
   *   an overwritten assertion gets called by the overwriting assertion.
   *
   * @param {Mixed} obj target of the assertion
   * @param {String} msg (optional) custom error message
   * @param {Function} ssfi (optional) starting point for removing stack frames
   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked
   * @api private
   */
function i(e,r,n,a){return o(this,"ssfi",n||i),o(this,"lockSsfi",a),o(this,"object",e),o(this,"message",r),t.proxify(this)}e.Assertion=i,Object.defineProperty(i,"includeStack",{get:function(){return console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),n.includeStack},set:function(e){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),n.includeStack=e}}),Object.defineProperty(i,"showDiff",{get:function(){return console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),n.showDiff},set:function(e){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),n.showDiff=e}}),i.addProperty=function(e,r){t.addProperty(this.prototype,e,r)},i.addMethod=function(e,r){t.addMethod(this.prototype,e,r)},i.addChainableMethod=function(e,r,n){t.addChainableMethod(this.prototype,e,r,n)},i.overwriteProperty=function(e,r){t.overwriteProperty(this.prototype,e,r)},i.overwriteMethod=function(e,r){t.overwriteMethod(this.prototype,e,r)},i.overwriteChainableMethod=function(e,r,n){t.overwriteChainableMethod(this.prototype,e,r,n)},
/**
   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)
   *
   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.
   *
   * @name assert
   * @param {Philosophical} expression to be tested
   * @param {String|Function} message or function that returns message to display if expression fails
   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails
   * @param {Mixed} expected value (remember to check for negation)
   * @param {Mixed} actual (optional) will default to `this.obj`
   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails
   * @api private
   */
i.prototype.assert=function(e,i,a,s,u,c){var l=t.test(this,arguments);if(0!=c&&(c=1),void 0===s&&void 0===u&&(c=0),1!=n.showDiff&&(c=0),!l){i=t.getMessage(this,arguments);var f=t.getActual(this,arguments);throw new r(i,{actual:f,expected:s,showDiff:c},n.includeStack?this.assert:o(this,"ssfi"))}},
/*!
   * ### ._obj
   *
   * Quick reference to stored `actual` value for plugin developers.
   *
   * @api private
   */
Object.defineProperty(i.prototype,"_obj",{get:function(){return o(this,"object")},set:function(e){o(this,"object",e)}})}},
/* 114 */
/***/function(e,t){
/*!
 * chai
 * http://chaijs.com
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
e.exports=function(e,t){var r=e.Assertion,n=e.AssertionError,o=t.flag;
/**
   * ### Language Chains
   *
   * The following are provided as chainable getters to improve the readability
   * of your assertions.
   *
   * **Chains**
   *
   * - to
   * - be
   * - been
   * - is
   * - that
   * - which
   * - and
   * - has
   * - have
   * - with
   * - at
   * - of
   * - same
   * - but
   * - does
   * - still
   *
   * @name language chains
   * @namespace BDD
   * @api public
   */
/**
   * ### .a(type[, msg])
   *
   * Asserts that the target's type is equal to the given string `type`. Types
   * are case insensitive. See the `type-detect` project page for info on the
   * type detection algorithm: https://github.com/chaijs/type-detect.
   *
   *     expect('foo').to.be.a('string');
   *     expect({a: 1}).to.be.an('object');
   *     expect(null).to.be.a('null');
   *     expect(undefined).to.be.an('undefined');
   *     expect(new Error).to.be.an('error');
   *     expect(Promise.resolve()).to.be.a('promise');
   *     expect(new Float32Array).to.be.a('float32array');
   *     expect(Symbol()).to.be.a('symbol');
   *
   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.
   *
   *     var myObj = {
   *       [Symbol.toStringTag]: 'myCustomType'
   *     };
   *
   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');
   *
   * It's often best to use `.a` to check a target's type before making more
   * assertions on the same target. That way, you avoid unexpected behavior from
   * any assertion that does different things based on the target's type.
   *
   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);
   *     expect([]).to.be.an('array').that.is.empty;
   *
   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to
   * assert that the target is the expected type, rather than asserting that it
   * isn't one of many unexpected types.
   *
   *     expect('foo').to.be.a('string'); // Recommended
   *     expect('foo').to.not.be.an('array'); // Not recommended
   *
   * `.a` accepts an optional `msg` argument which is a custom error message to
   * show when the assertion fails. The message can also be given as the second
   * argument to `expect`.
   *
   *     expect(1).to.be.a('string', 'nooo why fail??');
   *     expect(1, 'nooo why fail??').to.be.a('string');
   *
   * `.a` can also be used as a language chain to improve the readability of
   * your assertions.
   *
   *     expect({b: 2}).to.have.a.property('b');
   *
   * The alias `.an` can be used interchangeably with `.a`.
   *
   * @name a
   * @alias an
   * @param {String} type
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function i(e,r){r&&o(this,"message",r),e=e.toLowerCase();var n=o(this,"object"),i=~["a","e","i","o","u"].indexOf(e.charAt(0))?"an ":"a ";this.assert(e===t.type(n).toLowerCase(),"expected #{this} to be "+i+e,"expected #{this} not to be "+i+e)}
/**
   * ### .include(val[, msg])
   *
   * When the target is a string, `.include` asserts that the given string `val`
   * is a substring of the target.
   *
   *     expect('foobar').to.include('foo');
   *
   * When the target is an array, `.include` asserts that the given `val` is a
   * member of the target.
   *
   *     expect([1, 2, 3]).to.include(2);
   *
   * When the target is an object, `.include` asserts that the given object
   * `val`'s properties are a subset of the target's properties.
   *
   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});
   *
   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a
   * member of the target. SameValueZero equality algorithm is used.
   *
   *     expect(new Set([1, 2])).to.include(2);
   *
   * When the target is a Map, `.include` asserts that the given `val` is one of
   * the values of the target. SameValueZero equality algorithm is used.
   *
   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);
   *
   * Because `.include` does different things based on the target's type, it's
   * important to check the target's type before using `.include`. See the `.a`
   * doc for info on testing a target's type.
   *
   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);
   *
   * By default, strict (`===`) equality is used to compare array members and
   * object properties. Add `.deep` earlier in the chain to use deep equality
   * instead (WeakSet targets are not supported). See the `deep-eql` project
   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.
   *
   *     // Target array deeply (but not strictly) includes `{a: 1}`
   *     expect([{a: 1}]).to.deep.include({a: 1});
   *     expect([{a: 1}]).to.not.include({a: 1});
   *
   *     // Target object deeply (but not strictly) includes `x: {a: 1}`
   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});
   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});
   *
   * By default, all of the target's properties are searched when working with
   * objects. This includes properties that are inherited and/or non-enumerable.
   * Add `.own` earlier in the chain to exclude the target's inherited
   * properties from the search.
   *
   *     Object.prototype.b = 2;
   *
   *     expect({a: 1}).to.own.include({a: 1});
   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});
   *
   * Note that a target object is always only searched for `val`'s own
   * enumerable properties.
   *
   * `.deep` and `.own` can be combined.
   *
   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});
   *
   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when
   * referencing nested properties.
   *
   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});
   *
   * If `.` or `[]` are part of an actual property name, they can be escaped by
   * adding two backslashes before them.
   *
   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\.a.\\[b\\]': 2});
   *
   * `.deep` and `.nested` can be combined.
   *
   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});
   *
   * `.own` and `.nested` cannot be combined.
   *
   * Add `.not` earlier in the chain to negate `.include`.
   *
   *     expect('foobar').to.not.include('taco');
   *     expect([1, 2, 3]).to.not.include(4);
   *
   * However, it's dangerous to negate `.include` when the target is an object.
   * The problem is that it creates uncertain expectations by asserting that the
   * target object doesn't have all of `val`'s key/value pairs but may or may
   * not have some of them. It's often best to identify the exact output that's
   * expected, and then write an assertion that only accepts that exact output.
   *
   * When the target object isn't even expected to have `val`'s keys, it's
   * often best to assert exactly that.
   *
   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended
   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended
   *
   * When the target object is expected to have `val`'s keys, it's often best to
   * assert that each of the properties has its expected value, rather than
   * asserting that each property doesn't have one of many unexpected values.
   *
   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended
   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended
   *
   * `.include` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`.
   *
   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');
   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);
   *
   * `.include` can also be used as a language chain, causing all `.members` and
   * `.keys` assertions that follow in the chain to require the target to be a
   * superset of the expected set, rather than an identical set. Note that
   * `.members` ignores duplicates in the subset when `.include` is added.
   *
   *     // Target object's keys are a superset of ['a', 'b'] but not identical
   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');
   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');
   *
   *     // Target array is a superset of [1, 2] but not identical
   *     expect([1, 2, 3]).to.include.members([1, 2]);
   *     expect([1, 2, 3]).to.not.have.members([1, 2]);
   *
   *     // Duplicates in the subset are ignored
   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);
   *
   * Note that adding `.any` earlier in the chain causes the `.keys` assertion
   * to ignore `.include`.
   *
   *     // Both assertions are identical
   *     expect({a: 1}).to.include.any.keys('a', 'b');
   *     expect({a: 1}).to.have.any.keys('a', 'b');
   *
   * The aliases `.includes`, `.contain`, and `.contains` can be used
   * interchangeably with `.include`.
   *
   * @name include
   * @alias contain
   * @alias includes
   * @alias contains
   * @param {Mixed} val
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function a(e,r){return t.isNaN(e)&&t.isNaN(r)||e===r}function s(){o(this,"contains",1)}function u(e,i){i&&o(this,"message",i);var s=o(this,"object"),u=t.type(s).toLowerCase(),c=o(this,"message"),l=o(this,"negate"),f=o(this,"ssfi"),p=o(this,"deep"),h=p?"deep ":"";c=c?c+": ":"";var d=0;switch(u){case"string":d=-1!==s.indexOf(e);break;case"weakset":if(p)throw new n(c+"unable to use .deep.include with WeakSet",void 0,f);d=s.has(e);break;case"map":var g=p?t.eql:a;s.forEach((function(t){d=d||g(t,e)}));break;case"set":p?s.forEach((function(r){d=d||t.eql(r,e)})):d=s.has(e);break;case"array":d=p?s.some((function(r){return t.eql(r,e)})):-1!==s.indexOf(e);break;default:
// This block is for asserting a subset of properties in an object.
// `_.expectTypes` isn't used here because `.include` should work with
// objects with a custom `@@toStringTag`.
if(e!==Object(e))throw new n(c+"object tested must be an array, a map, an object, a set, a string, or a weakset, but "+u+" given",void 0,f);var m=Object.keys(e),y=null,v=0;// When validating .not.include with multiple properties, we only want
// to throw an assertion error if all of the properties are included,
// in which case we throw the first property assertion error that we
// encountered.
if(m.forEach((function(i){var a=new r(s);if(t.transferFlags(this,a,1),o(a,"lockSsfi",1),l&&1!==m.length)try{a.property(i,e[i])}catch(e){if(!t.checkError.compatibleConstructor(e,n))throw e;null===y&&(y=e),v++}else a.property(i,e[i])}),this),l&&m.length>1&&v===m.length)throw y;return}// Assert inclusion in collection or substring in a string.
this.assert(d,"expected #{this} to "+h+"include "+t.inspect(e),"expected #{this} to not "+h+"include "+t.inspect(e))}
/**
   * ### .arguments
   *
   * Asserts that the target is an `arguments` object.
   *
   *     function test () {
   *       expect(arguments).to.be.arguments;
   *     }
   *
   *     test();
   *
   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often
   * best to assert which type the target is expected to be, rather than
   * asserting that its not an `arguments` object.
   *
   *     expect('foo').to.be.a('string'); // Recommended
   *     expect('foo').to.not.be.arguments; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect({}, 'nooo why fail??').to.be.arguments;
   *
   * The alias `.Arguments` can be used interchangeably with `.arguments`.
   *
   * @name arguments
   * @alias Arguments
   * @namespace BDD
   * @api public
   */
function c(){var e=o(this,"object"),r=t.type(e);this.assert("Arguments"===r,"expected #{this} to be arguments but got "+r,"expected #{this} to not be arguments")}
/**
   * ### .equal(val[, msg])
   *
   * Asserts that the target is strictly (`===`) equal to the given `val`.
   *
   *     expect(1).to.equal(1);
   *     expect('foo').to.equal('foo');
   *
   * Add `.deep` earlier in the chain to use deep equality instead. See the
   * `deep-eql` project page for info on the deep equality algorithm:
   * https://github.com/chaijs/deep-eql.
   *
   *     // Target object deeply (but not strictly) equals `{a: 1}`
   *     expect({a: 1}).to.deep.equal({a: 1});
   *     expect({a: 1}).to.not.equal({a: 1});
   *
   *     // Target array deeply (but not strictly) equals `[1, 2]`
   *     expect([1, 2]).to.deep.equal([1, 2]);
   *     expect([1, 2]).to.not.equal([1, 2]);
   *
   * Add `.not` earlier in the chain to negate `.equal`. However, it's often
   * best to assert that the target is equal to its expected value, rather than
   * not equal to one of countless unexpected values.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.not.equal(2); // Not recommended
   *
   * `.equal` accepts an optional `msg` argument which is a custom error message
   * to show when the assertion fails. The message can also be given as the
   * second argument to `expect`.
   *
   *     expect(1).to.equal(2, 'nooo why fail??');
   *     expect(1, 'nooo why fail??').to.equal(2);
   *
   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.
   *
   * @name equal
   * @alias equals
   * @alias eq
   * @param {Mixed} val
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function l(e,t){t&&o(this,"message",t);var r=o(this,"object");if(o(this,"deep")){var n=o(this,"lockSsfi");o(this,"lockSsfi",1),this.eql(e),o(this,"lockSsfi",n)}else this.assert(e===r,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",e,this._obj,1)}
/**
   * ### .eql(obj[, msg])
   *
   * Asserts that the target is deeply equal to the given `obj`. See the
   * `deep-eql` project page for info on the deep equality algorithm:
   * https://github.com/chaijs/deep-eql.
   *
   *     // Target object is deeply (but not strictly) equal to {a: 1}
   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});
   *
   *     // Target array is deeply (but not strictly) equal to [1, 2]
   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);
   *
   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best
   * to assert that the target is deeply equal to its expected value, rather
   * than not deeply equal to one of countless unexpected values.
   *
   *     expect({a: 1}).to.eql({a: 1}); // Recommended
   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended
   *
   * `.eql` accepts an optional `msg` argument which is a custom error message
   * to show when the assertion fails. The message can also be given as the
   * second argument to `expect`.
   *
   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');
   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});
   *
   * The alias `.eqls` can be used interchangeably with `.eql`.
   *
   * The `.deep.equal` assertion is almost identical to `.eql` but with one
   * difference: `.deep.equal` causes deep equality comparisons to also be used
   * for any other assertions that follow in the chain.
   *
   * @name eql
   * @alias eqls
   * @param {Mixed} obj
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function f(e,r){r&&o(this,"message",r),this.assert(t.eql(e,o(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",e,this._obj,1)}
/**
   * ### .above(n[, msg])
   *
   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.
   * However, it's often best to assert that the target is equal to its expected
   * value.
   *
   *     expect(2).to.equal(2); // Recommended
   *     expect(2).to.be.above(1); // Not recommended
   *
   * Add `.lengthOf` earlier in the chain to assert that the target's `length`
   * or `size` is greater than the given number `n`.
   *
   *     expect('foo').to.have.lengthOf(3); // Recommended
   *     expect('foo').to.have.lengthOf.above(2); // Not recommended
   *
   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended
   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.above`.
   *
   *     expect(2).to.equal(2); // Recommended
   *     expect(1).to.not.be.above(2); // Not recommended
   *
   * `.above` accepts an optional `msg` argument which is a custom error message
   * to show when the assertion fails. The message can also be given as the
   * second argument to `expect`.
   *
   *     expect(1).to.be.above(2, 'nooo why fail??');
   *     expect(1, 'nooo why fail??').to.be.above(2);
   *
   * The aliases `.gt` and `.greaterThan` can be used interchangeably with
   * `.above`.
   *
   * @name above
   * @alias gt
   * @alias greaterThan
   * @param {Number} n
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function p(e,i){i&&o(this,"message",i);var a,s=o(this,"object"),u=o(this,"doLength"),c=o(this,"message"),l=c?c+": ":"",f=o(this,"ssfi"),p=t.type(s).toLowerCase(),h=t.type(e).toLowerCase(),d=1;if(u&&"map"!==p&&"set"!==p&&new r(s,c,f,1).to.have.property("length"),u||"date"!==p||"date"===h)if("number"===h||!u&&"number"!==p)if(u||"date"===p||"number"===p)d=0;else{a=l+"expected "+("string"===p?"'"+s+"'":s)+" to be a number or a date"}else a=l+"the argument to above must be a number";else a=l+"the argument to above must be a date";if(d)throw new n(a,void 0,f);if(u){var g,m="length";"map"===p||"set"===p?(m="size",g=s.size):g=s.length,this.assert(g>e,"expected #{this} to have a "+m+" above #{exp} but got #{act}","expected #{this} to not have a "+m+" above #{exp}",e,g)}else this.assert(s>e,"expected #{this} to be above #{exp}","expected #{this} to be at most #{exp}",e)}
/**
   * ### .least(n[, msg])
   *
   * Asserts that the target is a number or a date greater than or equal to the given
   * number or date `n` respectively. However, it's often best to assert that the target is equal to
   * its expected value.
   *
   *     expect(2).to.equal(2); // Recommended
   *     expect(2).to.be.at.least(1); // Not recommended
   *     expect(2).to.be.at.least(2); // Not recommended
   *
   * Add `.lengthOf` earlier in the chain to assert that the target's `length`
   * or `size` is greater than or equal to the given number `n`.
   *
   *     expect('foo').to.have.lengthOf(3); // Recommended
   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended
   *
   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended
   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.least`.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.not.be.at.least(2); // Not recommended
   *
   * `.least` accepts an optional `msg` argument which is a custom error message
   * to show when the assertion fails. The message can also be given as the
   * second argument to `expect`.
   *
   *     expect(1).to.be.at.least(2, 'nooo why fail??');
   *     expect(1, 'nooo why fail??').to.be.at.least(2);
   *
   * The alias `.gte` can be used interchangeably with `.least`.
   *
   * @name least
   * @alias gte
   * @param {Number} n
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function h(e,i){i&&o(this,"message",i);var a,s=o(this,"object"),u=o(this,"doLength"),c=o(this,"message"),l=c?c+": ":"",f=o(this,"ssfi"),p=t.type(s).toLowerCase(),h=t.type(e).toLowerCase(),d=1;if(u&&"map"!==p&&"set"!==p&&new r(s,c,f,1).to.have.property("length"),u||"date"!==p||"date"===h)if("number"===h||!u&&"number"!==p)if(u||"date"===p||"number"===p)d=0;else{a=l+"expected "+("string"===p?"'"+s+"'":s)+" to be a number or a date"}else a=l+"the argument to least must be a number";else a=l+"the argument to least must be a date";if(d)throw new n(a,void 0,f);if(u){var g,m="length";"map"===p||"set"===p?(m="size",g=s.size):g=s.length,this.assert(g>=e,"expected #{this} to have a "+m+" at least #{exp} but got #{act}","expected #{this} to have a "+m+" below #{exp}",e,g)}else this.assert(s>=e,"expected #{this} to be at least #{exp}","expected #{this} to be below #{exp}",e)}
/**
   * ### .below(n[, msg])
   *
   * Asserts that the target is a number or a date less than the given number or date `n` respectively.
   * However, it's often best to assert that the target is equal to its expected
   * value.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.be.below(2); // Not recommended
   *
   * Add `.lengthOf` earlier in the chain to assert that the target's `length`
   * or `size` is less than the given number `n`.
   *
   *     expect('foo').to.have.lengthOf(3); // Recommended
   *     expect('foo').to.have.lengthOf.below(4); // Not recommended
   *
   *     expect([1, 2, 3]).to.have.length(3); // Recommended
   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.below`.
   *
   *     expect(2).to.equal(2); // Recommended
   *     expect(2).to.not.be.below(1); // Not recommended
   *
   * `.below` accepts an optional `msg` argument which is a custom error message
   * to show when the assertion fails. The message can also be given as the
   * second argument to `expect`.
   *
   *     expect(2).to.be.below(1, 'nooo why fail??');
   *     expect(2, 'nooo why fail??').to.be.below(1);
   *
   * The aliases `.lt` and `.lessThan` can be used interchangeably with
   * `.below`.
   *
   * @name below
   * @alias lt
   * @alias lessThan
   * @param {Number} n
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function d(e,i){i&&o(this,"message",i);var a,s=o(this,"object"),u=o(this,"doLength"),c=o(this,"message"),l=c?c+": ":"",f=o(this,"ssfi"),p=t.type(s).toLowerCase(),h=t.type(e).toLowerCase(),d=1;if(u&&"map"!==p&&"set"!==p&&new r(s,c,f,1).to.have.property("length"),u||"date"!==p||"date"===h)if("number"===h||!u&&"number"!==p)if(u||"date"===p||"number"===p)d=0;else{a=l+"expected "+("string"===p?"'"+s+"'":s)+" to be a number or a date"}else a=l+"the argument to below must be a number";else a=l+"the argument to below must be a date";if(d)throw new n(a,void 0,f);if(u){var g,m="length";"map"===p||"set"===p?(m="size",g=s.size):g=s.length,this.assert(g<e,"expected #{this} to have a "+m+" below #{exp} but got #{act}","expected #{this} to not have a "+m+" below #{exp}",e,g)}else this.assert(s<e,"expected #{this} to be below #{exp}","expected #{this} to be at least #{exp}",e)}
/**
   * ### .most(n[, msg])
   *
   * Asserts that the target is a number or a date less than or equal to the given number
   * or date `n` respectively. However, it's often best to assert that the target is equal to its
   * expected value.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.be.at.most(2); // Not recommended
   *     expect(1).to.be.at.most(1); // Not recommended
   *
   * Add `.lengthOf` earlier in the chain to assert that the target's `length`
   * or `size` is less than or equal to the given number `n`.
   *
   *     expect('foo').to.have.lengthOf(3); // Recommended
   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended
   *
   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended
   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.most`.
   *
   *     expect(2).to.equal(2); // Recommended
   *     expect(2).to.not.be.at.most(1); // Not recommended
   *
   * `.most` accepts an optional `msg` argument which is a custom error message
   * to show when the assertion fails. The message can also be given as the
   * second argument to `expect`.
   *
   *     expect(2).to.be.at.most(1, 'nooo why fail??');
   *     expect(2, 'nooo why fail??').to.be.at.most(1);
   *
   * The alias `.lte` can be used interchangeably with `.most`.
   *
   * @name most
   * @alias lte
   * @param {Number} n
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function g(e,i){i&&o(this,"message",i);var a,s=o(this,"object"),u=o(this,"doLength"),c=o(this,"message"),l=c?c+": ":"",f=o(this,"ssfi"),p=t.type(s).toLowerCase(),h=t.type(e).toLowerCase(),d=1;if(u&&"map"!==p&&"set"!==p&&new r(s,c,f,1).to.have.property("length"),u||"date"!==p||"date"===h)if("number"===h||!u&&"number"!==p)if(u||"date"===p||"number"===p)d=0;else{a=l+"expected "+("string"===p?"'"+s+"'":s)+" to be a number or a date"}else a=l+"the argument to most must be a number";else a=l+"the argument to most must be a date";if(d)throw new n(a,void 0,f);if(u){var g,m="length";"map"===p||"set"===p?(m="size",g=s.size):g=s.length,this.assert(g<=e,"expected #{this} to have a "+m+" at most #{exp} but got #{act}","expected #{this} to have a "+m+" above #{exp}",e,g)}else this.assert(s<=e,"expected #{this} to be at most #{exp}","expected #{this} to be above #{exp}",e)}
/**
   * ### .instanceof(constructor[, msg])
   *
   * Asserts that the target is an instance of the given `constructor`.
   *
   *     function Cat () { }
   *
   *     expect(new Cat()).to.be.an.instanceof(Cat);
   *     expect([1, 2]).to.be.an.instanceof(Array);
   *
   * Add `.not` earlier in the chain to negate `.instanceof`.
   *
   *     expect({a: 1}).to.not.be.an.instanceof(Array);
   *
   * `.instanceof` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`.
   *
   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');
   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);
   *
   * Due to limitations in ES5, `.instanceof` may not always work as expected
   * when using a transpiler such as Babel or TypeScript. In particular, it may
   * produce unexpected results when subclassing built-in object such as
   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:
   *
   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))
   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))
   *
   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.
   *
   * @name instanceof
   * @param {Constructor} constructor
   * @param {String} msg _optional_
   * @alias instanceOf
   * @namespace BDD
   * @api public
   */
function m(e,r){r&&o(this,"message",r);var i=o(this,"object"),a=o(this,"ssfi"),s=o(this,"message");try{var u=i instanceof e}catch(r){if(r instanceof TypeError)throw new n((s=s?s+": ":"")+"The instanceof assertion needs a constructor but "+t.type(e)+" was given.",void 0,a);throw r}var c=t.getName(e);null===c&&(c="an unnamed constructor"),this.assert(u,"expected #{this} to be an instance of "+c,"expected #{this} to not be an instance of "+c)}
/**
   * ### .property(name[, val[, msg]])
   *
   * Asserts that the target has a property with the given key `name`.
   *
   *     expect({a: 1}).to.have.property('a');
   *
   * When `val` is provided, `.property` also asserts that the property's value
   * is equal to the given `val`.
   *
   *     expect({a: 1}).to.have.property('a', 1);
   *
   * By default, strict (`===`) equality is used. Add `.deep` earlier in the
   * chain to use deep equality instead. See the `deep-eql` project page for
   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.
   *
   *     // Target object deeply (but not strictly) has property `x: {a: 1}`
   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});
   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});
   *
   * The target's enumerable and non-enumerable properties are always included
   * in the search. By default, both own and inherited properties are included.
   * Add `.own` earlier in the chain to exclude inherited properties from the
   * search.
   *
   *     Object.prototype.b = 2;
   *
   *     expect({a: 1}).to.have.own.property('a');
   *     expect({a: 1}).to.have.own.property('a', 1);
   *     expect({a: 1}).to.have.property('b');
   *     expect({a: 1}).to.not.have.own.property('b');
   *
   * `.deep` and `.own` can be combined.
   *
   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});
   *
   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when
   * referencing nested properties.
   *
   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');
   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');
   *
   * If `.` or `[]` are part of an actual property name, they can be escaped by
   * adding two backslashes before them.
   *
   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\.a.\\[b\\]');
   *
   * `.deep` and `.nested` can be combined.
   *
   *     expect({a: {b: [{c: 3}]}})
   *       .to.have.deep.nested.property('a.b[0]', {c: 3});
   *
   * `.own` and `.nested` cannot be combined.
   *
   * Add `.not` earlier in the chain to negate `.property`.
   *
   *     expect({a: 1}).to.not.have.property('b');
   *
   * However, it's dangerous to negate `.property` when providing `val`. The
   * problem is that it creates uncertain expectations by asserting that the
   * target either doesn't have a property with the given key `name`, or that it
   * does have a property with the given key `name` but its value isn't equal to
   * the given `val`. It's often best to identify the exact output that's
   * expected, and then write an assertion that only accepts that exact output.
   *
   * When the target isn't expected to have a property with the given key
   * `name`, it's often best to assert exactly that.
   *
   *     expect({b: 2}).to.not.have.property('a'); // Recommended
   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended
   *
   * When the target is expected to have a property with the given key `name`,
   * it's often best to assert that the property has its expected value, rather
   * than asserting that it doesn't have one of many unexpected values.
   *
   *     expect({a: 3}).to.have.property('a', 3); // Recommended
   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended
   *
   * `.property` changes the target of any assertions that follow in the chain
   * to be the value of the property from the original target object.
   *
   *     expect({a: 1}).to.have.property('a').that.is.a('number');
   *
   * `.property` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`. When not providing `val`, only use the
   * second form.
   *
   *     // Recommended
   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');
   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);
   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');
   *
   *     // Not recommended
   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');
   *
   * The above assertion isn't the same thing as not providing `val`. Instead,
   * it's asserting that the target object has a `b` property that's equal to
   * `undefined`.
   *
   * The assertions `.ownProperty` and `.haveOwnProperty` can be used
   * interchangeably with `.own.property`.
   *
   * @name property
   * @param {String} name
   * @param {Mixed} val (optional)
   * @param {String} msg _optional_
   * @returns value of property for chaining
   * @namespace BDD
   * @api public
   */
function y(e,r,i){i&&o(this,"message",i);var a=o(this,"nested"),s=o(this,"own"),u=o(this,"message"),c=o(this,"object"),l=o(this,"ssfi"),f=typeof e;if(u=u?u+": ":"",a){if("string"!==f)throw new n(u+"the argument to property must be a string when using nested syntax",void 0,l)}else if("string"!==f&&"number"!==f&&"symbol"!==f)throw new n(u+"the argument to property must be a string, number, or symbol",void 0,l);if(a&&s)throw new n(u+'The "nested" and "own" flags cannot be combined.',void 0,l);if(null==c)throw new n(u+"Target cannot be null or undefined.",void 0,l);var p,h=o(this,"deep"),d=o(this,"negate"),g=a?t.getPathInfo(c,e):null,m=a?g.value:c[e],y="";h&&(y+="deep "),s&&(y+="own "),a&&(y+="nested "),y+="property ",p=s?Object.prototype.hasOwnProperty.call(c,e):a?g.exists:t.hasProperty(c,e),// When performing a negated assertion for both name and val, merely having
// a property with the given name isn't enough to cause the assertion to
// fail. It must both have a property with the given name, and the value of
// that property must equal the given val. Therefore, skip this assertion in
// favor of the next.
d&&1!==arguments.length||this.assert(p,"expected #{this} to have "+y+t.inspect(e),"expected #{this} to not have "+y+t.inspect(e)),arguments.length>1&&this.assert(p&&(h?t.eql(r,m):r===m),"expected #{this} to have "+y+t.inspect(e)+" of #{exp}, but got #{act}","expected #{this} to not have "+y+t.inspect(e)+" of #{act}",r,m),o(this,"object",m)}function v(e,t,r){o(this,"own",1),y.apply(this,arguments)}
/**
   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])
   *
   * Asserts that the target has its own property descriptor with the given key
   * `name`. Enumerable and non-enumerable properties are included in the
   * search.
   *
   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');
   *
   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that
   * the property's descriptor is deeply equal to the given `descriptor`. See
   * the `deep-eql` project page for info on the deep equality algorithm:
   * https://github.com/chaijs/deep-eql.
   *
   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {
   *       configurable: true,
   *       enumerable: true,
   *       writable: true,
   *       value: 1,
   *     });
   *
   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.
   *
   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');
   *
   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing
   * a `descriptor`. The problem is that it creates uncertain expectations by
   * asserting that the target either doesn't have a property descriptor with
   * the given key `name`, or that it does have a property descriptor with the
   * given key `name` but its not deeply equal to the given `descriptor`. It's
   * often best to identify the exact output that's expected, and then write an
   * assertion that only accepts that exact output.
   *
   * When the target isn't expected to have a property descriptor with the given
   * key `name`, it's often best to assert exactly that.
   *
   *     // Recommended
   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');
   *
   *     // Not recommended
   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {
   *       configurable: true,
   *       enumerable: true,
   *       writable: true,
   *       value: 1,
   *     });
   *
   * When the target is expected to have a property descriptor with the given
   * key `name`, it's often best to assert that the property has its expected
   * descriptor, rather than asserting that it doesn't have one of many
   * unexpected descriptors.
   *
   *     // Recommended
   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {
   *       configurable: true,
   *       enumerable: true,
   *       writable: true,
   *       value: 3,
   *     });
   *
   *     // Not recommended
   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {
   *       configurable: true,
   *       enumerable: true,
   *       writable: true,
   *       value: 1,
   *     });
   *
   * `.ownPropertyDescriptor` changes the target of any assertions that follow
   * in the chain to be the value of the property descriptor from the original
   * target object.
   *
   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')
   *       .that.has.property('enumerable', true);
   *
   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a
   * custom error message to show when the assertion fails. The message can also
   * be given as the second argument to `expect`. When not providing
   * `descriptor`, only use the second form.
   *
   *     // Recommended
   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {
   *       configurable: true,
   *       enumerable: true,
   *       writable: true,
   *       value: 2,
   *     }, 'nooo why fail??');
   *
   *     // Recommended
   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {
   *       configurable: true,
   *       enumerable: true,
   *       writable: true,
   *       value: 2,
   *     });
   *
   *     // Recommended
   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');
   *
   *     // Not recommended
   *     expect({a: 1})
   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');
   *
   * The above assertion isn't the same thing as not providing `descriptor`.
   * Instead, it's asserting that the target object has a `b` property
   * descriptor that's deeply equal to `undefined`.
   *
   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with
   * `.ownPropertyDescriptor`.
   *
   * @name ownPropertyDescriptor
   * @alias haveOwnPropertyDescriptor
   * @param {String} name
   * @param {Object} descriptor _optional_
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function b(e,r,n){"string"==typeof r&&(n=r,r=null),n&&o(this,"message",n);var i=o(this,"object"),a=Object.getOwnPropertyDescriptor(Object(i),e);a&&r?this.assert(t.eql(r,a),"expected the own property descriptor for "+t.inspect(e)+" on #{this} to match "+t.inspect(r)+", got "+t.inspect(a),"expected the own property descriptor for "+t.inspect(e)+" on #{this} to not match "+t.inspect(r),r,a,1):this.assert(a,"expected #{this} to have an own property descriptor for "+t.inspect(e),"expected #{this} to not have an own property descriptor for "+t.inspect(e)),o(this,"object",a)}
/**
   * ### .lengthOf(n[, msg])
   *
   * Asserts that the target's `length` or `size` is equal to the given number
   * `n`.
   *
   *     expect([1, 2, 3]).to.have.lengthOf(3);
   *     expect('foo').to.have.lengthOf(3);
   *     expect(new Set([1, 2, 3])).to.have.lengthOf(3);
   *     expect(new Map([['a', 1], ['b', 2], ['c', 3]])).to.have.lengthOf(3);
   *
   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often
   * best to assert that the target's `length` property is equal to its expected
   * value, rather than not equal to one of many unexpected values.
   *
   *     expect('foo').to.have.lengthOf(3); // Recommended
   *     expect('foo').to.not.have.lengthOf(4); // Not recommended
   *
   * `.lengthOf` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`.
   *
   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');
   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);
   *
   * `.lengthOf` can also be used as a language chain, causing all `.above`,
   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the
   * chain to use the target's `length` property as the target. However, it's
   * often best to assert that the target's `length` property is equal to its
   * expected length, rather than asserting that its `length` property falls
   * within some range of values.
   *
   *     // Recommended
   *     expect([1, 2, 3]).to.have.lengthOf(3);
   *
   *     // Not recommended
   *     expect([1, 2, 3]).to.have.lengthOf.above(2);
   *     expect([1, 2, 3]).to.have.lengthOf.below(4);
   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);
   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);
   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);
   *
   * Due to a compatibility issue, the alias `.length` can't be chained directly
   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used
   * interchangeably with `.lengthOf` in every situation. It's recommended to
   * always use `.lengthOf` instead of `.length`.
   *
   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error
   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected
   *
   * @name lengthOf
   * @alias length
   * @param {Number} n
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function w(){o(this,"doLength",1)}function E(e,n){n&&o(this,"message",n);var i,a=o(this,"object"),s=t.type(a).toLowerCase(),u=o(this,"message"),c=o(this,"ssfi"),l="length";switch(s){case"map":case"set":l="size",i=a.size;break;default:new r(a,u,c,1).to.have.property("length"),i=a.length}this.assert(i==e,"expected #{this} to have a "+l+" of #{exp} but got #{act}","expected #{this} to not have a "+l+" of #{act}",e,i)}
/**
   * ### .match(re[, msg])
   *
   * Asserts that the target matches the given regular expression `re`.
   *
   *     expect('foobar').to.match(/^foo/);
   *
   * Add `.not` earlier in the chain to negate `.match`.
   *
   *     expect('foobar').to.not.match(/taco/);
   *
   * `.match` accepts an optional `msg` argument which is a custom error message
   * to show when the assertion fails. The message can also be given as the
   * second argument to `expect`.
   *
   *     expect('foobar').to.match(/taco/, 'nooo why fail??');
   *     expect('foobar', 'nooo why fail??').to.match(/taco/);
   *
   * The alias `.matches` can be used interchangeably with `.match`.
   *
   * @name match
   * @alias matches
   * @param {RegExp} re
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function A(e,t){t&&o(this,"message",t);var r=o(this,"object");this.assert(e.exec(r),"expected #{this} to match "+e,"expected #{this} not to match "+e)}
/**
   * ### .keys(key1[, key2[, ...]])
   *
   * Asserts that the target object, array, map, or set has the given keys. Only
   * the target's own inherited properties are included in the search.
   *
   * When the target is an object or array, keys can be provided as one or more
   * string arguments, a single array argument, or a single object argument. In
   * the latter case, only the keys in the given object matter; the values are
   * ignored.
   *
   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');
   *     expect(['x', 'y']).to.have.all.keys(0, 1);
   *
   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);
   *     expect(['x', 'y']).to.have.all.keys([0, 1]);
   *
   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5
   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5
   *
   * When the target is a map or set, each key must be provided as a separate
   * argument.
   *
   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');
   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');
   *
   * Because `.keys` does different things based on the target's type, it's
   * important to check the target's type before using `.keys`. See the `.a` doc
   * for info on testing a target's type.
   *
   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');
   *
   * By default, strict (`===`) equality is used to compare keys of maps and
   * sets. Add `.deep` earlier in the chain to use deep equality instead. See
   * the `deep-eql` project page for info on the deep equality algorithm:
   * https://github.com/chaijs/deep-eql.
   *
   *     // Target set deeply (but not strictly) has key `{a: 1}`
   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);
   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);
   *
   * By default, the target must have all of the given keys and no more. Add
   * `.any` earlier in the chain to only require that the target have at least
   * one of the given keys. Also, add `.not` earlier in the chain to negate
   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use
   * `.all` when asserting `.keys` without negation.
   *
   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts
   * exactly what's expected of the output, whereas `.not.all.keys` creates
   * uncertain expectations.
   *
   *     // Recommended; asserts that target doesn't have any of the given keys
   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');
   *
   *     // Not recommended; asserts that target doesn't have all of the given
   *     // keys but may or may not have some of them
   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');
   *
   * When asserting `.keys` without negation, `.all` is preferred because
   * `.all.keys` asserts exactly what's expected of the output, whereas
   * `.any.keys` creates uncertain expectations.
   *
   *     // Recommended; asserts that target has all the given keys
   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');
   *
   *     // Not recommended; asserts that target has at least one of the given
   *     // keys but may or may not have more of them
   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');
   *
   * Note that `.all` is used by default when neither `.all` nor `.any` appear
   * earlier in the chain. However, it's often best to add `.all` anyway because
   * it improves readability.
   *
   *     // Both assertions are identical
   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended
   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended
   *
   * Add `.include` earlier in the chain to require that the target's keys be a
   * superset of the expected keys, rather than identical sets.
   *
   *     // Target object's keys are a superset of ['a', 'b'] but not identical
   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');
   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');
   *
   * However, if `.any` and `.include` are combined, only the `.any` takes
   * effect. The `.include` is ignored in this case.
   *
   *     // Both assertions are identical
   *     expect({a: 1}).to.have.any.keys('a', 'b');
   *     expect({a: 1}).to.include.any.keys('a', 'b');
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');
   *
   * The alias `.key` can be used interchangeably with `.keys`.
   *
   * @name keys
   * @alias key
   * @param {...String|Array|Object} keys
   * @namespace BDD
   * @api public
   */
function T(e){var r,i,a=o(this,"object"),s=t.type(a),u=t.type(e),c=o(this,"ssfi"),l=o(this,"deep"),f="",p=1,h=o(this,"message"),d=(h=h?h+": ":"")+"when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments";if("Map"===s||"Set"===s)f=l?"deeply ":"",i=[],// Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.
a.forEach((function(e,t){i.push(t)})),"Array"!==u&&(e=Array.prototype.slice.call(arguments));else{switch(i=t.getOwnEnumerableProperties(a),u){case"Array":if(arguments.length>1)throw new n(d,void 0,c);break;case"Object":if(arguments.length>1)throw new n(d,void 0,c);e=Object.keys(e);break;default:e=Array.prototype.slice.call(arguments)}// Only stringify non-Symbols because Symbols would become "Symbol()"
e=e.map((function(e){return"symbol"==typeof e?e:String(e)}))}if(!e.length)throw new n(h+"keys required",void 0,c);var g=e.length,m=o(this,"any"),y=o(this,"all"),v=e;// Key string
if(m||y||(y=1),// Has any
m&&(p=v.some((function(e){return i.some((function(r){return l?t.eql(e,r):e===r}))}))),// Has all
y&&(p=v.every((function(e){return i.some((function(r){return l?t.eql(e,r):e===r}))})),o(this,"contains")||(p=p&&e.length==i.length)),g>1){var b=(e=e.map((function(e){return t.inspect(e)}))).pop();y&&(r=e.join(", ")+", and "+b),m&&(r=e.join(", ")+", or "+b)}else r=t.inspect(e[0]);// Form
r=(g>1?"keys ":"key ")+r,// Have / include
r=(o(this,"contains")?"contain ":"have ")+r,// Assertion
this.assert(p,"expected #{this} to "+f+r,"expected #{this} to not "+f+r,v.slice(0).sort(t.compareByInspect),i.sort(t.compareByInspect),1)}
/**
   * ### .throw([errorLike], [errMsgMatcher], [msg])
   *
   * When no arguments are provided, `.throw` invokes the target function and
   * asserts that an error is thrown.
   *
   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };
   *
   *     expect(badFn).to.throw();
   *
   * When one argument is provided, and it's an error constructor, `.throw`
   * invokes the target function and asserts that an error is thrown that's an
   * instance of that error constructor.
   *
   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };
   *
   *     expect(badFn).to.throw(TypeError);
   *
   * When one argument is provided, and it's an error instance, `.throw` invokes
   * the target function and asserts that an error is thrown that's strictly
   * (`===`) equal to that error instance.
   *
   *     var err = new TypeError('Illegal salmon!');
   *     var badFn = function () { throw err; };
   *
   *     expect(badFn).to.throw(err);
   *
   * When one argument is provided, and it's a string, `.throw` invokes the
   * target function and asserts that an error is thrown with a message that
   * contains that string.
   *
   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };
   *
   *     expect(badFn).to.throw('salmon');
   *
   * When one argument is provided, and it's a regular expression, `.throw`
   * invokes the target function and asserts that an error is thrown with a
   * message that matches that regular expression.
   *
   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };
   *
   *     expect(badFn).to.throw(/salmon/);
   *
   * When two arguments are provided, and the first is an error instance or
   * constructor, and the second is a string or regular expression, `.throw`
   * invokes the function and asserts that an error is thrown that fulfills both
   * conditions as described above.
   *
   *     var err = new TypeError('Illegal salmon!');
   *     var badFn = function () { throw err; };
   *
   *     expect(badFn).to.throw(TypeError, 'salmon');
   *     expect(badFn).to.throw(TypeError, /salmon/);
   *     expect(badFn).to.throw(err, 'salmon');
   *     expect(badFn).to.throw(err, /salmon/);
   *
   * Add `.not` earlier in the chain to negate `.throw`.
   *
   *     var goodFn = function () {};
   *
   *     expect(goodFn).to.not.throw();
   *
   * However, it's dangerous to negate `.throw` when providing any arguments.
   * The problem is that it creates uncertain expectations by asserting that the
   * target either doesn't throw an error, or that it throws an error but of a
   * different type than the given type, or that it throws an error of the given
   * type but with a message that doesn't include the given string. It's often
   * best to identify the exact output that's expected, and then write an
   * assertion that only accepts that exact output.
   *
   * When the target isn't expected to throw an error, it's often best to assert
   * exactly that.
   *
   *     var goodFn = function () {};
   *
   *     expect(goodFn).to.not.throw(); // Recommended
   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended
   *
   * When the target is expected to throw an error, it's often best to assert
   * that the error is of its expected type, and has a message that includes an
   * expected string, rather than asserting that it doesn't have one of many
   * unexpected types, and doesn't have a message that includes some string.
   *
   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };
   *
   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended
   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended
   *
   * `.throw` changes the target of any assertions that follow in the chain to
   * be the error object that's thrown.
   *
   *     var err = new TypeError('Illegal salmon!');
   *     err.code = 42;
   *     var badFn = function () { throw err; };
   *
   *     expect(badFn).to.throw(TypeError).with.property('code', 42);
   *
   * `.throw` accepts an optional `msg` argument which is a custom error message
   * to show when the assertion fails. The message can also be given as the
   * second argument to `expect`. When not providing two arguments, always use
   * the second form.
   *
   *     var goodFn = function () {};
   *
   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');
   *     expect(goodFn, 'nooo why fail??').to.throw();
   *
   * Due to limitations in ES5, `.throw` may not always work as expected when
   * using a transpiler such as Babel or TypeScript. In particular, it may
   * produce unexpected results when subclassing the built-in `Error` object and
   * then passing the subclassed constructor to `.throw`. See your transpiler's
   * docs for details:
   *
   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))
   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))
   *
   * Beware of some common mistakes when using the `throw` assertion. One common
   * mistake is to accidentally invoke the function yourself instead of letting
   * the `throw` assertion invoke the function for you. For example, when
   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as
   * the target for the assertion.
   *
   *     expect(fn).to.throw();     // Good! Tests `fn` as desired
   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`
   *
   * If you need to assert that your function `fn` throws when passed certain
   * arguments, then wrap a call to `fn` inside of another function.
   *
   *     expect(function () { fn(42); }).to.throw();  // Function expression
   *     expect(() => fn(42)).to.throw();             // ES6 arrow function
   *
   * Another common mistake is to provide an object method (or any stand-alone
   * function that relies on `this`) as the target of the assertion. Doing so is
   * problematic because the `this` context will be lost when the function is
   * invoked by `.throw`; there's no way for it to know what `this` is supposed
   * to be. There are two ways around this problem. One solution is to wrap the
   * method or function call inside of another function. Another solution is to
   * use `bind`.
   *
   *     expect(function () { cat.meow(); }).to.throw();  // Function expression
   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function
   *     expect(cat.meow.bind(cat)).to.throw();           // Bind
   *
   * Finally, it's worth mentioning that it's a best practice in JavaScript to
   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,
   * `TypeError`, and user-defined objects that extend `Error`. No other type of
   * value will generate a stack trace when initialized. With that said, the
   * `throw` assertion does technically support any type of value being thrown,
   * not just `Error` and its derivatives.
   *
   * The aliases `.throws` and `.Throw` can be used interchangeably with
   * `.throw`.
   *
   * @name throw
   * @alias throws
   * @alias Throw
   * @param {Error|ErrorConstructor} errorLike
   * @param {String|RegExp} errMsgMatcher error message
   * @param {String} msg _optional_
   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
   * @returns error for chaining (null if no error)
   * @namespace BDD
   * @api public
   */
function x(e,n,i){i&&o(this,"message",i);var a,s=o(this,"object"),u=o(this,"ssfi"),c=o(this,"message"),l=o(this,"negate")||0;new r(s,c,u,1).is.a("function"),(e instanceof RegExp||"string"==typeof e)&&(n=e,e=null);try{s()}catch(e){a=e}// If we have the negate flag enabled and at least one valid argument it means we do expect an error
// but we want it to match a given set of criteria
var f=void 0===e&&void 0===n,p=Boolean(e&&n),h=0,d=0;// If we've got the negate flag enabled and both args, we should only fail if both aren't compatible
// See Issue #551 and PR #683@GitHub
// Checking if error was thrown
if(f||!f&&!l){
// We need this to display results correctly according to their types
var g="an error";e instanceof Error?g="#{exp}":e&&(g=t.checkError.getConstructorName(e)),this.assert(a,"expected #{this} to throw "+g,"expected #{this} to not throw an error but #{act} was thrown",e&&e.toString(),a instanceof Error?a.toString():"string"==typeof a?a:a&&t.checkError.getConstructorName(a))}if(e&&a){
// We should compare instances only if `errorLike` is an instance of `Error`
if(e instanceof Error)t.checkError.compatibleInstance(a,e)===l&&(
// These checks were created to ensure we won't fail too soon when we've got both args and a negate
// See Issue #551 and PR #683@GitHub
p&&l?h=1:this.assert(l,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(a&&!l?" but #{act} was thrown":""),e.toString(),a.toString()));t.checkError.compatibleConstructor(a,e)===l&&(p&&l?h=1:this.assert(l,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(a?" but #{act} was thrown":""),e instanceof Error?e.toString():e&&t.checkError.getConstructorName(e),a instanceof Error?a.toString():a&&t.checkError.getConstructorName(a)))}if(a&&null!=n){
// Here we check compatible messages
var m="including";n instanceof RegExp&&(m="matching"),t.checkError.compatibleMessage(a,n)===l&&(p&&l?d=1:this.assert(l,"expected #{this} to throw error "+m+" #{exp} but got #{act}","expected #{this} to throw error not "+m+" #{exp}",n,t.checkError.getMessage(a)))}// If both assertions failed and both should've matched we throw an error
h&&d&&this.assert(l,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(a?" but #{act} was thrown":""),e instanceof Error?e.toString():e&&t.checkError.getConstructorName(e),a instanceof Error?a.toString():a&&t.checkError.getConstructorName(a)),o(this,"object",a)}
/**
   * ### .respondTo(method[, msg])
   *
   * When the target is a non-function object, `.respondTo` asserts that the
   * target has a method with the given name `method`. The method can be own or
   * inherited, and it can be enumerable or non-enumerable.
   *
   *     function Cat () {}
   *     Cat.prototype.meow = function () {};
   *
   *     expect(new Cat()).to.respondTo('meow');
   *
   * When the target is a function, `.respondTo` asserts that the target's
   * `prototype` property has a method with the given name `method`. Again, the
   * method can be own or inherited, and it can be enumerable or non-enumerable.
   *
   *     function Cat () {}
   *     Cat.prototype.meow = function () {};
   *
   *     expect(Cat).to.respondTo('meow');
   *
   * Add `.itself` earlier in the chain to force `.respondTo` to treat the
   * target as a non-function object, even if it's a function. Thus, it asserts
   * that the target has a method with the given name `method`, rather than
   * asserting that the target's `prototype` property has a method with the
   * given name `method`.
   *
   *     function Cat () {}
   *     Cat.prototype.meow = function () {};
   *     Cat.hiss = function () {};
   *
   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');
   *
   * When not adding `.itself`, it's important to check the target's type before
   * using `.respondTo`. See the `.a` doc for info on checking a target's type.
   *
   *     function Cat () {}
   *     Cat.prototype.meow = function () {};
   *
   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');
   *
   * Add `.not` earlier in the chain to negate `.respondTo`.
   *
   *     function Dog () {}
   *     Dog.prototype.bark = function () {};
   *
   *     expect(new Dog()).to.not.respondTo('meow');
   *
   * `.respondTo` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`.
   *
   *     expect({}).to.respondTo('meow', 'nooo why fail??');
   *     expect({}, 'nooo why fail??').to.respondTo('meow');
   *
   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.
   *
   * @name respondTo
   * @alias respondsTo
   * @param {String} method
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function S(e,r){r&&o(this,"message",r);var n=o(this,"object"),i=o(this,"itself"),a="function"!=typeof n||i?n[e]:n.prototype[e];this.assert("function"==typeof a,"expected #{this} to respond to "+t.inspect(e),"expected #{this} to not respond to "+t.inspect(e))}
/**
   * ### .satisfy(matcher[, msg])
   *
   * Invokes the given `matcher` function with the target being passed as the
   * first argument, and asserts that the value returned is truthy.
   *
   *     expect(1).to.satisfy(function(num) {
   *       return num > 0;
   *     });
   *
   * Add `.not` earlier in the chain to negate `.satisfy`.
   *
   *     expect(1).to.not.satisfy(function(num) {
   *       return num > 2;
   *     });
   *
   * `.satisfy` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`.
   *
   *     expect(1).to.satisfy(function(num) {
   *       return num > 2;
   *     }, 'nooo why fail??');
   *
   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {
   *       return num > 2;
   *     });
   *
   * The alias `.satisfies` can be used interchangeably with `.satisfy`.
   *
   * @name satisfy
   * @alias satisfies
   * @param {Function} matcher
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function _(e,r){r&&o(this,"message",r);var n=e(o(this,"object"));this.assert(n,"expected #{this} to satisfy "+t.objDisplay(e),"expected #{this} to not satisfy"+t.objDisplay(e),o(this,"negate")?0:1,n)}
/**
   * ### .closeTo(expected, delta[, msg])
   *
   * Asserts that the target is a number that's within a given +/- `delta` range
   * of the given number `expected`. However, it's often best to assert that the
   * target is equal to its expected value.
   *
   *     // Recommended
   *     expect(1.5).to.equal(1.5);
   *
   *     // Not recommended
   *     expect(1.5).to.be.closeTo(1, 0.5);
   *     expect(1.5).to.be.closeTo(2, 0.5);
   *     expect(1.5).to.be.closeTo(1, 1);
   *
   * Add `.not` earlier in the chain to negate `.closeTo`.
   *
   *     expect(1.5).to.equal(1.5); // Recommended
   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended
   *
   * `.closeTo` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`.
   *
   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');
   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);
   *
   * The alias `.approximately` can be used interchangeably with `.closeTo`.
   *
   * @name closeTo
   * @alias approximately
   * @param {Number} expected
   * @param {Number} delta
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function N(e,t,i){i&&o(this,"message",i);var a=o(this,"object"),s=o(this,"message"),u=o(this,"ssfi");if(new r(a,s,u,1).is.a("number"),"number"!=typeof e||"number"!=typeof t)throw new n((s=s?s+": ":"")+"the arguments to closeTo or approximately must be numbers",void 0,u);this.assert(Math.abs(a-e)<=t,"expected #{this} to be close to "+e+" +/- "+t,"expected #{this} not to be close to "+e+" +/- "+t)}
/**
   * ### .change(subject[, prop[, msg]])
   *
   * When one argument is provided, `.change` asserts that the given function
   * `subject` returns a different value when it's invoked before the target
   * function compared to when it's invoked afterward. However, it's often best
   * to assert that `subject` is equal to its expected value.
   *
   *     var dots = ''
   *       , addDot = function () { dots += '.'; }
   *       , getDots = function () { return dots; };
   *
   *     // Recommended
   *     expect(getDots()).to.equal('');
   *     addDot();
   *     expect(getDots()).to.equal('.');
   *
   *     // Not recommended
   *     expect(addDot).to.change(getDots);
   *
   * When two arguments are provided, `.change` asserts that the value of the
   * given object `subject`'s `prop` property is different before invoking the
   * target function compared to afterward.
   *
   *     var myObj = {dots: ''}
   *       , addDot = function () { myObj.dots += '.'; };
   *
   *     // Recommended
   *     expect(myObj).to.have.property('dots', '');
   *     addDot();
   *     expect(myObj).to.have.property('dots', '.');
   *
   *     // Not recommended
   *     expect(addDot).to.change(myObj, 'dots');
   *
   * Strict (`===`) equality is used to compare before and after values.
   *
   * Add `.not` earlier in the chain to negate `.change`.
   *
   *     var dots = ''
   *       , noop = function () {}
   *       , getDots = function () { return dots; };
   *
   *     expect(noop).to.not.change(getDots);
   *
   *     var myObj = {dots: ''}
   *       , noop = function () {};
   *
   *     expect(noop).to.not.change(myObj, 'dots');
   *
   * `.change` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`. When not providing two arguments, always
   * use the second form.
   *
   *     var myObj = {dots: ''}
   *       , addDot = function () { myObj.dots += '.'; };
   *
   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');
   *
   *     var dots = ''
   *       , addDot = function () { dots += '.'; }
   *       , getDots = function () { return dots; };
   *
   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);
   *
   * `.change` also causes all `.by` assertions that follow in the chain to
   * assert how much a numeric subject was increased or decreased by. However,
   * it's dangerous to use `.change.by`. The problem is that it creates
   * uncertain expectations by asserting that the subject either increases by
   * the given delta, or that it decreases by the given delta. It's often best
   * to identify the exact output that's expected, and then write an assertion
   * that only accepts that exact output.
   *
   *     var myObj = {val: 1}
   *       , addTwo = function () { myObj.val += 2; }
   *       , subtractTwo = function () { myObj.val -= 2; };
   *
   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended
   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended
   *
   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended
   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended
   *
   * The alias `.changes` can be used interchangeably with `.change`.
   *
   * @name change
   * @alias changes
   * @param {String} subject
   * @param {String} prop name _optional_
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function D(e,t,n){n&&o(this,"message",n);var i,a=o(this,"object"),s=o(this,"message"),u=o(this,"ssfi");new r(a,s,u,1).is.a("function"),t?(new r(e,s,u,1).to.have.property(t),i=e[t]):(new r(e,s,u,1).is.a("function"),i=e()),a();var c=null==t?e():e[t],l=null==t?i:"."+t;// This gets flagged because of the .by(delta) assertion
o(this,"deltaMsgObj",l),o(this,"initialDeltaValue",i),o(this,"finalDeltaValue",c),o(this,"deltaBehavior","change"),o(this,"realDelta",c!==i),this.assert(i!==c,"expected "+l+" to change","expected "+l+" to not change")}
/**
   * ### .increase(subject[, prop[, msg]])
   *
   * When one argument is provided, `.increase` asserts that the given function
   * `subject` returns a greater number when it's invoked after invoking the
   * target function compared to when it's invoked beforehand. `.increase` also
   * causes all `.by` assertions that follow in the chain to assert how much
   * greater of a number is returned. It's often best to assert that the return
   * value increased by the expected amount, rather than asserting it increased
   * by any amount.
   *
   *     var val = 1
   *       , addTwo = function () { val += 2; }
   *       , getVal = function () { return val; };
   *
   *     expect(addTwo).to.increase(getVal).by(2); // Recommended
   *     expect(addTwo).to.increase(getVal); // Not recommended
   *
   * When two arguments are provided, `.increase` asserts that the value of the
   * given object `subject`'s `prop` property is greater after invoking the
   * target function compared to beforehand.
   *
   *     var myObj = {val: 1}
   *       , addTwo = function () { myObj.val += 2; };
   *
   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended
   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.increase`. However, it's
   * dangerous to do so. The problem is that it creates uncertain expectations
   * by asserting that the subject either decreases, or that it stays the same.
   * It's often best to identify the exact output that's expected, and then
   * write an assertion that only accepts that exact output.
   *
   * When the subject is expected to decrease, it's often best to assert that it
   * decreased by the expected amount.
   *
   *     var myObj = {val: 1}
   *       , subtractTwo = function () { myObj.val -= 2; };
   *
   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended
   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended
   *
   * When the subject is expected to stay the same, it's often best to assert
   * exactly that.
   *
   *     var myObj = {val: 1}
   *       , noop = function () {};
   *
   *     expect(noop).to.not.change(myObj, 'val'); // Recommended
   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended
   *
   * `.increase` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`. When not providing two arguments, always
   * use the second form.
   *
   *     var myObj = {val: 1}
   *       , noop = function () {};
   *
   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');
   *
   *     var val = 1
   *       , noop = function () {}
   *       , getVal = function () { return val; };
   *
   *     expect(noop, 'nooo why fail??').to.increase(getVal);
   *
   * The alias `.increases` can be used interchangeably with `.increase`.
   *
   * @name increase
   * @alias increases
   * @param {String|Function} subject
   * @param {String} prop name _optional_
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function C(e,t,n){n&&o(this,"message",n);var i,a=o(this,"object"),s=o(this,"message"),u=o(this,"ssfi");new r(a,s,u,1).is.a("function"),t?(new r(e,s,u,1).to.have.property(t),i=e[t]):(new r(e,s,u,1).is.a("function"),i=e()),// Make sure that the target is a number
new r(i,s,u,1).is.a("number"),a();var c=null==t?e():e[t],l=null==t?i:"."+t;o(this,"deltaMsgObj",l),o(this,"initialDeltaValue",i),o(this,"finalDeltaValue",c),o(this,"deltaBehavior","increase"),o(this,"realDelta",c-i),this.assert(c-i>0,"expected "+l+" to increase","expected "+l+" to not increase")}
/**
   * ### .decrease(subject[, prop[, msg]])
   *
   * When one argument is provided, `.decrease` asserts that the given function
   * `subject` returns a lesser number when it's invoked after invoking the
   * target function compared to when it's invoked beforehand. `.decrease` also
   * causes all `.by` assertions that follow in the chain to assert how much
   * lesser of a number is returned. It's often best to assert that the return
   * value decreased by the expected amount, rather than asserting it decreased
   * by any amount.
   *
   *     var val = 1
   *       , subtractTwo = function () { val -= 2; }
   *       , getVal = function () { return val; };
   *
   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended
   *     expect(subtractTwo).to.decrease(getVal); // Not recommended
   *
   * When two arguments are provided, `.decrease` asserts that the value of the
   * given object `subject`'s `prop` property is lesser after invoking the
   * target function compared to beforehand.
   *
   *     var myObj = {val: 1}
   *       , subtractTwo = function () { myObj.val -= 2; };
   *
   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended
   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.decrease`. However, it's
   * dangerous to do so. The problem is that it creates uncertain expectations
   * by asserting that the subject either increases, or that it stays the same.
   * It's often best to identify the exact output that's expected, and then
   * write an assertion that only accepts that exact output.
   *
   * When the subject is expected to increase, it's often best to assert that it
   * increased by the expected amount.
   *
   *     var myObj = {val: 1}
   *       , addTwo = function () { myObj.val += 2; };
   *
   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended
   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended
   *
   * When the subject is expected to stay the same, it's often best to assert
   * exactly that.
   *
   *     var myObj = {val: 1}
   *       , noop = function () {};
   *
   *     expect(noop).to.not.change(myObj, 'val'); // Recommended
   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended
   *
   * `.decrease` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`. When not providing two arguments, always
   * use the second form.
   *
   *     var myObj = {val: 1}
   *       , noop = function () {};
   *
   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');
   *
   *     var val = 1
   *       , noop = function () {}
   *       , getVal = function () { return val; };
   *
   *     expect(noop, 'nooo why fail??').to.decrease(getVal);
   *
   * The alias `.decreases` can be used interchangeably with `.decrease`.
   *
   * @name decrease
   * @alias decreases
   * @param {String|Function} subject
   * @param {String} prop name _optional_
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function k(e,t,n){n&&o(this,"message",n);var i,a=o(this,"object"),s=o(this,"message"),u=o(this,"ssfi");new r(a,s,u,1).is.a("function"),t?(new r(e,s,u,1).to.have.property(t),i=e[t]):(new r(e,s,u,1).is.a("function"),i=e()),// Make sure that the target is a number
new r(i,s,u,1).is.a("number"),a();var c=null==t?e():e[t],l=null==t?i:"."+t;o(this,"deltaMsgObj",l),o(this,"initialDeltaValue",i),o(this,"finalDeltaValue",c),o(this,"deltaBehavior","decrease"),o(this,"realDelta",i-c),this.assert(c-i<0,"expected "+l+" to decrease","expected "+l+" to not decrease")}["to","be","been","is","and","has","have","with","that","which","at","of","same","but","does","still"].forEach((function(e){r.addProperty(e)})),
/**
   * ### .not
   *
   * Negates all assertions that follow in the chain.
   *
   *     expect(function () {}).to.not.throw();
   *     expect({a: 1}).to.not.have.property('b');
   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);
   *
   * Just because you can negate any assertion with `.not` doesn't mean you
   * should. With great power comes great responsibility. It's often best to
   * assert that the one expected output was produced, rather than asserting
   * that one of countless unexpected outputs wasn't produced. See individual
   * assertions for specific guidance.
   *
   *     expect(2).to.equal(2); // Recommended
   *     expect(2).to.not.equal(1); // Not recommended
   *
   * @name not
   * @namespace BDD
   * @api public
   */
r.addProperty("not",(function(){o(this,"negate",1)})),
/**
   * ### .deep
   *
   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`
   * assertions that follow in the chain to use deep equality instead of strict
   * (`===`) equality. See the `deep-eql` project page for info on the deep
   * equality algorithm: https://github.com/chaijs/deep-eql.
   *
   *     // Target object deeply (but not strictly) equals `{a: 1}`
   *     expect({a: 1}).to.deep.equal({a: 1});
   *     expect({a: 1}).to.not.equal({a: 1});
   *
   *     // Target array deeply (but not strictly) includes `{a: 1}`
   *     expect([{a: 1}]).to.deep.include({a: 1});
   *     expect([{a: 1}]).to.not.include({a: 1});
   *
   *     // Target object deeply (but not strictly) includes `x: {a: 1}`
   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});
   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});
   *
   *     // Target array deeply (but not strictly) has member `{a: 1}`
   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);
   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);
   *
   *     // Target set deeply (but not strictly) has key `{a: 1}`
   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);
   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);
   *
   *     // Target object deeply (but not strictly) has property `x: {a: 1}`
   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});
   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});
   *
   * @name deep
   * @namespace BDD
   * @api public
   */
r.addProperty("deep",(function(){o(this,"deep",1)})),
/**
   * ### .nested
   *
   * Enables dot- and bracket-notation in all `.property` and `.include`
   * assertions that follow in the chain.
   *
   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');
   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});
   *
   * If `.` or `[]` are part of an actual property name, they can be escaped by
   * adding two backslashes before them.
   *
   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\.a.\\[b\\]');
   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\.a.\\[b\\]': 'x'});
   *
   * `.nested` cannot be combined with `.own`.
   *
   * @name nested
   * @namespace BDD
   * @api public
   */
r.addProperty("nested",(function(){o(this,"nested",1)})),
/**
   * ### .own
   *
   * Causes all `.property` and `.include` assertions that follow in the chain
   * to ignore inherited properties.
   *
   *     Object.prototype.b = 2;
   *
   *     expect({a: 1}).to.have.own.property('a');
   *     expect({a: 1}).to.have.property('b');
   *     expect({a: 1}).to.not.have.own.property('b');
   *
   *     expect({a: 1}).to.own.include({a: 1});
   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});
   *
   * `.own` cannot be combined with `.nested`.
   *
   * @name own
   * @namespace BDD
   * @api public
   */
r.addProperty("own",(function(){o(this,"own",1)})),
/**
   * ### .ordered
   *
   * Causes all `.members` assertions that follow in the chain to require that
   * members be in the same order.
   *
   *     expect([1, 2]).to.have.ordered.members([1, 2])
   *       .but.not.have.ordered.members([2, 1]);
   *
   * When `.include` and `.ordered` are combined, the ordering begins at the
   * start of both arrays.
   *
   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])
   *       .but.not.include.ordered.members([2, 3]);
   *
   * @name ordered
   * @namespace BDD
   * @api public
   */
r.addProperty("ordered",(function(){o(this,"ordered",1)})),
/**
   * ### .any
   *
   * Causes all `.keys` assertions that follow in the chain to only require that
   * the target have at least one of the given keys. This is the opposite of
   * `.all`, which requires that the target have all of the given keys.
   *
   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');
   *
   * See the `.keys` doc for guidance on when to use `.any` or `.all`.
   *
   * @name any
   * @namespace BDD
   * @api public
   */
r.addProperty("any",(function(){o(this,"any",1),o(this,"all",0)})),
/**
   * ### .all
   *
   * Causes all `.keys` assertions that follow in the chain to require that the
   * target have all of the given keys. This is the opposite of `.any`, which
   * only requires that the target have at least one of the given keys.
   *
   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');
   *
   * Note that `.all` is used by default when neither `.all` nor `.any` are
   * added earlier in the chain. However, it's often best to add `.all` anyway
   * because it improves readability.
   *
   * See the `.keys` doc for guidance on when to use `.any` or `.all`.
   *
   * @name all
   * @namespace BDD
   * @api public
   */
r.addProperty("all",(function(){o(this,"all",1),o(this,"any",0)})),r.addChainableMethod("an",i),r.addChainableMethod("a",i),r.addChainableMethod("include",u,s),r.addChainableMethod("contain",u,s),r.addChainableMethod("contains",u,s),r.addChainableMethod("includes",u,s),
/**
   * ### .ok
   *
   * Asserts that the target is a truthy value (considered `true` in boolean context).
   * However, it's often best to assert that the target is strictly (`===`) or
   * deeply equal to its expected value.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.be.ok; // Not recommended
   *
   *     expect(true).to.be.true; // Recommended
   *     expect(true).to.be.ok; // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.ok`.
   *
   *     expect(0).to.equal(0); // Recommended
   *     expect(0).to.not.be.ok; // Not recommended
   *
   *     expect(false).to.be.false; // Recommended
   *     expect(false).to.not.be.ok; // Not recommended
   *
   *     expect(null).to.be.null; // Recommended
   *     expect(null).to.not.be.ok; // Not recommended
   *
   *     expect(undefined).to.be.undefined; // Recommended
   *     expect(undefined).to.not.be.ok; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect(false, 'nooo why fail??').to.be.ok;
   *
   * @name ok
   * @namespace BDD
   * @api public
   */
r.addProperty("ok",(function(){this.assert(o(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy")})),
/**
   * ### .true
   *
   * Asserts that the target is strictly (`===`) equal to `true`.
   *
   *     expect(true).to.be.true;
   *
   * Add `.not` earlier in the chain to negate `.true`. However, it's often best
   * to assert that the target is equal to its expected value, rather than not
   * equal to `true`.
   *
   *     expect(false).to.be.false; // Recommended
   *     expect(false).to.not.be.true; // Not recommended
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.not.be.true; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect(false, 'nooo why fail??').to.be.true;
   *
   * @name true
   * @namespace BDD
   * @api public
   */
r.addProperty("true",(function(){this.assert(1==o(this,"object"),"expected #{this} to be true","expected #{this} to be false",o(this,"negate")?0:1)})),
/**
   * ### .false
   *
   * Asserts that the target is strictly (`===`) equal to `false`.
   *
   *     expect(false).to.be.false;
   *
   * Add `.not` earlier in the chain to negate `.false`. However, it's often
   * best to assert that the target is equal to its expected value, rather than
   * not equal to `false`.
   *
   *     expect(true).to.be.true; // Recommended
   *     expect(true).to.not.be.false; // Not recommended
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.not.be.false; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect(true, 'nooo why fail??').to.be.false;
   *
   * @name false
   * @namespace BDD
   * @api public
   */
r.addProperty("false",(function(){this.assert(0==o(this,"object"),"expected #{this} to be false","expected #{this} to be true",o(this,"negate")?1:0)})),
/**
   * ### .null
   *
   * Asserts that the target is strictly (`===`) equal to `null`.
   *
   *     expect(null).to.be.null;
   *
   * Add `.not` earlier in the chain to negate `.null`. However, it's often best
   * to assert that the target is equal to its expected value, rather than not
   * equal to `null`.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.not.be.null; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect(42, 'nooo why fail??').to.be.null;
   *
   * @name null
   * @namespace BDD
   * @api public
   */
r.addProperty("null",(function(){this.assert(null===o(this,"object"),"expected #{this} to be null","expected #{this} not to be null")})),
/**
   * ### .undefined
   *
   * Asserts that the target is strictly (`===`) equal to `undefined`.
   *
   *     expect(undefined).to.be.undefined;
   *
   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often
   * best to assert that the target is equal to its expected value, rather than
   * not equal to `undefined`.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.not.be.undefined; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect(42, 'nooo why fail??').to.be.undefined;
   *
   * @name undefined
   * @namespace BDD
   * @api public
   */
r.addProperty("undefined",(function(){this.assert(void 0===o(this,"object"),"expected #{this} to be undefined","expected #{this} not to be undefined")})),
/**
   * ### .NaN
   *
   * Asserts that the target is exactly `NaN`.
   *
   *     expect(NaN).to.be.NaN;
   *
   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best
   * to assert that the target is equal to its expected value, rather than not
   * equal to `NaN`.
   *
   *     expect('foo').to.equal('foo'); // Recommended
   *     expect('foo').to.not.be.NaN; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect(42, 'nooo why fail??').to.be.NaN;
   *
   * @name NaN
   * @namespace BDD
   * @api public
   */
r.addProperty("NaN",(function(){this.assert(t.isNaN(o(this,"object")),"expected #{this} to be NaN","expected #{this} not to be NaN")})),
/**
   * ### .exist
   *
   * Asserts that the target is not strictly (`===`) equal to either `null` or
   * `undefined`. However, it's often best to assert that the target is equal to
   * its expected value.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.exist; // Not recommended
   *
   *     expect(0).to.equal(0); // Recommended
   *     expect(0).to.exist; // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.exist`.
   *
   *     expect(null).to.be.null; // Recommended
   *     expect(null).to.not.exist; // Not recommended
   *
   *     expect(undefined).to.be.undefined; // Recommended
   *     expect(undefined).to.not.exist; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect(null, 'nooo why fail??').to.exist;
   *
   * @name exist
   * @namespace BDD
   * @api public
   */
r.addProperty("exist",(function(){var e=o(this,"object");this.assert(null!=e,"expected #{this} to exist","expected #{this} to not exist")})),
/**
   * ### .empty
   *
   * When the target is a string or array, `.empty` asserts that the target's
   * `length` property is strictly (`===`) equal to `0`.
   *
   *     expect([]).to.be.empty;
   *     expect('').to.be.empty;
   *
   * When the target is a map or set, `.empty` asserts that the target's `size`
   * property is strictly equal to `0`.
   *
   *     expect(new Set()).to.be.empty;
   *     expect(new Map()).to.be.empty;
   *
   * When the target is a non-function object, `.empty` asserts that the target
   * doesn't have any own enumerable properties. Properties with Symbol-based
   * keys are excluded from the count.
   *
   *     expect({}).to.be.empty;
   *
   * Because `.empty` does different things based on the target's type, it's
   * important to check the target's type before using `.empty`. See the `.a`
   * doc for info on testing a target's type.
   *
   *     expect([]).to.be.an('array').that.is.empty;
   *
   * Add `.not` earlier in the chain to negate `.empty`. However, it's often
   * best to assert that the target contains its expected number of values,
   * rather than asserting that it's not empty.
   *
   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended
   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended
   *
   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended
   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended
   *
   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended
   *     expect({a: 1}).to.not.be.empty; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;
   *
   * @name empty
   * @namespace BDD
   * @api public
   */
r.addProperty("empty",(function(){var e,r=o(this,"object"),i=o(this,"ssfi"),a=o(this,"message");switch(a=a?a+": ":"",t.type(r).toLowerCase()){case"array":case"string":e=r.length;break;case"map":case"set":e=r.size;break;case"weakmap":case"weakset":throw new n(a+".empty was passed a weak collection",void 0,i);case"function":var s=a+".empty was passed a function "+t.getName(r);throw new n(s.trim(),void 0,i);default:if(r!==Object(r))throw new n(a+".empty was passed non-string primitive "+t.inspect(r),void 0,i);e=Object.keys(r).length}this.assert(0===e,"expected #{this} to be empty","expected #{this} not to be empty")})),r.addProperty("arguments",c),r.addProperty("Arguments",c),r.addMethod("equal",l),r.addMethod("equals",l),r.addMethod("eq",l),r.addMethod("eql",f),r.addMethod("eqls",f),r.addMethod("above",p),r.addMethod("gt",p),r.addMethod("greaterThan",p),r.addMethod("least",h),r.addMethod("gte",h),r.addMethod("below",d),r.addMethod("lt",d),r.addMethod("lessThan",d),r.addMethod("most",g),r.addMethod("lte",g),
/**
   * ### .within(start, finish[, msg])
   *
   * Asserts that the target is a number or a date greater than or equal to the given
   * number or date `start`, and less than or equal to the given number or date `finish` respectively.
   * However, it's often best to assert that the target is equal to its expected
   * value.
   *
   *     expect(2).to.equal(2); // Recommended
   *     expect(2).to.be.within(1, 3); // Not recommended
   *     expect(2).to.be.within(2, 3); // Not recommended
   *     expect(2).to.be.within(1, 2); // Not recommended
   *
   * Add `.lengthOf` earlier in the chain to assert that the target's `length`
   * or `size` is greater than or equal to the given number `start`, and less
   * than or equal to the given number `finish`.
   *
   *     expect('foo').to.have.lengthOf(3); // Recommended
   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended
   *
   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended
   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.within`.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.not.be.within(2, 4); // Not recommended
   *
   * `.within` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`.
   *
   *     expect(4).to.be.within(1, 3, 'nooo why fail??');
   *     expect(4, 'nooo why fail??').to.be.within(1, 3);
   *
   * @name within
   * @param {Number} start lower bound inclusive
   * @param {Number} finish upper bound inclusive
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
r.addMethod("within",(function(e,i,a){a&&o(this,"message",a);var s,u=o(this,"object"),c=o(this,"doLength"),l=o(this,"message"),f=l?l+": ":"",p=o(this,"ssfi"),h=t.type(u).toLowerCase(),d=t.type(e).toLowerCase(),g=t.type(i).toLowerCase(),m=1,y="date"===d&&"date"===g?e.toUTCString()+".."+i.toUTCString():e+".."+i;if(c&&"map"!==h&&"set"!==h&&new r(u,l,p,1).to.have.property("length"),c||"date"!==h||"date"===d&&"date"===g)if("number"===d&&"number"===g||!c&&"number"!==h)if(c||"date"===h||"number"===h)m=0;else{s=f+"expected "+("string"===h?"'"+u+"'":u)+" to be a number or a date"}else s=f+"the arguments to within must be numbers";else s=f+"the arguments to within must be dates";if(m)throw new n(s,void 0,p);if(c){var v,b="length";"map"===h||"set"===h?(b="size",v=u.size):v=u.length,this.assert(v>=e&&v<=i,"expected #{this} to have a "+b+" within "+y,"expected #{this} to not have a "+b+" within "+y)}else this.assert(u>=e&&u<=i,"expected #{this} to be within "+y,"expected #{this} to not be within "+y)})),r.addMethod("instanceof",m),r.addMethod("instanceOf",m),r.addMethod("property",y),r.addMethod("ownProperty",v),r.addMethod("haveOwnProperty",v),r.addMethod("ownPropertyDescriptor",b),r.addMethod("haveOwnPropertyDescriptor",b),r.addChainableMethod("length",E,w),r.addChainableMethod("lengthOf",E,w),r.addMethod("match",A),r.addMethod("matches",A),
/**
   * ### .string(str[, msg])
   *
   * Asserts that the target string contains the given substring `str`.
   *
   *     expect('foobar').to.have.string('bar');
   *
   * Add `.not` earlier in the chain to negate `.string`.
   *
   *     expect('foobar').to.not.have.string('taco');
   *
   * `.string` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`.
   *
   *     expect('foobar').to.have.string('taco', 'nooo why fail??');
   *     expect('foobar', 'nooo why fail??').to.have.string('taco');
   *
   * @name string
   * @param {String} str
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
r.addMethod("string",(function(e,n){n&&o(this,"message",n);var i=o(this,"object"),a=o(this,"message"),s=o(this,"ssfi");new r(i,a,s,1).is.a("string"),this.assert(~i.indexOf(e),"expected #{this} to contain "+t.inspect(e),"expected #{this} to not contain "+t.inspect(e))})),r.addMethod("keys",T),r.addMethod("key",T),r.addMethod("throw",x),r.addMethod("throws",x),r.addMethod("Throw",x),r.addMethod("respondTo",S),r.addMethod("respondsTo",S),
/**
   * ### .itself
   *
   * Forces all `.respondTo` assertions that follow in the chain to behave as if
   * the target is a non-function object, even if it's a function. Thus, it
   * causes `.respondTo` to assert that the target has a method with the given
   * name, rather than asserting that the target's `prototype` property has a
   * method with the given name.
   *
   *     function Cat () {}
   *     Cat.prototype.meow = function () {};
   *     Cat.hiss = function () {};
   *
   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');
   *
   * @name itself
   * @namespace BDD
   * @api public
   */
r.addProperty("itself",(function(){o(this,"itself",1)})),r.addMethod("satisfy",_),r.addMethod("satisfies",_),r.addMethod("closeTo",N),r.addMethod("approximately",N),
/**
   * ### .members(set[, msg])
   *
   * Asserts that the target array has the same members as the given array
   * `set`.
   *
   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);
   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);
   *
   * By default, members are compared using strict (`===`) equality. Add `.deep`
   * earlier in the chain to use deep equality instead. See the `deep-eql`
   * project page for info on the deep equality algorithm:
   * https://github.com/chaijs/deep-eql.
   *
   *     // Target array deeply (but not strictly) has member `{a: 1}`
   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);
   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);
   *
   * By default, order doesn't matter. Add `.ordered` earlier in the chain to
   * require that members appear in the same order.
   *
   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);
   *     expect([1, 2, 3]).to.have.members([2, 1, 3])
   *       .but.not.ordered.members([2, 1, 3]);
   *
   * By default, both arrays must be the same size. Add `.include` earlier in
   * the chain to require that the target's members be a superset of the
   * expected members. Note that duplicates are ignored in the subset when
   * `.include` is added.
   *
   *     // Target array is a superset of [1, 2] but not identical
   *     expect([1, 2, 3]).to.include.members([1, 2]);
   *     expect([1, 2, 3]).to.not.have.members([1, 2]);
   *
   *     // Duplicates in the subset are ignored
   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);
   *
   * `.deep`, `.ordered`, and `.include` can all be combined. However, if
   * `.include` and `.ordered` are combined, the ordering begins at the start of
   * both arrays.
   *
   *     expect([{a: 1}, {b: 2}, {c: 3}])
   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])
   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);
   *
   * Add `.not` earlier in the chain to negate `.members`. However, it's
   * dangerous to do so. The problem is that it creates uncertain expectations
   * by asserting that the target array doesn't have all of the same members as
   * the given array `set` but may or may not have some of them. It's often best
   * to identify the exact output that's expected, and then write an assertion
   * that only accepts that exact output.
   *
   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended
   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended
   *
   * `.members` accepts an optional `msg` argument which is a custom error
   * message to show when the assertion fails. The message can also be given as
   * the second argument to `expect`.
   *
   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');
   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);
   *
   * @name members
   * @param {Array} set
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
r.addMethod("members",(function(e,n){n&&o(this,"message",n);var i=o(this,"object"),a=o(this,"message"),s=o(this,"ssfi");new r(i,a,s,1).to.be.an("array"),new r(e,a,s,1).to.be.an("array");var u,c,l,f=o(this,"contains"),p=o(this,"ordered");f?(c="expected #{this} to be "+(u=p?"an ordered superset":"a superset")+" of #{exp}",l="expected #{this} to not be "+u+" of #{exp}"):(c="expected #{this} to have the same "+(u=p?"ordered members":"members")+" as #{exp}",l="expected #{this} to not have the same "+u+" as #{exp}");var h=o(this,"deep")?t.eql:void 0;this.assert(// Note: Duplicates are ignored if testing for inclusion instead of sameness.
function(e,t,r,n,o){if(!n){if(e.length!==t.length)return 0;t=t.slice()}return e.every((function(e,i){if(o)return r?r(e,t[i]):e===t[i];if(!r){var a=t.indexOf(e);return-1===a?0:(// Remove match from superset so not counted twice if duplicate in subset.
n||t.splice(a,1),1)}return t.some((function(o,i){return r(e,o)?(// Remove match from superset so not counted twice if duplicate in subset.
n||t.splice(i,1),1):0}))}))}(e,i,h,f,p),c,l,e,i,1)})),r.addMethod("oneOf",(
/**
   * ### .oneOf(list[, msg])
   *
   * Asserts that the target is a member of the given array `list`. However,
   * it's often best to assert that the target is equal to its expected value.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended
   *
   * Comparisons are performed using strict (`===`) equality.
   *
   * Add `.not` earlier in the chain to negate `.oneOf`.
   *
   *     expect(1).to.equal(1); // Recommended
   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended
   *
   * `.oneOf` accepts an optional `msg` argument which is a custom error message
   * to show when the assertion fails. The message can also be given as the
   * second argument to `expect`.
   *
   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');
   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);
   *
   * @name oneOf
   * @param {Array<*>} list
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function(e,t){t&&o(this,"message",t);var n=o(this,"object"),i=o(this,"message"),a=o(this,"ssfi");new r(e,i,a,1).to.be.an("array"),this.assert(e.indexOf(n)>-1,"expected #{this} to be one of #{exp}","expected #{this} to not be one of #{exp}",e,n)})),r.addMethod("change",D),r.addMethod("changes",D),r.addMethod("increase",C),r.addMethod("increases",C),r.addMethod("decrease",k),r.addMethod("decreases",k),r.addMethod("by",(
/**
   * ### .by(delta[, msg])
   *
   * When following an `.increase` assertion in the chain, `.by` asserts that
   * the subject of the `.increase` assertion increased by the given `delta`.
   *
   *     var myObj = {val: 1}
   *       , addTwo = function () { myObj.val += 2; };
   *
   *     expect(addTwo).to.increase(myObj, 'val').by(2);
   *
   * When following a `.decrease` assertion in the chain, `.by` asserts that the
   * subject of the `.decrease` assertion decreased by the given `delta`.
   *
   *     var myObj = {val: 1}
   *       , subtractTwo = function () { myObj.val -= 2; };
   *
   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);
   *
   * When following a `.change` assertion in the chain, `.by` asserts that the
   * subject of the `.change` assertion either increased or decreased by the
   * given `delta`. However, it's dangerous to use `.change.by`. The problem is
   * that it creates uncertain expectations. It's often best to identify the
   * exact output that's expected, and then write an assertion that only accepts
   * that exact output.
   *
   *     var myObj = {val: 1}
   *       , addTwo = function () { myObj.val += 2; }
   *       , subtractTwo = function () { myObj.val -= 2; };
   *
   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended
   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended
   *
   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended
   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended
   *
   * Add `.not` earlier in the chain to negate `.by`. However, it's often best
   * to assert that the subject changed by its expected delta, rather than
   * asserting that it didn't change by one of countless unexpected deltas.
   *
   *     var myObj = {val: 1}
   *       , addTwo = function () { myObj.val += 2; };
   *
   *     // Recommended
   *     expect(addTwo).to.increase(myObj, 'val').by(2);
   *
   *     // Not recommended
   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);
   *
   * `.by` accepts an optional `msg` argument which is a custom error message to
   * show when the assertion fails. The message can also be given as the second
   * argument to `expect`.
   *
   *     var myObj = {val: 1}
   *       , addTwo = function () { myObj.val += 2; };
   *
   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');
   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);
   *
   * @name by
   * @param {Number} delta
   * @param {String} msg _optional_
   * @namespace BDD
   * @api public
   */
function(e,t){t&&o(this,"message",t);var r,n=o(this,"deltaMsgObj"),i=o(this,"initialDeltaValue"),a=o(this,"finalDeltaValue"),s=o(this,"deltaBehavior"),u=o(this,"realDelta");r="change"===s?Math.abs(a-i)===Math.abs(e):u===Math.abs(e),this.assert(r,"expected "+n+" to "+s+" by "+e,"expected "+n+" to not "+s+" by "+e)})),
/**
   * ### .extensible
   *
   * Asserts that the target is extensible, which means that new properties can
   * be added to it. Primitives are never extensible.
   *
   *     expect({a: 1}).to.be.extensible;
   *
   * Add `.not` earlier in the chain to negate `.extensible`.
   *
   *     var nonExtensibleObject = Object.preventExtensions({})
   *       , sealedObject = Object.seal({})
   *       , frozenObject = Object.freeze({});
   *
   *     expect(nonExtensibleObject).to.not.be.extensible;
   *     expect(sealedObject).to.not.be.extensible;
   *     expect(frozenObject).to.not.be.extensible;
   *     expect(1).to.not.be.extensible;
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect(1, 'nooo why fail??').to.be.extensible;
   *
   * @name extensible
   * @namespace BDD
   * @api public
   */
r.addProperty("extensible",(function(){var e=o(this,"object"),t=e===Object(e)&&Object.isExtensible(e);// In ES5, if the argument to this method is a primitive, then it will cause a TypeError.
// In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible
// The following provides ES6 behavior for ES5 environments.
this.assert(t,"expected #{this} to be extensible","expected #{this} to not be extensible")})),
/**
   * ### .sealed
   *
   * Asserts that the target is sealed, which means that new properties can't be
   * added to it, and its existing properties can't be reconfigured or deleted.
   * However, it's possible that its existing properties can still be reassigned
   * to different values. Primitives are always sealed.
   *
   *     var sealedObject = Object.seal({});
   *     var frozenObject = Object.freeze({});
   *
   *     expect(sealedObject).to.be.sealed;
   *     expect(frozenObject).to.be.sealed;
   *     expect(1).to.be.sealed;
   *
   * Add `.not` earlier in the chain to negate `.sealed`.
   *
   *     expect({a: 1}).to.not.be.sealed;
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;
   *
   * @name sealed
   * @namespace BDD
   * @api public
   */
r.addProperty("sealed",(function(){var e=o(this,"object"),t=e===Object(e)?Object.isSealed(e):1;// In ES5, if the argument to this method is a primitive, then it will cause a TypeError.
// In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.
// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed
// The following provides ES6 behavior for ES5 environments.
this.assert(t,"expected #{this} to be sealed","expected #{this} to not be sealed")})),
/**
   * ### .frozen
   *
   * Asserts that the target is frozen, which means that new properties can't be
   * added to it, and its existing properties can't be reassigned to different
   * values, reconfigured, or deleted. Primitives are always frozen.
   *
   *     var frozenObject = Object.freeze({});
   *
   *     expect(frozenObject).to.be.frozen;
   *     expect(1).to.be.frozen;
   *
   * Add `.not` earlier in the chain to negate `.frozen`.
   *
   *     expect({a: 1}).to.not.be.frozen;
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;
   *
   * @name frozen
   * @namespace BDD
   * @api public
   */
r.addProperty("frozen",(function(){var e=o(this,"object"),t=e===Object(e)?Object.isFrozen(e):1;// In ES5, if the argument to this method is a primitive, then it will cause a TypeError.
// In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.
// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen
// The following provides ES6 behavior for ES5 environments.
this.assert(t,"expected #{this} to be frozen","expected #{this} to not be frozen")})),
/**
   * ### .finite
   *
   * Asserts that the target is a number, and isn't `NaN` or positive/negative
   * `Infinity`.
   *
   *     expect(1).to.be.finite;
   *
   * Add `.not` earlier in the chain to negate `.finite`. However, it's
   * dangerous to do so. The problem is that it creates uncertain expectations
   * by asserting that the subject either isn't a number, or that it's `NaN`, or
   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often
   * best to identify the exact output that's expected, and then write an
   * assertion that only accepts that exact output.
   *
   * When the target isn't expected to be a number, it's often best to assert
   * that it's the expected type, rather than asserting that it isn't one of
   * many unexpected types.
   *
   *     expect('foo').to.be.a('string'); // Recommended
   *     expect('foo').to.not.be.finite; // Not recommended
   *
   * When the target is expected to be `NaN`, it's often best to assert exactly
   * that.
   *
   *     expect(NaN).to.be.NaN; // Recommended
   *     expect(NaN).to.not.be.finite; // Not recommended
   *
   * When the target is expected to be positive infinity, it's often best to
   * assert exactly that.
   *
   *     expect(Infinity).to.equal(Infinity); // Recommended
   *     expect(Infinity).to.not.be.finite; // Not recommended
   *
   * When the target is expected to be negative infinity, it's often best to
   * assert exactly that.
   *
   *     expect(-Infinity).to.equal(-Infinity); // Recommended
   *     expect(-Infinity).to.not.be.finite; // Not recommended
   *
   * A custom error message can be given as the second argument to `expect`.
   *
   *     expect('foo', 'nooo why fail??').to.be.finite;
   *
   * @name finite
   * @namespace BDD
   * @api public
   */
r.addProperty("finite",(function(e){var t=o(this,"object");this.assert("number"==typeof t&&isFinite(t),"expected #{this} to be a finite number","expected #{this} to not be a finite number")}))};
/***/},
/* 115 */
/***/function(e,t){
/*!
 * chai
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
e.exports=function(e,t){e.expect=function(t,r){return new e.Assertion(t,r)},
/**
   * ### .fail([message])
   * ### .fail(actual, expected, [message], [operator])
   *
   * Throw a failure.
   *
   *     expect.fail();
   *     expect.fail("custom error message");
   *     expect.fail(1, 2);
   *     expect.fail(1, 2, "custom error message");
   *     expect.fail(1, 2, "custom error message", ">");
   *     expect.fail(1, 2, undefined, ">");
   *
   * @name fail
   * @param {Mixed} actual
   * @param {Mixed} expected
   * @param {String} message
   * @param {String} operator
   * @namespace BDD
   * @api public
   */
e.expect.fail=function(t,r,n,o){throw arguments.length<2&&(n=t,t=void 0),n=n||"expect.fail()",new e.AssertionError(n,{actual:t,expected:r,operator:o},e.expect.fail)}};
/***/},
/* 116 */
/***/function(e,t){
/*!
 * chai
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
e.exports=function(e,t){var r=e.Assertion;function n(){// modify Object.prototype to have `should`
Object.defineProperty(Object.prototype,"should",{set:function(e){
// See https://github.com/chaijs/chai/issues/86: this makes
// `whatever.should = someValue` actually set `someValue`, which is
// especially useful for `global.should = require('chai').should()`.
// Note that we have to use [[DefineProperty]] instead of [[Put]]
// since otherwise we would trigger this very setter!
Object.defineProperty(this,"should",{value:e,enumerable:1,configurable:1,writable:1})},get:
// explicitly define this method as function as to have it's name to include as `ssfi`
function e(){return this instanceof String||this instanceof Number||this instanceof Boolean||"function"==typeof Symbol&&this instanceof Symbol?new r(this.valueOf(),null,e):new r(this,null,e)},configurable:1});var t={
/**
     * ### .fail([message])
     * ### .fail(actual, expected, [message], [operator])
     *
     * Throw a failure.
     *
     *     should.fail();
     *     should.fail("custom error message");
     *     should.fail(1, 2);
     *     should.fail(1, 2, "custom error message");
     *     should.fail(1, 2, "custom error message", ">");
     *     should.fail(1, 2, undefined, ">");
     *
     *
     * @name fail
     * @param {Mixed} actual
     * @param {Mixed} expected
     * @param {String} message
     * @param {String} operator
     * @namespace BDD
     * @api public
     */
fail:function(r,n,o,i){throw arguments.length<2&&(o=r,r=void 0),o=o||"should.fail()",new e.AssertionError(o,{actual:r,expected:n,operator:i},t.fail)},
/**
     * ### .equal(actual, expected, [message])
     *
     * Asserts non-strict equality (`==`) of `actual` and `expected`.
     *
     *     should.equal(3, '3', '== coerces values to strings');
     *
     * @name equal
     * @param {Mixed} actual
     * @param {Mixed} expected
     * @param {String} message
     * @namespace Should
     * @api public
     */
equal:function(e,t,n){new r(e,n).to.equal(t)},
/**
     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])
     *
     * Asserts that `function` will throw an error that is an instance of
     * `constructor`, or alternately that it will throw an error with message
     * matching `regexp`.
     *
     *     should.throw(fn, 'function throws a reference error');
     *     should.throw(fn, /function throws a reference error/);
     *     should.throw(fn, ReferenceError);
     *     should.throw(fn, ReferenceError, 'function throws a reference error');
     *     should.throw(fn, ReferenceError, /function throws a reference error/);
     *
     * @name throw
     * @alias Throw
     * @param {Function} function
     * @param {ErrorConstructor} constructor
     * @param {RegExp} regexp
     * @param {String} message
     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
     * @namespace Should
     * @api public
     */
Throw:function(e,t,n,o){new r(e,o).to.Throw(t,n)},
/**
     * ### .exist
     *
     * Asserts that the target is neither `null` nor `undefined`.
     *
     *     var foo = 'hi';
     *
     *     should.exist(foo, 'foo exists');
     *
     * @name exist
     * @namespace Should
     * @api public
     */
exist:function(e,t){new r(e,t).to.exist},// negation
not:{}};
/**
     * ### .not.equal(actual, expected, [message])
     *
     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.
     *
     *     should.not.equal(3, 4, 'these numbers are not equal');
     *
     * @name not.equal
     * @param {Mixed} actual
     * @param {Mixed} expected
     * @param {String} message
     * @namespace Should
     * @api public
     */
return t.not.equal=function(e,t,n){new r(e,n).to.not.equal(t)},
/**
     * ### .throw(function, [constructor/regexp], [message])
     *
     * Asserts that `function` will _not_ throw an error that is an instance of
     * `constructor`, or alternately that it will not throw an error with message
     * matching `regexp`.
     *
     *     should.not.throw(fn, Error, 'function does not throw');
     *
     * @name not.throw
     * @alias not.Throw
     * @param {Function} function
     * @param {ErrorConstructor} constructor
     * @param {RegExp} regexp
     * @param {String} message
     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
     * @namespace Should
     * @api public
     */
t.not.Throw=function(e,t,n,o){new r(e,o).to.not.Throw(t,n)},
/**
     * ### .not.exist
     *
     * Asserts that the target is neither `null` nor `undefined`.
     *
     *     var bar = null;
     *
     *     should.not.exist(bar, 'bar does not exist');
     *
     * @name not.exist
     * @namespace Should
     * @api public
     */
t.not.exist=function(e,t){new r(e,t).to.not.exist},t.throw=t.Throw,t.not.throw=t.not.Throw,t}e.should=n,e.Should=n};
/***/},
/* 117 */
/***/function(e,t){
/*!
 * chai
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */
e.exports=function(e,t){
/*!
   * Chai dependencies.
   */
var r=e.Assertion,n=t.flag,o=e.assert=function(t,n){new r(null,null,e.assert,1).assert(t,n,"[ negation message unavailable ]")};
/*!
   * Module export.
   */
/**
   * ### assert(expression, message)
   *
   * Write your own test expressions.
   *
   *     assert('foo' !== 'bar', 'foo is not bar');
   *     assert(Array.isArray([]), 'empty arrays are arrays');
   *
   * @param {Mixed} expression to test for truthiness
   * @param {String} message to display on error
   * @name assert
   * @namespace Assert
   * @api public
   */
/**
   * ### .fail([message])
   * ### .fail(actual, expected, [message], [operator])
   *
   * Throw a failure. Node.js `assert` module-compatible.
   *
   *     assert.fail();
   *     assert.fail("custom error message");
   *     assert.fail(1, 2);
   *     assert.fail(1, 2, "custom error message");
   *     assert.fail(1, 2, "custom error message", ">");
   *     assert.fail(1, 2, undefined, ">");
   *
   * @name fail
   * @param {Mixed} actual
   * @param {Mixed} expected
   * @param {String} message
   * @param {String} operator
   * @namespace Assert
   * @api public
   */
o.fail=function(t,r,n,i){throw arguments.length<2&&(
// Comply with Node's fail([message]) interface
n=t,t=void 0),n=n||"assert.fail()",new e.AssertionError(n,{actual:t,expected:r,operator:i},o.fail)},
/**
   * ### .isOk(object, [message])
   *
   * Asserts that `object` is truthy.
   *
   *     assert.isOk('everything', 'everything is ok');
   *     assert.isOk(false, 'this will fail');
   *
   * @name isOk
   * @alias ok
   * @param {Mixed} object to test
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isOk=function(e,t){new r(e,t,o.isOk,1).is.ok},
/**
   * ### .isNotOk(object, [message])
   *
   * Asserts that `object` is falsy.
   *
   *     assert.isNotOk('everything', 'this will fail');
   *     assert.isNotOk(false, 'this will pass');
   *
   * @name isNotOk
   * @alias notOk
   * @param {Mixed} object to test
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotOk=function(e,t){new r(e,t,o.isNotOk,1).is.not.ok},
/**
   * ### .equal(actual, expected, [message])
   *
   * Asserts non-strict equality (`==`) of `actual` and `expected`.
   *
   *     assert.equal(3, '3', '== coerces values to strings');
   *
   * @name equal
   * @param {Mixed} actual
   * @param {Mixed} expected
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.equal=function(e,t,i){var a=new r(e,i,o.equal,1);a.assert(t==n(a,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",t,e,1)},
/**
   * ### .notEqual(actual, expected, [message])
   *
   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.
   *
   *     assert.notEqual(3, 4, 'these numbers are not equal');
   *
   * @name notEqual
   * @param {Mixed} actual
   * @param {Mixed} expected
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notEqual=function(e,t,i){var a=new r(e,i,o.notEqual,1);a.assert(t!=n(a,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",t,e,1)},
/**
   * ### .strictEqual(actual, expected, [message])
   *
   * Asserts strict equality (`===`) of `actual` and `expected`.
   *
   *     assert.strictEqual(true, true, 'these booleans are strictly equal');
   *
   * @name strictEqual
   * @param {Mixed} actual
   * @param {Mixed} expected
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.strictEqual=function(e,t,n){new r(e,n,o.strictEqual,1).to.equal(t)},
/**
   * ### .notStrictEqual(actual, expected, [message])
   *
   * Asserts strict inequality (`!==`) of `actual` and `expected`.
   *
   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');
   *
   * @name notStrictEqual
   * @param {Mixed} actual
   * @param {Mixed} expected
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notStrictEqual=function(e,t,n){new r(e,n,o.notStrictEqual,1).to.not.equal(t)},
/**
   * ### .deepEqual(actual, expected, [message])
   *
   * Asserts that `actual` is deeply equal to `expected`.
   *
   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });
   *
   * @name deepEqual
   * @param {Mixed} actual
   * @param {Mixed} expected
   * @param {String} message
   * @alias deepStrictEqual
   * @namespace Assert
   * @api public
   */
o.deepEqual=o.deepStrictEqual=function(e,t,n){new r(e,n,o.deepEqual,1).to.eql(t)},
/**
   * ### .notDeepEqual(actual, expected, [message])
   *
   * Assert that `actual` is not deeply equal to `expected`.
   *
   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });
   *
   * @name notDeepEqual
   * @param {Mixed} actual
   * @param {Mixed} expected
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notDeepEqual=function(e,t,n){new r(e,n,o.notDeepEqual,1).to.not.eql(t)},
/**
  * ### .isAbove(valueToCheck, valueToBeAbove, [message])
  *
  * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.
  *
  *     assert.isAbove(5, 2, '5 is strictly greater than 2');
  *
  * @name isAbove
  * @param {Mixed} valueToCheck
  * @param {Mixed} valueToBeAbove
  * @param {String} message
  * @namespace Assert
  * @api public
  */
o.isAbove=function(e,t,n){new r(e,n,o.isAbove,1).to.be.above(t)},
/**
  * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])
  *
  * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.
  *
  *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');
  *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');
  *
  * @name isAtLeast
  * @param {Mixed} valueToCheck
  * @param {Mixed} valueToBeAtLeast
  * @param {String} message
  * @namespace Assert
  * @api public
  */
o.isAtLeast=function(e,t,n){new r(e,n,o.isAtLeast,1).to.be.least(t)},
/**
  * ### .isBelow(valueToCheck, valueToBeBelow, [message])
  *
  * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.
  *
  *     assert.isBelow(3, 6, '3 is strictly less than 6');
  *
  * @name isBelow
  * @param {Mixed} valueToCheck
  * @param {Mixed} valueToBeBelow
  * @param {String} message
  * @namespace Assert
  * @api public
  */
o.isBelow=function(e,t,n){new r(e,n,o.isBelow,1).to.be.below(t)},
/**
  * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])
  *
  * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.
  *
  *     assert.isAtMost(3, 6, '3 is less than or equal to 6');
  *     assert.isAtMost(4, 4, '4 is less than or equal to 4');
  *
  * @name isAtMost
  * @param {Mixed} valueToCheck
  * @param {Mixed} valueToBeAtMost
  * @param {String} message
  * @namespace Assert
  * @api public
  */
o.isAtMost=function(e,t,n){new r(e,n,o.isAtMost,1).to.be.most(t)},
/**
   * ### .isTrue(value, [message])
   *
   * Asserts that `value` is true.
   *
   *     var teaServed = true;
   *     assert.isTrue(teaServed, 'the tea has been served');
   *
   * @name isTrue
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isTrue=function(e,t){new r(e,t,o.isTrue,1).is.true},
/**
   * ### .isNotTrue(value, [message])
   *
   * Asserts that `value` is not true.
   *
   *     var tea = 'tasty chai';
   *     assert.isNotTrue(tea, 'great, time for tea!');
   *
   * @name isNotTrue
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotTrue=function(e,t){new r(e,t,o.isNotTrue,1).to.not.equal(1)},
/**
   * ### .isFalse(value, [message])
   *
   * Asserts that `value` is false.
   *
   *     var teaServed = false;
   *     assert.isFalse(teaServed, 'no tea yet? hmm...');
   *
   * @name isFalse
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isFalse=function(e,t){new r(e,t,o.isFalse,1).is.false},
/**
   * ### .isNotFalse(value, [message])
   *
   * Asserts that `value` is not false.
   *
   *     var tea = 'tasty chai';
   *     assert.isNotFalse(tea, 'great, time for tea!');
   *
   * @name isNotFalse
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotFalse=function(e,t){new r(e,t,o.isNotFalse,1).to.not.equal(0)},
/**
   * ### .isNull(value, [message])
   *
   * Asserts that `value` is null.
   *
   *     assert.isNull(err, 'there was no error');
   *
   * @name isNull
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNull=function(e,t){new r(e,t,o.isNull,1).to.equal(null)},
/**
   * ### .isNotNull(value, [message])
   *
   * Asserts that `value` is not null.
   *
   *     var tea = 'tasty chai';
   *     assert.isNotNull(tea, 'great, time for tea!');
   *
   * @name isNotNull
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotNull=function(e,t){new r(e,t,o.isNotNull,1).to.not.equal(null)},
/**
   * ### .isNaN
   *
   * Asserts that value is NaN.
   *
   *     assert.isNaN(NaN, 'NaN is NaN');
   *
   * @name isNaN
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNaN=function(e,t){new r(e,t,o.isNaN,1).to.be.NaN},
/**
   * ### .isNotNaN
   *
   * Asserts that value is not NaN.
   *
   *     assert.isNotNaN(4, '4 is not NaN');
   *
   * @name isNotNaN
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotNaN=function(e,t){new r(e,t,o.isNotNaN,1).not.to.be.NaN},
/**
   * ### .exists
   *
   * Asserts that the target is neither `null` nor `undefined`.
   *
   *     var foo = 'hi';
   *
   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');
   *
   * @name exists
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.exists=function(e,t){new r(e,t,o.exists,1).to.exist},
/**
   * ### .notExists
   *
   * Asserts that the target is either `null` or `undefined`.
   *
   *     var bar = null
   *       , baz;
   *
   *     assert.notExists(bar);
   *     assert.notExists(baz, 'baz is either null or undefined');
   *
   * @name notExists
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notExists=function(e,t){new r(e,t,o.notExists,1).to.not.exist},
/**
   * ### .isUndefined(value, [message])
   *
   * Asserts that `value` is `undefined`.
   *
   *     var tea;
   *     assert.isUndefined(tea, 'no tea defined');
   *
   * @name isUndefined
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isUndefined=function(e,t){new r(e,t,o.isUndefined,1).to.equal(void 0)},
/**
   * ### .isDefined(value, [message])
   *
   * Asserts that `value` is not `undefined`.
   *
   *     var tea = 'cup of chai';
   *     assert.isDefined(tea, 'tea has been defined');
   *
   * @name isDefined
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isDefined=function(e,t){new r(e,t,o.isDefined,1).to.not.equal(void 0)},
/**
   * ### .isFunction(value, [message])
   *
   * Asserts that `value` is a function.
   *
   *     function serveTea() { return 'cup of tea'; };
   *     assert.isFunction(serveTea, 'great, we can have tea now');
   *
   * @name isFunction
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isFunction=function(e,t){new r(e,t,o.isFunction,1).to.be.a("function")},
/**
   * ### .isNotFunction(value, [message])
   *
   * Asserts that `value` is _not_ a function.
   *
   *     var serveTea = [ 'heat', 'pour', 'sip' ];
   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');
   *
   * @name isNotFunction
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotFunction=function(e,t){new r(e,t,o.isNotFunction,1).to.not.be.a("function")},
/**
   * ### .isObject(value, [message])
   *
   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).
   * _The assertion does not match subclassed objects._
   *
   *     var selection = { name: 'Chai', serve: 'with spices' };
   *     assert.isObject(selection, 'tea selection is an object');
   *
   * @name isObject
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isObject=function(e,t){new r(e,t,o.isObject,1).to.be.a("object")},
/**
   * ### .isNotObject(value, [message])
   *
   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).
   *
   *     var selection = 'chai'
   *     assert.isNotObject(selection, 'tea selection is not an object');
   *     assert.isNotObject(null, 'null is not an object');
   *
   * @name isNotObject
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotObject=function(e,t){new r(e,t,o.isNotObject,1).to.not.be.a("object")},
/**
   * ### .isArray(value, [message])
   *
   * Asserts that `value` is an array.
   *
   *     var menu = [ 'green', 'chai', 'oolong' ];
   *     assert.isArray(menu, 'what kind of tea do we want?');
   *
   * @name isArray
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isArray=function(e,t){new r(e,t,o.isArray,1).to.be.an("array")},
/**
   * ### .isNotArray(value, [message])
   *
   * Asserts that `value` is _not_ an array.
   *
   *     var menu = 'green|chai|oolong';
   *     assert.isNotArray(menu, 'what kind of tea do we want?');
   *
   * @name isNotArray
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotArray=function(e,t){new r(e,t,o.isNotArray,1).to.not.be.an("array")},
/**
   * ### .isString(value, [message])
   *
   * Asserts that `value` is a string.
   *
   *     var teaOrder = 'chai';
   *     assert.isString(teaOrder, 'order placed');
   *
   * @name isString
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isString=function(e,t){new r(e,t,o.isString,1).to.be.a("string")},
/**
   * ### .isNotString(value, [message])
   *
   * Asserts that `value` is _not_ a string.
   *
   *     var teaOrder = 4;
   *     assert.isNotString(teaOrder, 'order placed');
   *
   * @name isNotString
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotString=function(e,t){new r(e,t,o.isNotString,1).to.not.be.a("string")},
/**
   * ### .isNumber(value, [message])
   *
   * Asserts that `value` is a number.
   *
   *     var cups = 2;
   *     assert.isNumber(cups, 'how many cups');
   *
   * @name isNumber
   * @param {Number} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNumber=function(e,t){new r(e,t,o.isNumber,1).to.be.a("number")},
/**
   * ### .isNotNumber(value, [message])
   *
   * Asserts that `value` is _not_ a number.
   *
   *     var cups = '2 cups please';
   *     assert.isNotNumber(cups, 'how many cups');
   *
   * @name isNotNumber
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotNumber=function(e,t){new r(e,t,o.isNotNumber,1).to.not.be.a("number")},
/**
  * ### .isFinite(value, [message])
  *
  * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.
  *
  *     var cups = 2;
  *     assert.isFinite(cups, 'how many cups');
  *
  *     assert.isFinite(NaN); // throws
  *
  * @name isFinite
  * @param {Number} value
  * @param {String} message
  * @namespace Assert
  * @api public
  */
o.isFinite=function(e,t){new r(e,t,o.isFinite,1).to.be.finite},
/**
   * ### .isBoolean(value, [message])
   *
   * Asserts that `value` is a boolean.
   *
   *     var teaReady = true
   *       , teaServed = false;
   *
   *     assert.isBoolean(teaReady, 'is the tea ready');
   *     assert.isBoolean(teaServed, 'has tea been served');
   *
   * @name isBoolean
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isBoolean=function(e,t){new r(e,t,o.isBoolean,1).to.be.a("boolean")},
/**
   * ### .isNotBoolean(value, [message])
   *
   * Asserts that `value` is _not_ a boolean.
   *
   *     var teaReady = 'yep'
   *       , teaServed = 'nope';
   *
   *     assert.isNotBoolean(teaReady, 'is the tea ready');
   *     assert.isNotBoolean(teaServed, 'has tea been served');
   *
   * @name isNotBoolean
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.isNotBoolean=function(e,t){new r(e,t,o.isNotBoolean,1).to.not.be.a("boolean")},
/**
   * ### .typeOf(value, name, [message])
   *
   * Asserts that `value`'s type is `name`, as determined by
   * `Object.prototype.toString`.
   *
   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');
   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');
   *     assert.typeOf('tea', 'string', 'we have a string');
   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');
   *     assert.typeOf(null, 'null', 'we have a null');
   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');
   *
   * @name typeOf
   * @param {Mixed} value
   * @param {String} name
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.typeOf=function(e,t,n){new r(e,n,o.typeOf,1).to.be.a(t)},
/**
   * ### .notTypeOf(value, name, [message])
   *
   * Asserts that `value`'s type is _not_ `name`, as determined by
   * `Object.prototype.toString`.
   *
   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');
   *
   * @name notTypeOf
   * @param {Mixed} value
   * @param {String} typeof name
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notTypeOf=function(e,t,n){new r(e,n,o.notTypeOf,1).to.not.be.a(t)},
/**
   * ### .instanceOf(object, constructor, [message])
   *
   * Asserts that `value` is an instance of `constructor`.
   *
   *     var Tea = function (name) { this.name = name; }
   *       , chai = new Tea('chai');
   *
   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');
   *
   * @name instanceOf
   * @param {Object} object
   * @param {Constructor} constructor
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.instanceOf=function(e,t,n){new r(e,n,o.instanceOf,1).to.be.instanceOf(t)},
/**
   * ### .notInstanceOf(object, constructor, [message])
   *
   * Asserts `value` is not an instance of `constructor`.
   *
   *     var Tea = function (name) { this.name = name; }
   *       , chai = new String('chai');
   *
   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');
   *
   * @name notInstanceOf
   * @param {Object} object
   * @param {Constructor} constructor
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notInstanceOf=function(e,t,n){new r(e,n,o.notInstanceOf,1).to.not.be.instanceOf(t)},
/**
   * ### .include(haystack, needle, [message])
   *
   * Asserts that `haystack` includes `needle`. Can be used to assert the
   * inclusion of a value in an array, a substring in a string, or a subset of
   * properties in an object.
   *
   *     assert.include([1,2,3], 2, 'array contains value');
   *     assert.include('foobar', 'foo', 'string contains substring');
   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');
   *
   * Strict equality (===) is used. When asserting the inclusion of a value in
   * an array, the array is searched for an element that's strictly equal to the
   * given value. When asserting a subset of properties in an object, the object
   * is searched for the given property keys, checking that each one is present
   * and strictly equal to the given property value. For instance:
   *
   *     var obj1 = {a: 1}
   *       , obj2 = {b: 2};
   *     assert.include([obj1, obj2], obj1);
   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});
   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});
   *
   * @name include
   * @param {Array|String} haystack
   * @param {Mixed} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.include=function(e,t,n){new r(e,n,o.include,1).include(t)},
/**
   * ### .notInclude(haystack, needle, [message])
   *
   * Asserts that `haystack` does not include `needle`. Can be used to assert
   * the absence of a value in an array, a substring in a string, or a subset of
   * properties in an object.
   *
   *     assert.notInclude([1,2,3], 4, "array doesn't contain value");
   *     assert.notInclude('foobar', 'baz', "string doesn't contain substring");
   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');
   *
   * Strict equality (===) is used. When asserting the absence of a value in an
   * array, the array is searched to confirm the absence of an element that's
   * strictly equal to the given value. When asserting a subset of properties in
   * an object, the object is searched to confirm that at least one of the given
   * property keys is either not present or not strictly equal to the given
   * property value. For instance:
   *
   *     var obj1 = {a: 1}
   *       , obj2 = {b: 2};
   *     assert.notInclude([obj1, obj2], {a: 1});
   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});
   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});
   *
   * @name notInclude
   * @param {Array|String} haystack
   * @param {Mixed} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notInclude=function(e,t,n){new r(e,n,o.notInclude,1).not.include(t)},
/**
   * ### .deepInclude(haystack, needle, [message])
   *
   * Asserts that `haystack` includes `needle`. Can be used to assert the
   * inclusion of a value in an array or a subset of properties in an object.
   * Deep equality is used.
   *
   *     var obj1 = {a: 1}
   *       , obj2 = {b: 2};
   *     assert.deepInclude([obj1, obj2], {a: 1});
   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});
   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});
   *
   * @name deepInclude
   * @param {Array|String} haystack
   * @param {Mixed} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.deepInclude=function(e,t,n){new r(e,n,o.deepInclude,1).deep.include(t)},
/**
   * ### .notDeepInclude(haystack, needle, [message])
   *
   * Asserts that `haystack` does not include `needle`. Can be used to assert
   * the absence of a value in an array or a subset of properties in an object.
   * Deep equality is used.
   *
   *     var obj1 = {a: 1}
   *       , obj2 = {b: 2};
   *     assert.notDeepInclude([obj1, obj2], {a: 9});
   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});
   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});
   *
   * @name notDeepInclude
   * @param {Array|String} haystack
   * @param {Mixed} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notDeepInclude=function(e,t,n){new r(e,n,o.notDeepInclude,1).not.deep.include(t)},
/**
   * ### .nestedInclude(haystack, needle, [message])
   *
   * Asserts that 'haystack' includes 'needle'.
   * Can be used to assert the inclusion of a subset of properties in an
   * object.
   * Enables the use of dot- and bracket-notation for referencing nested
   * properties.
   * '[]' and '.' in property names can be escaped using double backslashes.
   *
   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\.a.[b]': 'x'});
   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\[b\\]': 'x'});
   *
   * @name nestedInclude
   * @param {Object} haystack
   * @param {Object} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.nestedInclude=function(e,t,n){new r(e,n,o.nestedInclude,1).nested.include(t)},
/**
   * ### .notNestedInclude(haystack, needle, [message])
   *
   * Asserts that 'haystack' does not include 'needle'.
   * Can be used to assert the absence of a subset of properties in an
   * object.
   * Enables the use of dot- and bracket-notation for referencing nested
   * properties.
   * '[]' and '.' in property names can be escaped using double backslashes.
   *
   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\.a.b': 'y'});
   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\[b\\]': 'y'});
   *
   * @name notNestedInclude
   * @param {Object} haystack
   * @param {Object} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notNestedInclude=function(e,t,n){new r(e,n,o.notNestedInclude,1).not.nested.include(t)},
/**
   * ### .deepNestedInclude(haystack, needle, [message])
   *
   * Asserts that 'haystack' includes 'needle'.
   * Can be used to assert the inclusion of a subset of properties in an
   * object while checking for deep equality.
   * Enables the use of dot- and bracket-notation for referencing nested
   * properties.
   * '[]' and '.' in property names can be escaped using double backslashes.
   *
   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});
   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\.a.\\[b\\]': {x: 1}});
   *
   * @name deepNestedInclude
   * @param {Object} haystack
   * @param {Object} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.deepNestedInclude=function(e,t,n){new r(e,n,o.deepNestedInclude,1).deep.nested.include(t)},
/**
   * ### .notDeepNestedInclude(haystack, needle, [message])
   *
   * Asserts that 'haystack' does not include 'needle'.
   * Can be used to assert the absence of a subset of properties in an
   * object while checking for deep equality.
   * Enables the use of dot- and bracket-notation for referencing nested
   * properties.
   * '[]' and '.' in property names can be escaped using double backslashes.
   *
   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})
   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\.a.\\[b\\]': {y: 2}});
   *
   * @name notDeepNestedInclude
   * @param {Object} haystack
   * @param {Object} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notDeepNestedInclude=function(e,t,n){new r(e,n,o.notDeepNestedInclude,1).not.deep.nested.include(t)},
/**
   * ### .ownInclude(haystack, needle, [message])
   *
   * Asserts that 'haystack' includes 'needle'.
   * Can be used to assert the inclusion of a subset of properties in an
   * object while ignoring inherited properties.
   *
   *     assert.ownInclude({ a: 1 }, { a: 1 });
   *
   * @name ownInclude
   * @param {Object} haystack
   * @param {Object} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.ownInclude=function(e,t,n){new r(e,n,o.ownInclude,1).own.include(t)},
/**
   * ### .notOwnInclude(haystack, needle, [message])
   *
   * Asserts that 'haystack' includes 'needle'.
   * Can be used to assert the absence of a subset of properties in an
   * object while ignoring inherited properties.
   *
   *     Object.prototype.b = 2;
   *
   *     assert.notOwnInclude({ a: 1 }, { b: 2 });
   *
   * @name notOwnInclude
   * @param {Object} haystack
   * @param {Object} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notOwnInclude=function(e,t,n){new r(e,n,o.notOwnInclude,1).not.own.include(t)},
/**
   * ### .deepOwnInclude(haystack, needle, [message])
   *
   * Asserts that 'haystack' includes 'needle'.
   * Can be used to assert the inclusion of a subset of properties in an
   * object while ignoring inherited properties and checking for deep equality.
   *
   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});
   *
   * @name deepOwnInclude
   * @param {Object} haystack
   * @param {Object} needle
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.deepOwnInclude=function(e,t,n){new r(e,n,o.deepOwnInclude,1).deep.own.include(t)},
/**
  * ### .notDeepOwnInclude(haystack, needle, [message])
  *
  * Asserts that 'haystack' includes 'needle'.
  * Can be used to assert the absence of a subset of properties in an
  * object while ignoring inherited properties and checking for deep equality.
  *
  *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});
  *
  * @name notDeepOwnInclude
  * @param {Object} haystack
  * @param {Object} needle
  * @param {String} message
  * @namespace Assert
  * @api public
  */
o.notDeepOwnInclude=function(e,t,n){new r(e,n,o.notDeepOwnInclude,1).not.deep.own.include(t)},
/**
   * ### .match(value, regexp, [message])
   *
   * Asserts that `value` matches the regular expression `regexp`.
   *
   *     assert.match('foobar', /^foo/, 'regexp matches');
   *
   * @name match
   * @param {Mixed} value
   * @param {RegExp} regexp
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.match=function(e,t,n){new r(e,n,o.match,1).to.match(t)},
/**
   * ### .notMatch(value, regexp, [message])
   *
   * Asserts that `value` does not match the regular expression `regexp`.
   *
   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');
   *
   * @name notMatch
   * @param {Mixed} value
   * @param {RegExp} regexp
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notMatch=function(e,t,n){new r(e,n,o.notMatch,1).to.not.match(t)},
/**
   * ### .property(object, property, [message])
   *
   * Asserts that `object` has a direct or inherited property named by
   * `property`.
   *
   *     assert.property({ tea: { green: 'matcha' }}, 'tea');
   *     assert.property({ tea: { green: 'matcha' }}, 'toString');
   *
   * @name property
   * @param {Object} object
   * @param {String} property
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.property=function(e,t,n){new r(e,n,o.property,1).to.have.property(t)},
/**
   * ### .notProperty(object, property, [message])
   *
   * Asserts that `object` does _not_ have a direct or inherited property named
   * by `property`.
   *
   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');
   *
   * @name notProperty
   * @param {Object} object
   * @param {String} property
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notProperty=function(e,t,n){new r(e,n,o.notProperty,1).to.not.have.property(t)},
/**
   * ### .propertyVal(object, property, value, [message])
   *
   * Asserts that `object` has a direct or inherited property named by
   * `property` with a value given by `value`. Uses a strict equality check
   * (===).
   *
   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');
   *
   * @name propertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.propertyVal=function(e,t,n,i){new r(e,i,o.propertyVal,1).to.have.property(t,n)},
/**
   * ### .notPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` does _not_ have a direct or inherited property named
   * by `property` with value given by `value`. Uses a strict equality check
   * (===).
   *
   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');
   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');
   *
   * @name notPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notPropertyVal=function(e,t,n,i){new r(e,i,o.notPropertyVal,1).to.not.have.property(t,n)},
/**
   * ### .deepPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` has a direct or inherited property named by
   * `property` with a value given by `value`. Uses a deep equality check.
   *
   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });
   *
   * @name deepPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.deepPropertyVal=function(e,t,n,i){new r(e,i,o.deepPropertyVal,1).to.have.deep.property(t,n)},
/**
   * ### .notDeepPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` does _not_ have a direct or inherited property named
   * by `property` with value given by `value`. Uses a deep equality check.
   *
   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });
   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });
   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });
   *
   * @name notDeepPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notDeepPropertyVal=function(e,t,n,i){new r(e,i,o.notDeepPropertyVal,1).to.not.have.deep.property(t,n)},
/**
   * ### .ownProperty(object, property, [message])
   *
   * Asserts that `object` has a direct property named by `property`. Inherited
   * properties aren't checked.
   *
   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');
   *
   * @name ownProperty
   * @param {Object} object
   * @param {String} property
   * @param {String} message
   * @api public
   */
o.ownProperty=function(e,t,n){new r(e,n,o.ownProperty,1).to.have.own.property(t)},
/**
   * ### .notOwnProperty(object, property, [message])
   *
   * Asserts that `object` does _not_ have a direct property named by
   * `property`. Inherited properties aren't checked.
   *
   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');
   *     assert.notOwnProperty({}, 'toString');
   *
   * @name notOwnProperty
   * @param {Object} object
   * @param {String} property
   * @param {String} message
   * @api public
   */
o.notOwnProperty=function(e,t,n){new r(e,n,o.notOwnProperty,1).to.not.have.own.property(t)},
/**
   * ### .ownPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` has a direct property named by `property` and a value
   * equal to the provided `value`. Uses a strict equality check (===).
   * Inherited properties aren't checked.
   *
   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');
   *
   * @name ownPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @api public
   */
o.ownPropertyVal=function(e,t,n,i){new r(e,i,o.ownPropertyVal,1).to.have.own.property(t,n)},
/**
   * ### .notOwnPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` does _not_ have a direct property named by `property`
   * with a value equal to the provided `value`. Uses a strict equality check
   * (===). Inherited properties aren't checked.
   *
   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');
   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);
   *
   * @name notOwnPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @api public
   */
o.notOwnPropertyVal=function(e,t,n,i){new r(e,i,o.notOwnPropertyVal,1).to.not.have.own.property(t,n)},
/**
   * ### .deepOwnPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` has a direct property named by `property` and a value
   * equal to the provided `value`. Uses a deep equality check. Inherited
   * properties aren't checked.
   *
   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });
   *
   * @name deepOwnPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @api public
   */
o.deepOwnPropertyVal=function(e,t,n,i){new r(e,i,o.deepOwnPropertyVal,1).to.have.deep.own.property(t,n)},
/**
   * ### .notDeepOwnPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` does _not_ have a direct property named by `property`
   * with a value equal to the provided `value`. Uses a deep equality check.
   * Inherited properties aren't checked.
   *
   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });
   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });
   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });
   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);
   *
   * @name notDeepOwnPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @api public
   */
o.notDeepOwnPropertyVal=function(e,t,n,i){new r(e,i,o.notDeepOwnPropertyVal,1).to.not.have.deep.own.property(t,n)},
/**
   * ### .nestedProperty(object, property, [message])
   *
   * Asserts that `object` has a direct or inherited property named by
   * `property`, which can be a string using dot- and bracket-notation for
   * nested reference.
   *
   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');
   *
   * @name nestedProperty
   * @param {Object} object
   * @param {String} property
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.nestedProperty=function(e,t,n){new r(e,n,o.nestedProperty,1).to.have.nested.property(t)},
/**
   * ### .notNestedProperty(object, property, [message])
   *
   * Asserts that `object` does _not_ have a property named by `property`, which
   * can be a string using dot- and bracket-notation for nested reference. The
   * property cannot exist on the object nor anywhere in its prototype chain.
   *
   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');
   *
   * @name notNestedProperty
   * @param {Object} object
   * @param {String} property
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notNestedProperty=function(e,t,n){new r(e,n,o.notNestedProperty,1).to.not.have.nested.property(t)},
/**
   * ### .nestedPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` has a property named by `property` with value given
   * by `value`. `property` can use dot- and bracket-notation for nested
   * reference. Uses a strict equality check (===).
   *
   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');
   *
   * @name nestedPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.nestedPropertyVal=function(e,t,n,i){new r(e,i,o.nestedPropertyVal,1).to.have.nested.property(t,n)},
/**
   * ### .notNestedPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` does _not_ have a property named by `property` with
   * value given by `value`. `property` can use dot- and bracket-notation for
   * nested reference. Uses a strict equality check (===).
   *
   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');
   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');
   *
   * @name notNestedPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notNestedPropertyVal=function(e,t,n,i){new r(e,i,o.notNestedPropertyVal,1).to.not.have.nested.property(t,n)},
/**
   * ### .deepNestedPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` has a property named by `property` with a value given
   * by `value`. `property` can use dot- and bracket-notation for nested
   * reference. Uses a deep equality check.
   *
   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });
   *
   * @name deepNestedPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.deepNestedPropertyVal=function(e,t,n,i){new r(e,i,o.deepNestedPropertyVal,1).to.have.deep.nested.property(t,n)},
/**
   * ### .notDeepNestedPropertyVal(object, property, value, [message])
   *
   * Asserts that `object` does _not_ have a property named by `property` with
   * value given by `value`. `property` can use dot- and bracket-notation for
   * nested reference. Uses a deep equality check.
   *
   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });
   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });
   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });
   *
   * @name notDeepNestedPropertyVal
   * @param {Object} object
   * @param {String} property
   * @param {Mixed} value
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notDeepNestedPropertyVal=function(e,t,n,i){new r(e,i,o.notDeepNestedPropertyVal,1).to.not.have.deep.nested.property(t,n)},
/**
   * ### .lengthOf(object, length, [message])
   *
   * Asserts that `object` has a `length` or `size` with the expected value.
   *
   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');
   *     assert.lengthOf('foobar', 6, 'string has length of 6');
   *     assert.lengthOf(new Set([1,2,3]), 3, 'set has size of 3');
   *     assert.lengthOf(new Map([['a',1],['b',2],['c',3]]), 3, 'map has size of 3');
   *
   * @name lengthOf
   * @param {Mixed} object
   * @param {Number} length
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.lengthOf=function(e,t,n){new r(e,n,o.lengthOf,1).to.have.lengthOf(t)},
/**
   * ### .hasAnyKeys(object, [keys], [message])
   *
   * Asserts that `object` has at least one of the `keys` provided.
   * You can also provide a single object instead of a `keys` array and its keys
   * will be used as the expected set of keys.
   *
   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);
   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});
   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);
   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);
   *
   * @name hasAnyKeys
   * @param {Mixed} object
   * @param {Array|Object} keys
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.hasAnyKeys=function(e,t,n){new r(e,n,o.hasAnyKeys,1).to.have.any.keys(t)},
/**
   * ### .hasAllKeys(object, [keys], [message])
   *
   * Asserts that `object` has all and only all of the `keys` provided.
   * You can also provide a single object instead of a `keys` array and its keys
   * will be used as the expected set of keys.
   *
   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);
   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);
   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);
   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);
   *
   * @name hasAllKeys
   * @param {Mixed} object
   * @param {String[]} keys
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.hasAllKeys=function(e,t,n){new r(e,n,o.hasAllKeys,1).to.have.all.keys(t)},
/**
   * ### .containsAllKeys(object, [keys], [message])
   *
   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.
   * You can also provide a single object instead of a `keys` array and its keys
   * will be used as the expected set of keys.
   *
   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);
   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);
   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});
   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});
   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);
   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);
   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);
   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);
   *
   * @name containsAllKeys
   * @param {Mixed} object
   * @param {String[]} keys
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.containsAllKeys=function(e,t,n){new r(e,n,o.containsAllKeys,1).to.contain.all.keys(t)},
/**
   * ### .doesNotHaveAnyKeys(object, [keys], [message])
   *
   * Asserts that `object` has none of the `keys` provided.
   * You can also provide a single object instead of a `keys` array and its keys
   * will be used as the expected set of keys.
   *
   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);
   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});
   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);
   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);
   *
   * @name doesNotHaveAnyKeys
   * @param {Mixed} object
   * @param {String[]} keys
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.doesNotHaveAnyKeys=function(e,t,n){new r(e,n,o.doesNotHaveAnyKeys,1).to.not.have.any.keys(t)},
/**
   * ### .doesNotHaveAllKeys(object, [keys], [message])
   *
   * Asserts that `object` does not have at least one of the `keys` provided.
   * You can also provide a single object instead of a `keys` array and its keys
   * will be used as the expected set of keys.
   *
   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);
   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});
   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);
   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);
   *
   * @name doesNotHaveAllKeys
   * @param {Mixed} object
   * @param {String[]} keys
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.doesNotHaveAllKeys=function(e,t,n){new r(e,n,o.doesNotHaveAllKeys,1).to.not.have.all.keys(t)},
/**
   * ### .hasAnyDeepKeys(object, [keys], [message])
   *
   * Asserts that `object` has at least one of the `keys` provided.
   * Since Sets and Maps can have objects as keys you can use this assertion to perform
   * a deep comparison.
   * You can also provide a single object instead of a `keys` array and its keys
   * will be used as the expected set of keys.
   *
   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});
   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);
   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);
   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});
   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);
   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);
   *
   * @name doesNotHaveAllKeys
   * @param {Mixed} object
   * @param {Array|Object} keys
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.hasAnyDeepKeys=function(e,t,n){new r(e,n,o.hasAnyDeepKeys,1).to.have.any.deep.keys(t)},
/**
    * ### .hasAllDeepKeys(object, [keys], [message])
    *
    * Asserts that `object` has all and only all of the `keys` provided.
    * Since Sets and Maps can have objects as keys you can use this assertion to perform
    * a deep comparison.
    * You can also provide a single object instead of a `keys` array and its keys
    * will be used as the expected set of keys.
    *
    *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});
    *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);
    *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});
    *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);
    *
    * @name hasAllDeepKeys
    * @param {Mixed} object
    * @param {Array|Object} keys
    * @param {String} message
    * @namespace Assert
    * @api public
    */
o.hasAllDeepKeys=function(e,t,n){new r(e,n,o.hasAllDeepKeys,1).to.have.all.deep.keys(t)},
/**
    * ### .containsAllDeepKeys(object, [keys], [message])
    *
    * Asserts that `object` contains all of the `keys` provided.
    * Since Sets and Maps can have objects as keys you can use this assertion to perform
    * a deep comparison.
    * You can also provide a single object instead of a `keys` array and its keys
    * will be used as the expected set of keys.
    *
    *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});
    *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);
    *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});
    *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);
    *
    * @name containsAllDeepKeys
    * @param {Mixed} object
    * @param {Array|Object} keys
    * @param {String} message
    * @namespace Assert
    * @api public
    */
o.containsAllDeepKeys=function(e,t,n){new r(e,n,o.containsAllDeepKeys,1).to.contain.all.deep.keys(t)},
/**
    * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])
    *
    * Asserts that `object` has none of the `keys` provided.
    * Since Sets and Maps can have objects as keys you can use this assertion to perform
    * a deep comparison.
    * You can also provide a single object instead of a `keys` array and its keys
    * will be used as the expected set of keys.
    *
    *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});
    *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);
    *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});
    *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);
    *
    * @name doesNotHaveAnyDeepKeys
    * @param {Mixed} object
    * @param {Array|Object} keys
    * @param {String} message
    * @namespace Assert
    * @api public
    */
o.doesNotHaveAnyDeepKeys=function(e,t,n){new r(e,n,o.doesNotHaveAnyDeepKeys,1).to.not.have.any.deep.keys(t)},
/**
    * ### .doesNotHaveAllDeepKeys(object, [keys], [message])
    *
    * Asserts that `object` does not have at least one of the `keys` provided.
    * Since Sets and Maps can have objects as keys you can use this assertion to perform
    * a deep comparison.
    * You can also provide a single object instead of a `keys` array and its keys
    * will be used as the expected set of keys.
    *
    *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});
    *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);
    *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});
    *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);
    *
    * @name doesNotHaveAllDeepKeys
    * @param {Mixed} object
    * @param {Array|Object} keys
    * @param {String} message
    * @namespace Assert
    * @api public
    */
o.doesNotHaveAllDeepKeys=function(e,t,n){new r(e,n,o.doesNotHaveAllDeepKeys,1).to.not.have.all.deep.keys(t)},
/**
    * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])
    *
    * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an
    * instance of `errorLike`.
    * If `errorLike` is an `Error` instance, asserts that the error thrown is the same
    * instance as `errorLike`.
    * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a
    * message matching `errMsgMatcher`.
    *
    *     assert.throws(fn, 'Error thrown must have this msg');
    *     assert.throws(fn, /Error thrown must have a msg that matches this/);
    *     assert.throws(fn, ReferenceError);
    *     assert.throws(fn, errorInstance);
    *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');
    *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');
    *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);
    *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);
    *
    * @name throws
    * @alias throw
    * @alias Throw
    * @param {Function} fn
    * @param {ErrorConstructor|Error} errorLike
    * @param {RegExp|String} errMsgMatcher
    * @param {String} message
    * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
    * @namespace Assert
    * @api public
    */
o.throws=function(e,t,i,a){("string"==typeof t||t instanceof RegExp)&&(i=t,t=null);var s=new r(e,a,o.throws,1).to.throw(t,i);return n(s,"object")},
/**
   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])
   *
   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an
   * instance of `errorLike`.
   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same
   * instance as `errorLike`.
   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a
   * message matching `errMsgMatcher`.
   *
   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');
   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);
   *     assert.doesNotThrow(fn, Error);
   *     assert.doesNotThrow(fn, errorInstance);
   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');
   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');
   *     assert.doesNotThrow(fn, Error, /Error must not match this/);
   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);
   *
   * @name doesNotThrow
   * @param {Function} fn
   * @param {ErrorConstructor} errorLike
   * @param {RegExp|String} errMsgMatcher
   * @param {String} message
   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
   * @namespace Assert
   * @api public
   */
o.doesNotThrow=function(e,t,n,i){("string"==typeof t||t instanceof RegExp)&&(n=t,t=null),new r(e,i,o.doesNotThrow,1).to.not.throw(t,n)},
/**
   * ### .operator(val1, operator, val2, [message])
   *
   * Compares two values using `operator`.
   *
   *     assert.operator(1, '<', 2, 'everything is ok');
   *     assert.operator(1, '>', 2, 'this will fail');
   *
   * @name operator
   * @param {Mixed} val1
   * @param {String} operator
   * @param {Mixed} val2
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.operator=function(i,a,s,u){var c;switch(a){case"==":c=i==s;break;case"===":c=i===s;break;case">":c=i>s;break;case">=":c=i>=s;break;case"<":c=i<s;break;case"<=":c=i<=s;break;case"!=":c=i!=s;break;case"!==":c=i!==s;break;default:throw u=u?u+": ":u,new e.AssertionError(u+'Invalid operator "'+a+'"',void 0,o.operator)}var l=new r(c,u,o.operator,1);l.assert(1==n(l,"object"),"expected "+t.inspect(i)+" to be "+a+" "+t.inspect(s),"expected "+t.inspect(i)+" to not be "+a+" "+t.inspect(s))},
/**
   * ### .closeTo(actual, expected, delta, [message])
   *
   * Asserts that the target is equal `expected`, to within a +/- `delta` range.
   *
   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');
   *
   * @name closeTo
   * @param {Number} actual
   * @param {Number} expected
   * @param {Number} delta
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.closeTo=function(e,t,n,i){new r(e,i,o.closeTo,1).to.be.closeTo(t,n)},
/**
   * ### .approximately(actual, expected, delta, [message])
   *
   * Asserts that the target is equal `expected`, to within a +/- `delta` range.
   *
   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');
   *
   * @name approximately
   * @param {Number} actual
   * @param {Number} expected
   * @param {Number} delta
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.approximately=function(e,t,n,i){new r(e,i,o.approximately,1).to.be.approximately(t,n)},
/**
   * ### .sameMembers(set1, set2, [message])
   *
   * Asserts that `set1` and `set2` have the same members in any order. Uses a
   * strict equality check (===).
   *
   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');
   *
   * @name sameMembers
   * @param {Array} set1
   * @param {Array} set2
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.sameMembers=function(e,t,n){new r(e,n,o.sameMembers,1).to.have.same.members(t)},
/**
   * ### .notSameMembers(set1, set2, [message])
   *
   * Asserts that `set1` and `set2` don't have the same members in any order.
   * Uses a strict equality check (===).
   *
   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');
   *
   * @name notSameMembers
   * @param {Array} set1
   * @param {Array} set2
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notSameMembers=function(e,t,n){new r(e,n,o.notSameMembers,1).to.not.have.same.members(t)},
/**
   * ### .sameDeepMembers(set1, set2, [message])
   *
   * Asserts that `set1` and `set2` have the same members in any order. Uses a
   * deep equality check.
   *
   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');
   *
   * @name sameDeepMembers
   * @param {Array} set1
   * @param {Array} set2
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.sameDeepMembers=function(e,t,n){new r(e,n,o.sameDeepMembers,1).to.have.same.deep.members(t)},
/**
   * ### .notSameDeepMembers(set1, set2, [message])
   *
   * Asserts that `set1` and `set2` don't have the same members in any order.
   * Uses a deep equality check.
   *
   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');
   *
   * @name notSameDeepMembers
   * @param {Array} set1
   * @param {Array} set2
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notSameDeepMembers=function(e,t,n){new r(e,n,o.notSameDeepMembers,1).to.not.have.same.deep.members(t)},
/**
   * ### .sameOrderedMembers(set1, set2, [message])
   *
   * Asserts that `set1` and `set2` have the same members in the same order.
   * Uses a strict equality check (===).
   *
   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');
   *
   * @name sameOrderedMembers
   * @param {Array} set1
   * @param {Array} set2
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.sameOrderedMembers=function(e,t,n){new r(e,n,o.sameOrderedMembers,1).to.have.same.ordered.members(t)},
/**
   * ### .notSameOrderedMembers(set1, set2, [message])
   *
   * Asserts that `set1` and `set2` don't have the same members in the same
   * order. Uses a strict equality check (===).
   *
   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');
   *
   * @name notSameOrderedMembers
   * @param {Array} set1
   * @param {Array} set2
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notSameOrderedMembers=function(e,t,n){new r(e,n,o.notSameOrderedMembers,1).to.not.have.same.ordered.members(t)},
/**
   * ### .sameDeepOrderedMembers(set1, set2, [message])
   *
   * Asserts that `set1` and `set2` have the same members in the same order.
   * Uses a deep equality check.
   *
   * assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');
   *
   * @name sameDeepOrderedMembers
   * @param {Array} set1
   * @param {Array} set2
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.sameDeepOrderedMembers=function(e,t,n){new r(e,n,o.sameDeepOrderedMembers,1).to.have.same.deep.ordered.members(t)},
/**
   * ### .notSameDeepOrderedMembers(set1, set2, [message])
   *
   * Asserts that `set1` and `set2` don't have the same members in the same
   * order. Uses a deep equality check.
   *
   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');
   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');
   *
   * @name notSameDeepOrderedMembers
   * @param {Array} set1
   * @param {Array} set2
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notSameDeepOrderedMembers=function(e,t,n){new r(e,n,o.notSameDeepOrderedMembers,1).to.not.have.same.deep.ordered.members(t)},
/**
   * ### .includeMembers(superset, subset, [message])
   *
   * Asserts that `subset` is included in `superset` in any order. Uses a
   * strict equality check (===). Duplicates are ignored.
   *
   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');
   *
   * @name includeMembers
   * @param {Array} superset
   * @param {Array} subset
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.includeMembers=function(e,t,n){new r(e,n,o.includeMembers,1).to.include.members(t)},
/**
   * ### .notIncludeMembers(superset, subset, [message])
   *
   * Asserts that `subset` isn't included in `superset` in any order. Uses a
   * strict equality check (===). Duplicates are ignored.
   *
   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');
   *
   * @name notIncludeMembers
   * @param {Array} superset
   * @param {Array} subset
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notIncludeMembers=function(e,t,n){new r(e,n,o.notIncludeMembers,1).to.not.include.members(t)},
/**
   * ### .includeDeepMembers(superset, subset, [message])
   *
   * Asserts that `subset` is included in `superset` in any order. Uses a deep
   * equality check. Duplicates are ignored.
   *
   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');
   *
   * @name includeDeepMembers
   * @param {Array} superset
   * @param {Array} subset
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.includeDeepMembers=function(e,t,n){new r(e,n,o.includeDeepMembers,1).to.include.deep.members(t)},
/**
   * ### .notIncludeDeepMembers(superset, subset, [message])
   *
   * Asserts that `subset` isn't included in `superset` in any order. Uses a
   * deep equality check. Duplicates are ignored.
   *
   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');
   *
   * @name notIncludeDeepMembers
   * @param {Array} superset
   * @param {Array} subset
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notIncludeDeepMembers=function(e,t,n){new r(e,n,o.notIncludeDeepMembers,1).to.not.include.deep.members(t)},
/**
   * ### .includeOrderedMembers(superset, subset, [message])
   *
   * Asserts that `subset` is included in `superset` in the same order
   * beginning with the first element in `superset`. Uses a strict equality
   * check (===).
   *
   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');
   *
   * @name includeOrderedMembers
   * @param {Array} superset
   * @param {Array} subset
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.includeOrderedMembers=function(e,t,n){new r(e,n,o.includeOrderedMembers,1).to.include.ordered.members(t)},
/**
   * ### .notIncludeOrderedMembers(superset, subset, [message])
   *
   * Asserts that `subset` isn't included in `superset` in the same order
   * beginning with the first element in `superset`. Uses a strict equality
   * check (===).
   *
   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');
   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');
   *
   * @name notIncludeOrderedMembers
   * @param {Array} superset
   * @param {Array} subset
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notIncludeOrderedMembers=function(e,t,n){new r(e,n,o.notIncludeOrderedMembers,1).to.not.include.ordered.members(t)},
/**
   * ### .includeDeepOrderedMembers(superset, subset, [message])
   *
   * Asserts that `subset` is included in `superset` in the same order
   * beginning with the first element in `superset`. Uses a deep equality
   * check.
   *
   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');
   *
   * @name includeDeepOrderedMembers
   * @param {Array} superset
   * @param {Array} subset
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.includeDeepOrderedMembers=function(e,t,n){new r(e,n,o.includeDeepOrderedMembers,1).to.include.deep.ordered.members(t)},
/**
   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])
   *
   * Asserts that `subset` isn't included in `superset` in the same order
   * beginning with the first element in `superset`. Uses a deep equality
   * check.
   *
   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');
   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');
   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');
   *
   * @name notIncludeDeepOrderedMembers
   * @param {Array} superset
   * @param {Array} subset
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.notIncludeDeepOrderedMembers=function(e,t,n){new r(e,n,o.notIncludeDeepOrderedMembers,1).to.not.include.deep.ordered.members(t)},
/**
   * ### .oneOf(inList, list, [message])
   *
   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.
   *
   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');
   *
   * @name oneOf
   * @param {*} inList
   * @param {Array<*>} list
   * @param {String} message
   * @namespace Assert
   * @api public
   */
o.oneOf=function(e,t,n){new r(e,n,o.oneOf,1).to.be.oneOf(t)},
/**
   * ### .changes(function, object, property, [message])
   *
   * Asserts that a function changes the value of a property.
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val = 22 };
   *     assert.changes(fn, obj, 'val');
   *
   * @name changes
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.changes=function(e,t,n,i){3===arguments.length&&"function"==typeof t&&(i=n,n=null),new r(e,i,o.changes,1).to.change(t,n)},
/**
  * ### .changesBy(function, object, property, delta, [message])
  *
  * Asserts that a function changes the value of a property by an amount (delta).
  *
  *     var obj = { val: 10 };
  *     var fn = function() { obj.val += 2 };
  *     assert.changesBy(fn, obj, 'val', 2);
  *
  * @name changesBy
  * @param {Function} modifier function
  * @param {Object} object or getter function
  * @param {String} property name _optional_
  * @param {Number} change amount (delta)
  * @param {String} message _optional_
  * @namespace Assert
  * @api public
  */
o.changesBy=function(e,t,n,i,a){if(4===arguments.length&&"function"==typeof t){var s=i;i=n,a=s}else 3===arguments.length&&(i=n,n=null);new r(e,a,o.changesBy,1).to.change(t,n).by(i)},
/**
  * ### .doesNotChange(function, object, property, [message])
  *
  * Asserts that a function does not change the value of a property.
  *
  *     var obj = { val: 10 };
  *     var fn = function() { console.log('foo'); };
  *     assert.doesNotChange(fn, obj, 'val');
  *
  * @name doesNotChange
  * @param {Function} modifier function
  * @param {Object} object or getter function
  * @param {String} property name _optional_
  * @param {String} message _optional_
  * @namespace Assert
  * @api public
  */
o.doesNotChange=function(e,t,n,i){return 3===arguments.length&&"function"==typeof t&&(i=n,n=null),new r(e,i,o.doesNotChange,1).to.not.change(t,n)},
/**
   * ### .changesButNotBy(function, object, property, delta, [message])
   *
   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val += 10 };
   *     assert.changesButNotBy(fn, obj, 'val', 5);
   *
   * @name changesButNotBy
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {Number} change amount (delta)
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.changesButNotBy=function(e,t,n,i,a){if(4===arguments.length&&"function"==typeof t){var s=i;i=n,a=s}else 3===arguments.length&&(i=n,n=null);new r(e,a,o.changesButNotBy,1).to.change(t,n).but.not.by(i)},
/**
   * ### .increases(function, object, property, [message])
   *
   * Asserts that a function increases a numeric object property.
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val = 13 };
   *     assert.increases(fn, obj, 'val');
   *
   * @name increases
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.increases=function(e,t,n,i){return 3===arguments.length&&"function"==typeof t&&(i=n,n=null),new r(e,i,o.increases,1).to.increase(t,n)},
/**
   * ### .increasesBy(function, object, property, delta, [message])
   *
   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val += 10 };
   *     assert.increasesBy(fn, obj, 'val', 10);
   *
   * @name increasesBy
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {Number} change amount (delta)
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.increasesBy=function(e,t,n,i,a){if(4===arguments.length&&"function"==typeof t){var s=i;i=n,a=s}else 3===arguments.length&&(i=n,n=null);new r(e,a,o.increasesBy,1).to.increase(t,n).by(i)},
/**
   * ### .doesNotIncrease(function, object, property, [message])
   *
   * Asserts that a function does not increase a numeric object property.
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val = 8 };
   *     assert.doesNotIncrease(fn, obj, 'val');
   *
   * @name doesNotIncrease
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.doesNotIncrease=function(e,t,n,i){return 3===arguments.length&&"function"==typeof t&&(i=n,n=null),new r(e,i,o.doesNotIncrease,1).to.not.increase(t,n)},
/**
   * ### .increasesButNotBy(function, object, property, [message])
   *
   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val = 15 };
   *     assert.increasesButNotBy(fn, obj, 'val', 10);
   *
   * @name increasesButNotBy
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {Number} change amount (delta)
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.increasesButNotBy=function(e,t,n,i,a){if(4===arguments.length&&"function"==typeof t){var s=i;i=n,a=s}else 3===arguments.length&&(i=n,n=null);new r(e,a,o.increasesButNotBy,1).to.increase(t,n).but.not.by(i)},
/**
   * ### .decreases(function, object, property, [message])
   *
   * Asserts that a function decreases a numeric object property.
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val = 5 };
   *     assert.decreases(fn, obj, 'val');
   *
   * @name decreases
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.decreases=function(e,t,n,i){return 3===arguments.length&&"function"==typeof t&&(i=n,n=null),new r(e,i,o.decreases,1).to.decrease(t,n)},
/**
   * ### .decreasesBy(function, object, property, delta, [message])
   *
   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val -= 5 };
   *     assert.decreasesBy(fn, obj, 'val', 5);
   *
   * @name decreasesBy
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {Number} change amount (delta)
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.decreasesBy=function(e,t,n,i,a){if(4===arguments.length&&"function"==typeof t){var s=i;i=n,a=s}else 3===arguments.length&&(i=n,n=null);new r(e,a,o.decreasesBy,1).to.decrease(t,n).by(i)},
/**
   * ### .doesNotDecrease(function, object, property, [message])
   *
   * Asserts that a function does not decreases a numeric object property.
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val = 15 };
   *     assert.doesNotDecrease(fn, obj, 'val');
   *
   * @name doesNotDecrease
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.doesNotDecrease=function(e,t,n,i){return 3===arguments.length&&"function"==typeof t&&(i=n,n=null),new r(e,i,o.doesNotDecrease,1).to.not.decrease(t,n)},
/**
   * ### .doesNotDecreaseBy(function, object, property, delta, [message])
   *
   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val = 5 };
   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);
   *
   * @name doesNotDecrease
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {Number} change amount (delta)
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.doesNotDecreaseBy=function(e,t,n,i,a){if(4===arguments.length&&"function"==typeof t){var s=i;i=n,a=s}else 3===arguments.length&&(i=n,n=null);return new r(e,a,o.doesNotDecreaseBy,1).to.not.decrease(t,n).by(i)},
/**
   * ### .decreasesButNotBy(function, object, property, delta, [message])
   *
   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)
   *
   *     var obj = { val: 10 };
   *     var fn = function() { obj.val = 5 };
   *     assert.decreasesButNotBy(fn, obj, 'val', 1);
   *
   * @name decreasesButNotBy
   * @param {Function} modifier function
   * @param {Object} object or getter function
   * @param {String} property name _optional_
   * @param {Number} change amount (delta)
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.decreasesButNotBy=function(e,t,n,i,a){if(4===arguments.length&&"function"==typeof t){var s=i;i=n,a=s}else 3===arguments.length&&(i=n,n=null);new r(e,a,o.decreasesButNotBy,1).to.decrease(t,n).but.not.by(i)},
/*!
   * ### .ifError(object)
   *
   * Asserts if value is not a false value, and throws if it is a true value.
   * This is added to allow for chai to be a drop-in replacement for Node's
   * assert class.
   *
   *     var err = new Error('I am a custom error');
   *     assert.ifError(err); // Rethrows err!
   *
   * @name ifError
   * @param {Object} object
   * @namespace Assert
   * @api public
   */
o.ifError=function(e){if(e)throw e},
/**
   * ### .isExtensible(object)
   *
   * Asserts that `object` is extensible (can have new properties added to it).
   *
   *     assert.isExtensible({});
   *
   * @name isExtensible
   * @alias extensible
   * @param {Object} object
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.isExtensible=function(e,t){new r(e,t,o.isExtensible,1).to.be.extensible},
/**
   * ### .isNotExtensible(object)
   *
   * Asserts that `object` is _not_ extensible.
   *
   *     var nonExtensibleObject = Object.preventExtensions({});
   *     var sealedObject = Object.seal({});
   *     var frozenObject = Object.freeze({});
   *
   *     assert.isNotExtensible(nonExtensibleObject);
   *     assert.isNotExtensible(sealedObject);
   *     assert.isNotExtensible(frozenObject);
   *
   * @name isNotExtensible
   * @alias notExtensible
   * @param {Object} object
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.isNotExtensible=function(e,t){new r(e,t,o.isNotExtensible,1).to.not.be.extensible},
/**
   * ### .isSealed(object)
   *
   * Asserts that `object` is sealed (cannot have new properties added to it
   * and its existing properties cannot be removed).
   *
   *     var sealedObject = Object.seal({});
   *     var frozenObject = Object.seal({});
   *
   *     assert.isSealed(sealedObject);
   *     assert.isSealed(frozenObject);
   *
   * @name isSealed
   * @alias sealed
   * @param {Object} object
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.isSealed=function(e,t){new r(e,t,o.isSealed,1).to.be.sealed},
/**
   * ### .isNotSealed(object)
   *
   * Asserts that `object` is _not_ sealed.
   *
   *     assert.isNotSealed({});
   *
   * @name isNotSealed
   * @alias notSealed
   * @param {Object} object
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.isNotSealed=function(e,t){new r(e,t,o.isNotSealed,1).to.not.be.sealed},
/**
   * ### .isFrozen(object)
   *
   * Asserts that `object` is frozen (cannot have new properties added to it
   * and its existing properties cannot be modified).
   *
   *     var frozenObject = Object.freeze({});
   *     assert.frozen(frozenObject);
   *
   * @name isFrozen
   * @alias frozen
   * @param {Object} object
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.isFrozen=function(e,t){new r(e,t,o.isFrozen,1).to.be.frozen},
/**
   * ### .isNotFrozen(object)
   *
   * Asserts that `object` is _not_ frozen.
   *
   *     assert.isNotFrozen({});
   *
   * @name isNotFrozen
   * @alias notFrozen
   * @param {Object} object
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.isNotFrozen=function(e,t){new r(e,t,o.isNotFrozen,1).to.not.be.frozen},
/**
   * ### .isEmpty(target)
   *
   * Asserts that the target does not contain any values.
   * For arrays and strings, it checks the `length` property.
   * For `Map` and `Set` instances, it checks the `size` property.
   * For non-function objects, it gets the count of own
   * enumerable string keys.
   *
   *     assert.isEmpty([]);
   *     assert.isEmpty('');
   *     assert.isEmpty(new Map);
   *     assert.isEmpty({});
   *
   * @name isEmpty
   * @alias empty
   * @param {Object|Array|String|Map|Set} target
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.isEmpty=function(e,t){new r(e,t,o.isEmpty,1).to.be.empty},
/**
   * ### .isNotEmpty(target)
   *
   * Asserts that the target contains values.
   * For arrays and strings, it checks the `length` property.
   * For `Map` and `Set` instances, it checks the `size` property.
   * For non-function objects, it gets the count of own
   * enumerable string keys.
   *
   *     assert.isNotEmpty([1, 2]);
   *     assert.isNotEmpty('34');
   *     assert.isNotEmpty(new Set([5, 6]));
   *     assert.isNotEmpty({ key: 7 });
   *
   * @name isNotEmpty
   * @alias notEmpty
   * @param {Object|Array|String|Map|Set} target
   * @param {String} message _optional_
   * @namespace Assert
   * @api public
   */
o.isNotEmpty=function(e,t){new r(e,t,o.isNotEmpty,1).to.not.be.empty},
/*!
   * Aliases.
   */
function e(t,r){return o[r]=o[t],e}("isOk","ok")("isNotOk","notOk")("throws","throw")("throws","Throw")("isExtensible","extensible")("isNotExtensible","notExtensible")("isSealed","sealed")("isNotSealed","notSealed")("isFrozen","frozen")("isNotFrozen","notFrozen")("isEmpty","empty")("isNotEmpty","notEmpty")};
/***/},
/* 118 */
/***/function(e,t,r){"use strict";
/* eslint-disable no-var */var n=r(119),o=window.mocha||n;
/* global window document */
window.addEventListener("DOMContentLoaded",(function(){if(!document.getElementById("mocha")){
// eslint-disable-next-line
var e=document.createElement("div");e.id="mocha",document.body.appendChild(e)}o.run()}))},
/* 119 */
/***/function(e,t,r){
/* WEBPACK VAR INJECTION */(function(t){var r;r=function(){"use strict";var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t?t:"undefined"!=typeof self?self:{};function r(e,t,r){return e(r={path:t,exports:{},require:function(e,t){return o(null==t&&r.path)}},r.exports),r.exports}function n(e){return e&&e.default||e}function o(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var i=function(e){return e&&e.Math==Math&&e},a=// eslint-disable-next-line no-undef
i("object"==typeof globalThis&&globalThis)||i("object"==typeof window&&window)||i("object"==typeof self&&self)||i("object"==typeof e&&e)||// eslint-disable-next-line no-new-func
Function("return this")(),s=function(e){try{return!!e()}catch(e){return 1}},u=!s((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),c={}.propertyIsEnumerable,l=Object.getOwnPropertyDescriptor,f={f:l&&!c.call({1:2},1)?function(e){var t=l(this,e);return!!t&&t.enumerable}:c},p=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},h={}.toString,d=function(e){return h.call(e).slice(8,-1)},g="".split,m=s((function(){// throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
// eslint-disable-next-line no-prototype-builtins
return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==d(e)?g.call(e,""):Object(e)}:Object,y=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},v=function(e){return m(y(e))},b=function(e){return"object"==typeof e?null!==e:"function"==typeof e},w=function(e,t){if(!b(e))return e;var r,n;if(t&&"function"==typeof(r=e.toString)&&!b(n=r.call(e)))return n;if("function"==typeof(r=e.valueOf)&&!b(n=r.call(e)))return n;if(!t&&"function"==typeof(r=e.toString)&&!b(n=r.call(e)))return n;throw TypeError("Can't convert object to primitive value")},E={}.hasOwnProperty,A=function(e,t){return E.call(e,t)},T=a.document,x=b(T)&&b(T.createElement),S=function(e){return x?T.createElement(e):{}},_=!u&&!s((function(){return 7!=Object.defineProperty(S("div"),"a",{get:function(){return 7}}).a})),N=Object.getOwnPropertyDescriptor,D={f:u?N:function(e,t){if(e=v(e),t=w(t,1),_)try{return N(e,t)}catch(e){/* empty */}if(A(e,t))return p(!f.f.call(e,t),e[t])}},C=function(e){if(!b(e))throw TypeError(String(e)+" is not an object");return e},k=Object.defineProperty,O={f:u?k:function(e,t,r){if(C(e),t=w(t,1),C(r),_)try{return k(e,t,r)}catch(e){/* empty */}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},R=u?function(e,t,r){return O.f(e,t,p(1,r))}:function(e,t,r){return e[t]=r,e},L=function(e,t){try{R(a,e,t)}catch(r){a[e]=t}return t},q=a["__core-js_shared__"]||L("__core-js_shared__",{}),I=Function.toString;// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
"function"!=typeof q.inspectSource&&(q.inspectSource=function(e){return I.call(e)});var B,P,j,F=q.inspectSource,U=a.WeakMap,V="function"==typeof U&&/native code/.test(F(U)),M=r((function(e){(e.exports=function(e,t){return q[e]||(q[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.5",mode:"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})})),H=0,z=Math.random(),G=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++H+z).toString(36)},Y=M("keys"),W=function(e){return Y[e]||(Y[e]=G(e))},$={},J=a.WeakMap;if(V){var K=new J,Z=K.get,Q=K.has,X=K.set;B=function(e,t){return X.call(K,e,t),t},P=function(e){return Z.call(K,e)||{}},j=function(e){return Q.call(K,e)}}else{var ee=W("state");$[ee]=1,B=function(e,t){return R(e,ee,t),t},P=function(e){return A(e,ee)?e[ee]:{}},j=function(e){return A(e,ee)}}var te,re,ne={set:B,get:P,has:j,enforce:function(e){return j(e)?P(e):B(e,{})},getterFor:function(e){return function(t){var r;if(!b(t)||(r=P(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return r}}},oe=r((function(e){var t=ne.get,r=ne.enforce,n=String(String).split("String");(e.exports=function(e,t,o,i){var s=i?!!i.unsafe:0,u=i?!!i.enumerable:0,c=i?!!i.noTargetGet:0;"function"==typeof o&&("string"!=typeof t||A(o,"name")||R(o,"name",t),r(o).source=n.join("string"==typeof t?t:"")),e!==a?(s?!c&&e[t]&&(u=1):delete e[t],u?e[t]=o:R(e,t,o)):u?e[t]=o:L(t,o)})(Function.prototype,"toString",(function(){return"function"==typeof this&&t(this).source||F(this)}))})),ie=a,ae=function(e){return"function"==typeof e?e:void 0},se=function(e,t){return arguments.length<2?ae(ie[e])||ae(a[e]):ie[e]&&ie[e][t]||a[e]&&a[e][t]},ue=Math.ceil,ce=Math.floor,le=function(e){return isNaN(e=+e)?0:(e>0?ce:ue)(e)},fe=Math.min,pe=function(e){return e>0?fe(le(e),9007199254740991):0;// 2 ** 53 - 1 == 9007199254740991
},he=Math.max,de=Math.min,ge=function(e,t){var r=le(e);return r<0?he(r+t,0):de(r,t)},me=function(e){return function(t,r,n){var o,i=v(t),a=pe(i.length),s=ge(n,a);// Array#includes uses SameValueZero equality algorithm
// eslint-disable-next-line no-self-compare
if(e&&r!=r){for(;a>s;)// eslint-disable-next-line no-self-compare
if((o=i[s++])!=o)return 1;// Array#indexOf ignores holes, Array#includes - not
}else for(;a>s;s++)if((e||s in i)&&i[s]===r)return e||s||0;return!e&&-1}},ye={// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
includes:me(1),// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
indexOf:me(0)},ve=ye.indexOf,be=function(e,t){var r,n=v(e),o=0,i=[];for(r in n)!A($,r)&&A(n,r)&&i.push(r);// Don't enum bug & hidden keys
for(;t.length>o;)A(n,r=t[o++])&&(~ve(i,r)||i.push(r));return i},we=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Ee=we.concat("length","prototype"),Ae={f:Object.getOwnPropertyNames||function(e){return be(e,Ee)}},Te={f:Object.getOwnPropertySymbols},xe=se("Reflect","ownKeys")||function(e){var t=Ae.f(C(e)),r=Te.f;return r?t.concat(r(e)):t},Se=function(e,t){for(var r=xe(t),n=O.f,o=D.f,i=0;i<r.length;i++){var a=r[i];A(e,a)||n(e,a,o(t,a))}},_e=/#|\.prototype\./,Ne=function(e,t){var r=Ce[De(e)];return r==Oe?1:r==ke?0:"function"==typeof t?s(t):!!t},De=Ne.normalize=function(e){return String(e).replace(_e,".").toLowerCase()},Ce=Ne.data={},ke=Ne.NATIVE="N",Oe=Ne.POLYFILL="P",Re=Ne,Le=D.f,qe=function(e,t){var r,n,o,i,s,u=e.target,c=e.global,l=e.stat;if(r=c?a:l?a[u]||L(u,{}):(a[u]||{}).prototype)for(n in t){// contained in target
if(i=t[n],o=e.noTargetGet?(s=Le(r,n))&&s.value:r[n],!Re(c?n:u+(l?".":"#")+n,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;Se(i,o)}// add a flag to not completely full polyfills
(e.sham||o&&o.sham)&&R(i,"sham",1),// extend global
oe(r,n,i,e)}},Ie=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e},Be=function(e,t,r){if(Ie(e),void 0===t)return e;switch(r){case 0:return function(){return e.call(t)};case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}},Pe=function(e){return Object(y(e))},je=Array.isArray||function(e){return"Array"==d(e)},Fe=!!Object.getOwnPropertySymbols&&!s((function(){// Chrome 38 Symbol has incorrect toString conversion
// eslint-disable-next-line no-undef
return!String(Symbol())})),Ue=Fe&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Ve=M("wks"),Me=a.Symbol,He=Ue?Me:Me&&Me.withoutSetter||G,ze=function(e){return A(Ve,e)||(Fe&&A(Me,e)?Ve[e]=Me[e]:Ve[e]=He("Symbol."+e)),Ve[e]},Ge=ze("species"),Ye=function(e,t){var r;return je(e)&&(// cross-realm fallback
"function"!=typeof(r=e.constructor)||r!==Array&&!je(r.prototype)?b(r)&&null===(r=r[Ge])&&(r=void 0):r=void 0),new(void 0===r?Array:r)(0===t?0:t)},We=[].push,$e=function(e){var t=1==e,r=2==e,n=3==e,o=4==e,i=6==e,a=5==e||i;return function(s,u,c,l){for(var f,p,h=Pe(s),d=m(h),g=Be(u,c,3),y=pe(d.length),v=0,b=l||Ye,w=t?b(s,y):r?b(s,0):void 0;y>v;v++)if((a||v in d)&&(p=g(f=d[v],v,h),e))if(t)w[v]=p;// map
else if(p)switch(e){case 3:return 1;// some
case 5:return f;// find
case 6:return v;// findIndex
case 2:We.call(w,f);// filter
}else if(o)return 0;// every
return i?-1:n||o?o:w}},Je={// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
forEach:$e(0),// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
map:$e(1),// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
filter:$e(2),// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
some:$e(3),// `Array.prototype.every` method
// https://tc39.github.io/ecma262/#sec-array.prototype.every
every:$e(4),// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
find:$e(5),// `Array.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
findIndex:$e(6)},Ke=se("navigator","userAgent")||"",Ze=a.process,Qe=Ze&&Ze.versions,Xe=Qe&&Qe.v8;Xe?re=(te=Xe.split("."))[0]+te[1]:Ke&&(!(te=Ke.match(/Edge\/(\d+)/))||te[1]>=74)&&(te=Ke.match(/Chrome\/(\d+)/))&&(re=te[1]);var et=re&&+re,tt=ze("species"),rt=function(e){// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/677
return et>=51||!s((function(){var t=[];return(t.constructor={})[tt]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},nt=Object.defineProperty,ot={},it=function(e){throw e},at=function(e,t){if(A(ot,e))return ot[e];t||(t={});var r=[][e],n=A(t,"ACCESSORS")?t.ACCESSORS:0,o=A(t,0)?t[0]:it,i=A(t,1)?t[1]:void 0;return ot[e]=!!r&&!s((function(){if(n&&!u)return 1;var e={length:-1};n?nt(e,1,{enumerable:1,get:it}):e[1]=1,r.call(e,o,i)}))},st=Je.filter,ut=rt("filter"),ct=at("filter");// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
qe({target:"Array",proto:1,forced:!ut||!ct},{filter:function(e/* , thisArg */){return st(this,e,arguments.length>1?arguments[1]:void 0)}});var lt=function(e,t){var r=[][e];return!!r&&s((function(){// eslint-disable-next-line no-useless-call,no-throw-literal
r.call(null,t||function(){throw 1},1)}))},ft=Je.forEach,pt=lt("forEach"),ht=at("forEach"),dt=pt&&ht?[].forEach:function(e/* , thisArg */){return ft(this,e,arguments.length>1?arguments[1]:void 0)};// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
qe({target:"Array",proto:1,forced:[].forEach!=dt},{forEach:dt});var gt=ye.indexOf,mt=[].indexOf,yt=!!mt&&1/[1].indexOf(1,-0)<0,vt=lt("indexOf"),bt=at("indexOf",{ACCESSORS:1,1:0});// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
qe({target:"Array",proto:1,forced:yt||!vt||!bt},{indexOf:function(e/* , fromIndex = 0 */){return yt?mt.apply(this,arguments)||0:gt(this,e,arguments.length>1?arguments[1]:void 0)}});var wt=function(e,t,r){var n=w(t);n in e?O.f(e,n,p(0,r)):e[n]=r},Et=rt("splice"),At=at("splice",{ACCESSORS:1,0:0,1:2}),Tt=Math.max,xt=Math.min;// `Array.prototype.splice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.splice
// with adding support of @@species
qe({target:"Array",proto:1,forced:!Et||!At},{splice:function(e,t/* , ...items */){var r,n,o,i,a,s,u=Pe(this),c=pe(u.length),l=ge(e,c),f=arguments.length;if(0===f?r=n=0:1===f?(r=0,n=c-l):(r=f-2,n=xt(Tt(le(t),0),c-l)),c+r-n>9007199254740991)throw TypeError("Maximum allowed length exceeded");for(o=Ye(u,n),i=0;i<n;i++)(a=l+i)in u&&wt(o,i,u[a]);if(o.length=n,r<n){for(i=l;i<c-n;i++)s=i+r,(a=i+n)in u?u[s]=u[a]:delete u[s];for(i=c;i>c-n+r;i--)delete u[i-1]}else if(r>n)for(i=c-n;i>l;i--)s=i+r-1,(a=i+n-1)in u?u[s]=u[a]:delete u[s];for(i=0;i<r;i++)u[i+l]=arguments[i+2];return u.length=c-n+r,o}});// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
var St=Object.keys||function(e){return be(e,we)},_t=Object.assign,Nt=Object.defineProperty,Dt=!_t||s((function(){// should have correct order of operations (Edge bug)
if(u&&1!==_t({b:1},_t(Nt({},"a",{enumerable:1,get:function(){Nt(this,"b",{value:3,enumerable:0})}}),{b:2})).b)return 1;// should work with symbols and should have deterministic property order (V8 bug)
var e={},t={},r=Symbol();return e[r]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=_t({},e)[r]||"abcdefghijklmnopqrst"!=St(_t({},t)).join("")}))?function(e,t){for(// eslint-disable-line no-unused-vars
var r=Pe(e),n=arguments.length,o=1,i=Te.f,a=f.f;n>o;)for(var s,c=m(arguments[o++]),l=i?St(c).concat(i(c)):St(c),p=l.length,h=0;p>h;)s=l[h++],u&&!a.call(c,s)||(r[s]=c[s]);return r}:_t;// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
qe({target:"Object",stat:1,forced:Object.assign!==Dt},{assign:Dt});var Ct=s((function(){St(1)}));// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
qe({target:"Object",stat:1,forced:Ct},{keys:function(e){return St(Pe(e))}});// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
var kt=function(){var e=C(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t};// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
function Ot(e,t){return RegExp(e,t)}var Rt={UNSUPPORTED_Y:s((function(){// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var e=Ot("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),BROKEN_CARET:s((function(){// https://bugzilla.mozilla.org/show_bug.cgi?id=773687
var e=Ot("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},Lt=RegExp.prototype.exec,qt=String.prototype.replace,It=Lt,Bt=function(){var e=/a/,t=/b*/g;return Lt.call(e,"a"),Lt.call(t,"a"),0!==e.lastIndex||0!==t.lastIndex}(),Pt=Rt.UNSUPPORTED_Y||Rt.BROKEN_CARET,jt=void 0!==/()??/.exec("")[1];(Bt||jt||Pt)&&(It=function(e){var t,r,n,o,i=this,a=Pt&&i.sticky,s=kt.call(i),u=i.source,c=0,l=e;return a&&(-1===(s=s.replace("y","")).indexOf("g")&&(s+="g"),l=String(e).slice(i.lastIndex),// Support anchored sticky behavior.
i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==e[i.lastIndex-1])&&(u="(?: "+u+")",l=" "+l,c++),// ^(? + rx + ) is needed, in combination with some str slicing, to
// simulate the 'y' flag.
r=new RegExp("^(?:"+u+")",s)),jt&&(r=new RegExp("^"+u+"$(?!\\s)",s)),Bt&&(t=i.lastIndex),n=Lt.call(a?r:i,l),a?n?(n.input=n.input.slice(c),n[0]=n[0].slice(c),n.index=i.lastIndex,i.lastIndex+=n[0].length):i.lastIndex=0:Bt&&n&&(i.lastIndex=i.global?n.index+n[0].length:t),jt&&n&&n.length>1&&// Fix browsers whose `exec` methods don't consistently return `undefined`
// for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
qt.call(n[0],r,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(n[o]=void 0)})),n});var Ft=It;qe({target:"RegExp",proto:1,forced:/./.exec!==Ft},{exec:Ft});// TODO: Remove from `core-js@4` since it's moved to entry points
var Ut=ze("species"),Vt=!s((function(){// #replace needs built-in support for named groups.
// #match works fine because it just return the exec results, even if it has
// a "grops" property.
var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),Mt="$0"==="a".replace(/./,"$0"),Ht=ze("replace"),zt=/./[Ht]?""===/./[Ht]("a","$0"):0,Gt=!s((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var r="ab".split(e);return 2!==r.length||"a"!==r[0]||"b"!==r[1]})),Yt=function(e,t,r,n){var o=ze(e),i=!s((function(){// String methods call symbol-named RegEp methods
var t={};return t[o]=function(){return 7},7!=""[e](t)})),a=i&&!s((function(){// Symbol-named RegExp methods call .exec
var t=0,r=/a/;return"split"===e&&(// We can't use real regex here since it causes deoptimization
// and serious performance degradation in V8
// https://github.com/zloirock/core-js/issues/306
// RegExp[@@split] doesn't call the regex's exec method, but first creates
// a new one. We need to return the patched regex when creating the new one.
(r={}).constructor={},r.constructor[Ut]=function(){return r},r.flags="",r[o]=/./[o]),r.exec=function(){return t=1,null},r[o](""),!t}));if(!i||!a||"replace"===e&&(!Vt||!Mt||zt)||"split"===e&&!Gt){var u=/./[o],c=r(o,""[e],(function(e,t,r,n,o){return t.exec===Ft?i&&!o?{done:1,value:u.call(t,r,n)}:{done:1,value:e.call(r,t,n)}:{done:0}}),{REPLACE_KEEPS_$0:Mt,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:zt}),l=c[0],f=c[1];oe(String.prototype,e,l),oe(RegExp.prototype,o,2==t?function(e,t){return f.call(e,this,t)}// 21.2.5.6 RegExp.prototype[@@match](string)
// 21.2.5.9 RegExp.prototype[@@search](string)
:function(e){return f.call(e,this)})}n&&R(RegExp.prototype[o],"sham",1)},Wt=Object.is||function(e,t){// eslint-disable-next-line no-self-compare
return e===t?0!==e||1/e==1/t:e!=e&&t!=t},$t=function(e,t){var r=e.exec;if("function"==typeof r){var n=r.call(e,t);if("object"!=typeof n)throw TypeError("RegExp exec method returned something other than an Object or null");return n}if("RegExp"!==d(e))throw TypeError("RegExp#exec called on incompatible receiver");return Ft.call(e,t)};// @@search logic
Yt("search",1,(function(e,t,r){return[// `String.prototype.search` method
// https://tc39.github.io/ecma262/#sec-string.prototype.search
function(t){var r=y(this),n=null==t?void 0:t[e];return void 0!==n?n.call(t,r):new RegExp(t)[e](String(r))},// `RegExp.prototype[@@search]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
function(e){var n=r(t,e,this);if(n.done)return n.value;var o=C(e),i=String(this),a=o.lastIndex;Wt(a,0)||(o.lastIndex=0);var s=$t(o,i);return Wt(o.lastIndex,a)||(o.lastIndex=a),null===s?-1:s.index}]}));// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
var Jt={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0};for(var Kt in Jt){var Zt=a[Kt],Qt=Zt&&Zt.prototype;// some Chrome versions have non-configurable methods on DOMTokenList
if(Qt&&Qt.forEach!==dt)try{R(Qt,"forEach",dt)}catch(e){Qt.forEach=dt}}var Xt=ze("isConcatSpreadable"),er=et>=51||!s((function(){var e=[];return e[Xt]=0,e.concat()[0]!==e})),tr=rt("concat"),rr=function(e){if(!b(e))return 0;var t=e[Xt];return void 0!==t?!!t:je(e)};// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
qe({target:"Array",proto:1,forced:!er||!tr},{concat:function(e){// eslint-disable-line no-unused-vars
var t,r,n,o,i,a=Pe(this),s=Ye(a,0),u=0;for(t=-1,n=arguments.length;t<n;t++)if(rr(i=-1===t?a:arguments[t])){if(u+(o=pe(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(r=0;r<o;r++,u++)r in i&&wt(s,u,i[r])}else{if(u>=9007199254740991)throw TypeError("Maximum allowed index exceeded");wt(s,u++,i)}return s.length=u,s}});var nr=void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};// based off https://github.com/defunctzombie/node-process/blob/master/browser.js
function or(){throw new Error("setTimeout has not been defined")}function ir(){throw new Error("clearTimeout has not been defined")}var ar=or,sr=ir;function ur(e){if(ar===setTimeout)//normal enviroments in sane situations
return setTimeout(e,0);// if setTimeout wasn't available but was latter defined
if((ar===or||!ar)&&setTimeout)return ar=setTimeout,setTimeout(e,0);try{// when when somebody has screwed with setTimeout but no I.E. maddness
return ar(e,0)}catch(t){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return ar.call(null,e,0)}catch(t){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return ar.call(this,e,0)}}}"function"==typeof nr.setTimeout&&(ar=setTimeout),"function"==typeof nr.clearTimeout&&(sr=clearTimeout);var cr,lr=[],fr=0,pr=-1;function hr(){fr&&cr&&(fr=0,cr.length?lr=cr.concat(lr):pr=-1,lr.length&&dr())}function dr(){if(!fr){var e=ur(hr);fr=1;for(var t=lr.length;t;){for(cr=lr,lr=[];++pr<t;)cr&&cr[pr].run();pr=-1,t=lr.length}cr=null,fr=0,function(e){if(sr===clearTimeout)//normal enviroments in sane situations
return clearTimeout(e);// if clearTimeout wasn't available but was latter defined
if((sr===ir||!sr)&&clearTimeout)return sr=clearTimeout,clearTimeout(e);try{// when when somebody has screwed with setTimeout but no I.E. maddness
sr(e)}catch(t){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return sr.call(null,e)}catch(t){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return sr.call(this,e)}}}(e)}}function gr(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];lr.push(new mr(e,t)),1!==lr.length||fr||ur(dr)}// v8 likes predictible objects
function mr(e,t){this.fun=e,this.array=t}function yr(){}mr.prototype.run=function(){this.fun.apply(null,this.array)};var vr=yr,br=yr,wr=yr,Er=yr,Ar=yr,Tr=yr,xr=yr,Sr=nr.performance||{},_r=Sr.now||Sr.mozNow||Sr.msNow||Sr.oNow||Sr.webkitNow||function(){return(new Date).getTime()},Nr=new Date,Dr={nextTick:gr,title:"browser",browser:1,env:{},argv:[],version:"",versions:{},on:vr,addListener:br,once:wr,off:Er,removeListener:Ar,removeAllListeners:Tr,emit:xr,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0}// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js
,hrtime:// generate timestamp or delta
// see http://nodejs.org/api/process.html#process_process_hrtime
function(e){var t=.001*_r.call(Sr),r=Math.floor(t),n=Math.floor(t%1*1e9);return e&&(r-=e[0],(n-=e[1])<0&&(r--,n+=1e9)),[r,n]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-Nr)/1e3}},Cr={};Cr[ze("toStringTag")]="z";var kr="[object z]"===String(Cr),Or=ze("toStringTag"),Rr="Arguments"==d(function(){return arguments}()),Lr=kr?d:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){/* empty */}}(t=Object(e),Or))?r:Rr?d(t):"Object"==(n=d(t))&&"function"==typeof t.callee?"Arguments":n},qr=kr?{}.toString:function(){return"[object "+Lr(this)+"]"};// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
kr||oe(Object.prototype,"toString",qr,{unsafe:1});var Ir=RegExp.prototype,Br=Ir.toString,Pr=s((function(){return"/a/b"!=Br.call({source:"a",flags:"b"})})),jr="toString"!=Br.name;// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
(Pr||jr)&&oe(RegExp.prototype,"toString",(function(){var e=C(this),t=String(e.source),r=e.flags;return"/"+t+"/"+String(void 0===r&&e instanceof RegExp&&!("flags"in Ir)?kt.call(e):r)}),{unsafe:1});var Fr=O.f,Ur=Function.prototype,Vr=Ur.toString,Mr=/^\s*function ([^ (]*)/;// Function instances `.name` property
// https://tc39.github.io/ecma262/#sec-function-instances-name
u&&!("name"in Ur)&&Fr(Ur,"name",{configurable:1,get:function(){try{return Vr.call(this).match(Mr)[1]}catch(e){return""}}});var Hr=!s((function(){function e(){/* empty */}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),zr=W("IE_PROTO"),Gr=Object.prototype,Yr=Hr?Object.getPrototypeOf:function(e){return e=Pe(e),A(e,zr)?e[zr]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?Gr:null},Wr=s((function(){Yr(1)}));// This constructor is used to store event handlers. Instantiating this is
// faster than explicitly calling `Object.create(null)` to get a "clean" empty
// object (tested with v8 v4.9).
function $r(){}function Jr(){Jr.init.call(this)}// require('events') === require('events').EventEmitter
function Kr(e){return void 0===e._maxListeners?Jr.defaultMaxListeners:e._maxListeners}// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function Zr(e,t,r){if(t)e.call(r);else for(var n=e.length,o=an(e,n),i=0;i<n;++i)o[i].call(r)}function Qr(e,t,r,n){if(t)e.call(r,n);else for(var o=e.length,i=an(e,o),a=0;a<o;++a)i[a].call(r,n)}function Xr(e,t,r,n,o){if(t)e.call(r,n,o);else for(var i=e.length,a=an(e,i),s=0;s<i;++s)a[s].call(r,n,o)}function en(e,t,r,n,o,i){if(t)e.call(r,n,o,i);else for(var a=e.length,s=an(e,a),u=0;u<a;++u)s[u].call(r,n,o,i)}function tn(e,t,r,n){if(t)e.apply(r,n);else for(var o=e.length,i=an(e,o),a=0;a<o;++a)i[a].apply(r,n)}function rn(e,t,r,n){var o,i,a,s;if("function"!=typeof r)throw new TypeError('"listener" argument must be a function');if((i=e._events)?(// To avoid recursion in the case that type === "newListener"! Before
// adding it to the listeners, first emit "newListener".
i.newListener&&(e.emit("newListener",t,r.listener?r.listener:r),// Re-assign `events` because a newListener handler could have caused the
// this._events to be assigned to a new object
i=e._events),a=i[t]):(i=e._events=new $r,e._eventsCount=0),a){// Check for listener leak
if("function"==typeof a?// Adding the second element, need to change to array.
a=i[t]=n?[r,a]:[a,r]:// If we've already got an array, just append.
n?a.unshift(r):a.push(r),!a.warned&&(o=Kr(e))&&o>0&&a.length>o){a.warned=1;var u=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+t+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=a.length,s=u,"function"==typeof console.warn?console.warn(s):console.log(s)}}else// Optimize the case of one listener. Don't need the extra array object.
a=i[t]=r,++e._eventsCount;return e}function nn(e,t,r){var n=0;function o(){e.removeListener(t,o),n||(n=1,r.apply(e,arguments))}return o.listener=r,o}function on(e){var t=this._events;if(t){var r=t[e];if("function"==typeof r)return 1;if(r)return r.length}return 0}function an(e,t){for(var r=new Array(t);t--;)r[t]=e[t];return r}// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
qe({target:"Object",stat:1,forced:Wr,sham:!Hr},{getPrototypeOf:function(e){return Yr(Pe(e))}}),// `Reflect.ownKeys` method
// https://tc39.github.io/ecma262/#sec-reflect.ownkeys
qe({target:"Reflect",stat:1},{ownKeys:xe}),$r.prototype=Object.create(null),Jr.EventEmitter=Jr,Jr.usingDomains=0,Jr.prototype.domain=void 0,Jr.prototype._events=void 0,Jr.prototype._maxListeners=void 0,// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
Jr.defaultMaxListeners=10,Jr.init=function(){this.domain=null,Jr.usingDomains&&(void 0).active,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new $r,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
Jr.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=e,this},Jr.prototype.getMaxListeners=function(){return Kr(this)},Jr.prototype.emit=function(e){var t,r,n,o,i,a,s,u="error"===e;if(a=this._events)u=u&&null==a.error;else if(!u)return 0;// If there is no 'error' event listener then throw.
if(s=this.domain,u){if(t=arguments[1],!s){if(t instanceof Error)throw t;// Unhandled 'error' event
// At least give some kind of context to the user
var c=new Error('Uncaught, unspecified "error" event. ('+t+")");throw c.context=t,c}return t||(t=new Error('Uncaught, unspecified "error" event')),t.domainEmitter=this,t.domain=s,t.domainThrown=0,s.emit("error",t),0}if(!(r=a[e]))return 0;var l="function"==typeof r;switch(n=arguments.length){// fast cases
case 1:Zr(r,l,this);break;case 2:Qr(r,l,this,arguments[1]);break;case 3:Xr(r,l,this,arguments[1],arguments[2]);break;case 4:en(r,l,this,arguments[1],arguments[2],arguments[3]);break;// slower
default:for(o=new Array(n-1),i=1;i<n;i++)o[i-1]=arguments[i];tn(r,l,this,o)}return 1},Jr.prototype.addListener=function(e,t){return rn(this,e,t,0)},Jr.prototype.on=Jr.prototype.addListener,Jr.prototype.prependListener=function(e,t){return rn(this,e,t,1)},Jr.prototype.once=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.on(e,nn(this,e,t)),this},Jr.prototype.prependOnceListener=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.prependListener(e,nn(this,e,t)),this},// emits a 'removeListener' event iff the listener was removed
Jr.prototype.removeListener=function(e,t){var r,n,o,i,a;if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');if(!(n=this._events))return this;if(!(r=n[e]))return this;if(r===t||r.listener&&r.listener===t)0==--this._eventsCount?this._events=new $r:(delete n[e],n.removeListener&&this.emit("removeListener",e,r.listener||t));else if("function"!=typeof r){for(o=-1,i=r.length;i-- >0;)if(r[i]===t||r[i].listener&&r[i].listener===t){a=r[i].listener,o=i;break}if(o<0)return this;if(1===r.length){if(r[0]=void 0,0==--this._eventsCount)return this._events=new $r,this;delete n[e]}else!// About 1.5x faster than the two-arg version of Array#splice().
function(e,t){for(var r=t,n=r+1,o=e.length;n<o;r+=1,n+=1)e[r]=e[n];e.pop()}(r,o);n.removeListener&&this.emit("removeListener",e,a||t)}return this},Jr.prototype.removeAllListeners=function(e){var t,r;if(!(r=this._events))return this;// not listening for removeListener, no need to emit
if(!r.removeListener)return 0===arguments.length?(this._events=new $r,this._eventsCount=0):r[e]&&(0==--this._eventsCount?this._events=new $r:delete r[e]),this;// emit removeListener for all listeners on all events
if(0===arguments.length){for(var n,o=Object.keys(r),i=0;i<o.length;++i)"removeListener"!==(n=o[i])&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=new $r,this._eventsCount=0,this}if("function"==typeof(t=r[e]))this.removeListener(e,t);else if(t)// LIFO order
do{this.removeListener(e,t[t.length-1])}while(t[0]);return this},Jr.prototype.listeners=function(e){var t,r=this._events;return r&&(t=r[e])?"function"==typeof t?[t.listener||t]:function(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}(t):[]},Jr.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):on.call(e,t)},Jr.prototype.listenerCount=on,Jr.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};var sn=[].join,un=m!=Object,cn=lt("join",",");// `Array.prototype.join` method
// https://tc39.github.io/ecma262/#sec-array.prototype.join
qe({target:"Array",proto:1,forced:un||!cn},{join:function(e){return sn.call(v(this),void 0===e?",":e)}});var ln=Je.map,fn=rt("map"),pn=at("map");// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
qe({target:"Array",proto:1,forced:!fn||!pn},{map:function(e/* , thisArg */){return ln(this,e,arguments.length>1?arguments[1]:void 0)}});// `Array.prototype.{ reduce, reduceRight }` methods implementation
var hn=function(e){return function(t,r,n,o){Ie(r);var i=Pe(t),a=m(i),s=pe(i.length),u=e?s-1:0,c=e?-1:1;if(n<2)for(;;){if(u in a){o=a[u],u+=c;break}if(u+=c,e?u<0:s<=u)throw TypeError("Reduce of empty array with no initial value")}for(;e?u>=0:s>u;u+=c)u in a&&(o=r(o,a[u],u,i));return o}},dn={// `Array.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduce
left:hn(0),// `Array.prototype.reduceRight` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduceright
right:hn(1)},gn=dn.left,mn=lt("reduce"),yn=at("reduce",{1:0});// `Array.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduce
qe({target:"Array",proto:1,forced:!mn||!yn},{reduce:function(e/* , initialValue */){return gn(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}});var vn,bn=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=0,r={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(r,[]),t=r instanceof Array}catch(e){/* empty */}return function(r,n){return C(r),function(e){if(!b(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype")}(n),t?e.call(r,n):r.__proto__=n,r}}():void 0),wn=function(e,t,r){var n,o;// it can work only with native `setPrototypeOf`
return bn&&// we haven't completely correct pre-ES6 way for getting `new.target`, so use this
"function"==typeof(n=t.constructor)&&n!==r&&b(o=n.prototype)&&o!==r.prototype&&bn(e,o),e},En=u?Object.defineProperties:function(e,t){C(e);for(var r,n=St(t),o=n.length,i=0;o>i;)O.f(e,r=n[i++],t[r]);return e},An=se("document","documentElement"),Tn=W("IE_PROTO"),xn=function(){/* empty */},Sn=function(e){return"<script>"+e+"<\/script>"},_n=function(){try{/* global ActiveXObject */vn=document.domain&&new ActiveXObject("htmlfile")}catch(e){/* ignore */}var e,t;_n=vn?function(e){e.write(Sn("")),e.close();var t=e.parentWindow.Object;// avoid memory leak
return e=null,t}(vn):((t=S("iframe")).style.display="none",An.appendChild(t),// https://github.com/zloirock/core-js/issues/475
t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(Sn("document.F=Object")),e.close(),e.F);for(var r=we.length;r--;)delete _n.prototype[we[r]];return _n()};// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */$[Tn]=1;// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
var Nn=Object.create||function(e,t){var r;return null!==e?(xn.prototype=C(e),r=new xn,xn.prototype=null,// add "__proto__" for Object.getPrototypeOf polyfill
r[Tn]=e):r=_n(),void 0===t?r:En(r,t)},Dn="\t\n\v\f\r                　\u2028\u2029\ufeff",Cn="["+Dn+"]",kn=RegExp("^"+Cn+Cn+"*"),On=RegExp(Cn+Cn+"*$"),Rn=function(e){return function(t){var r=String(y(t));return 1&e&&(r=r.replace(kn,"")),2&e&&(r=r.replace(On,"")),r}},Ln={// `String.prototype.{ trimLeft, trimStart }` methods
// https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
start:Rn(1),// `String.prototype.{ trimRight, trimEnd }` methods
// https://tc39.github.io/ecma262/#sec-string.prototype.trimend
end:Rn(2),// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
trim:Rn(3)},qn=Ae.f,In=D.f,Bn=O.f,Pn=Ln.trim,jn=a.Number,Fn=jn.prototype,Un="Number"==d(Nn(Fn)),Vn=function(e){var t,r,n,o,i,a,s,u,c=w(e,0);if("string"==typeof c&&c.length>2)if(43===(t=(c=Pn(c)).charCodeAt(0))||45===t){if(88===(r=c.charCodeAt(2))||120===r)return NaN;// Number('+0x1') should be NaN, old V8 fix
}else if(48===t){switch(c.charCodeAt(1)){case 66:case 98:n=2,o=49;break;// fast equal of /^0b[01]+$/i
case 79:case 111:n=8,o=55;break;// fast equal of /^0o[0-7]+$/i
default:return+c}for(a=(i=c.slice(2)).length,s=0;s<a;s++)// parseInt parses a string to a first unavailable symbol
// but ToNumber should return NaN if a string contains unavailable symbols
if((u=i.charCodeAt(s))<48||u>o)return NaN;return parseInt(i,n)}return+c};// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
// `Number` constructor
// https://tc39.github.io/ecma262/#sec-number-constructor
if(Re("Number",!jn(" 0o1")||!jn("0b1")||jn("+0x1"))){for(var Mn,Hn=function(e){var t=arguments.length<1?0:e,r=this;return r instanceof Hn&&(Un?s((function(){Fn.valueOf.call(r)})):"Number"!=d(r))?wn(new jn(Vn(t)),r,Hn):Vn(t)},zn=u?qn(jn):// ES3:
"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),Gn=0;zn.length>Gn;Gn++)A(jn,Mn=zn[Gn])&&!A(Hn,Mn)&&Bn(Hn,Mn,In(jn,Mn));Hn.prototype=Fn,Fn.constructor=Hn,oe(a,"Number",Hn)}var Yn=D.f,Wn=s((function(){Yn(1)}));// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
qe({target:"Object",stat:1,forced:!u||Wn,sham:!u},{getOwnPropertyDescriptor:function(e,t){return Yn(v(e),t)}});var $n=Ae.f,Jn={}.toString,Kn="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],Zn={f:function(e){return Kn&&"[object Window]"==Jn.call(e)?function(e){try{return $n(e)}catch(e){return Kn.slice()}}(e):$n(v(e))}},Qn=Zn.f,Xn=s((function(){return!Object.getOwnPropertyNames(1)}));// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
qe({target:"Object",stat:1,forced:Xn},{getOwnPropertyNames:Qn});var eo=ze("match"),to=function(e){var t;return b(e)&&(void 0!==(t=e[eo])?!!t:"RegExp"==d(e))},ro=ze("species"),no=function(e){var t=se(e),r=O.f;u&&t&&!t[ro]&&r(t,ro,{configurable:1,get:function(){return this}})},oo=O.f,io=Ae.f,ao=ne.set,so=ze("match"),uo=a.RegExp,co=uo.prototype,lo=/a/g,fo=/a/g,po=new uo(lo)!==lo,ho=Rt.UNSUPPORTED_Y;// `IsRegExp` abstract operation
// https://tc39.github.io/ecma262/#sec-isregexp
// `RegExp` constructor
// https://tc39.github.io/ecma262/#sec-regexp-constructor
if(u&&Re("RegExp",!po||ho||s((function(){// RegExp constructor can alter flags and IsRegExp works correct with @@match
return fo[so]=0,uo(lo)!=lo||uo(fo)==fo||"/a/i"!=uo(lo,"i")})))){for(var go=function(e,t){var r,n=this instanceof go,o=to(e),i=void 0===t;if(!n&&o&&e.constructor===go&&i)return e;po?o&&!i&&(e=e.source):e instanceof go&&(i&&(t=kt.call(e)),e=e.source),ho&&(r=!!t&&t.indexOf("y")>-1)&&(t=t.replace(/y/g,""));var a=wn(po?new uo(e,t):uo(e,t),n?this:co,go);return ho&&r&&ao(a,{sticky:r}),a},mo=function(e){e in go||oo(go,e,{configurable:1,get:function(){return uo[e]},set:function(t){uo[e]=t}})},yo=io(uo),vo=0;yo.length>vo;)mo(yo[vo++]);co.constructor=go,go.prototype=co,oe(a,"RegExp",go)}// https://tc39.github.io/ecma262/#sec-get-regexp-@@species
no("RegExp");// `String.prototype.{ codePointAt, at }` methods implementation
var bo=function(e){return function(t,r){var n,o,i=String(y(t)),a=le(r),s=i.length;return a<0||a>=s?e?"":void 0:(n=i.charCodeAt(a))<55296||n>56319||a+1===s||(o=i.charCodeAt(a+1))<56320||o>57343?e?i.charAt(a):n:e?i.slice(a,a+2):o-56320+(n-55296<<10)+65536}},wo={// `String.prototype.codePointAt` method
// https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
codeAt:bo(0),// `String.prototype.at` method
// https://github.com/mathiasbynens/String.prototype.at
charAt:bo(1)},Eo=wo.charAt,Ao=function(e,t,r){return t+(r?Eo(e,t).length:1)};// @@match logic
Yt("match",1,(function(e,t,r){return[// `String.prototype.match` method
// https://tc39.github.io/ecma262/#sec-string.prototype.match
function(t){var r=y(this),n=null==t?void 0:t[e];return void 0!==n?n.call(t,r):new RegExp(t)[e](String(r))},// `RegExp.prototype[@@match]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
function(e){var n=r(t,e,this);if(n.done)return n.value;var o=C(e),i=String(this);if(!o.global)return $t(o,i);var a=o.unicode;o.lastIndex=0;for(var s,u=[],c=0;null!==(s=$t(o,i));){var l=String(s[0]);u[c]=l,""===l&&(o.lastIndex=Ao(i,pe(o.lastIndex),a)),c++}return 0===c?null:u}]}));var To=Math.max,xo=Math.min,So=Math.floor,_o=/\$([$&'`]|\d\d?|<[^>]*>)/g,No=/\$([$&'`]|\d\d?)/g,Do=function(e){return void 0===e?e:String(e)};// @@replace logic
Yt("replace",2,(function(e,t,r,n){var o=n.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,i=n.REPLACE_KEEPS_$0,a=o?"$":"$0";return[// `String.prototype.replace` method
// https://tc39.github.io/ecma262/#sec-string.prototype.replace
function(r,n){var o=y(this),i=null==r?void 0:r[e];return void 0!==i?i.call(r,o,n):t.call(String(o),r,n)},// `RegExp.prototype[@@replace]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
function(e,n){if(!o&&i||"string"==typeof n&&-1===n.indexOf(a)){var u=r(t,e,this,n);if(u.done)return u.value}var c=C(e),l=String(this),f="function"==typeof n;f||(n=String(n));var p=c.global;if(p){var h=c.unicode;c.lastIndex=0}for(var d=[];;){var g=$t(c,l);if(null===g)break;if(d.push(g),!p)break;""===String(g[0])&&(c.lastIndex=Ao(l,pe(c.lastIndex),h))}for(var m="",y=0,v=0;v<d.length;v++){g=d[v];// NOTE: This is equivalent to
//   captures = result.slice(1).map(maybeToString)
// but for some reason `nativeSlice.call(result, 1, result.length)` (called in
// the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
// causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
for(var b=String(g[0]),w=To(xo(le(g.index),l.length),0),E=[],A=1;A<g.length;A++)E.push(Do(g[A]));var T=g.groups;if(f){var x=[b].concat(E,w,l);void 0!==T&&x.push(T);var S=String(n.apply(void 0,x))}else S=s(b,l,w,E,T,n);w>=y&&(m+=l.slice(y,w)+S,y=w+b.length)}return m+l.slice(y)}];// https://tc39.github.io/ecma262/#sec-getsubstitution
function s(e,r,n,o,i,a){var s=n+e.length,u=o.length,c=No;return void 0!==i&&(i=Pe(i),c=_o),t.call(a,c,(function(t,a){var c;switch(a.charAt(0)){case"$":return"$";case"&":return e;case"`":return r.slice(0,n);case"'":return r.slice(s);case"<":c=i[a.slice(1,-1)];break;default:// \d\d?
var l=+a;if(0===l)return t;if(l>u){var f=So(l/10);return 0===f?t:f<=u?void 0===o[f-1]?a.charAt(1):o[f-1]+a.charAt(1):t}c=o[l-1]}return void 0===c?"":c}))}}));var Co=ze("species"),ko=function(e,t){var r,n=C(e).constructor;return void 0===n||null==(r=C(n)[Co])?t:Ie(r)},Oo=[].push,Ro=Math.min,Lo=!s((function(){return!RegExp(4294967295,"y")}));// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
function qo(e){return(qo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}// @@split logic
Yt("split",2,(function(e,t,r){var n;// based on es5-shim implementation, need to rework it
return n="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,r){var n=String(y(this)),o=void 0===r?4294967295:r>>>0;if(0===o)return[];if(void 0===e)return[n];// If `separator` is not a regex, use native split
if(!to(e))return t.call(n,e,o);for(var i,a,s,u=[],c=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),l=0,f=new RegExp(e.source,c+"g");(i=Ft.call(f,n))&&!((a=f.lastIndex)>l&&(u.push(n.slice(l,i.index)),i.length>1&&i.index<n.length&&Oo.apply(u,i.slice(1)),s=i[0].length,l=a,u.length>=o));)f.lastIndex===i.index&&f.lastIndex++;// Avoid an infinite loop
return l===n.length?!s&&f.test("")||u.push(""):u.push(n.slice(l)),u.length>o?u.slice(0,o):u}:"0".split(void 0,0).length?function(e,r){return void 0===e&&0===r?[]:t.call(this,e,r)}:t,[// `String.prototype.split` method
// https://tc39.github.io/ecma262/#sec-string.prototype.split
function(t,r){var o=y(this),i=null==t?void 0:t[e];return void 0!==i?i.call(t,o,r):n.call(String(o),t,r)},// `RegExp.prototype[@@split]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
// NOTE: This cannot be properly polyfilled in engines that don't support
// the 'y' flag.
function(e,o){var i=r(n,e,this,o,n!==t);if(i.done)return i.value;var a=C(e),s=String(this),u=ko(a,RegExp),c=a.unicode,l=(a.ignoreCase?"i":"")+(a.multiline?"m":"")+(a.unicode?"u":"")+(Lo?"y":"g"),f=new u(Lo?a:"^(?:"+a.source+")",l),p=void 0===o?4294967295:o>>>0;if(0===p)return[];if(0===s.length)return null===$t(f,s)?[s]:[];for(var h=0,d=0,g=[];d<s.length;){f.lastIndex=Lo?d:0;var m,y=$t(f,Lo?s:s.slice(d));if(null===y||(m=Ro(pe(f.lastIndex+(Lo?0:d)),s.length))===h)d=Ao(s,d,c);else{if(g.push(s.slice(h,d)),g.length===p)return g;for(var v=1;v<=y.length-1;v++)if(g.push(y[v]),g.length===p)return g;d=h=m}}return g.push(s.slice(h)),g}]}),!Lo);var Io={f:ze},Bo=O.f,Po=function(e){var t=ie.Symbol||(ie.Symbol={});A(t,e)||Bo(t,e,{value:Io.f(e)})},jo=O.f,Fo=ze("toStringTag"),Uo=function(e,t,r){e&&!A(e=r?e:e.prototype,Fo)&&jo(e,Fo,{configurable:1,value:t})},Vo=Je.forEach,Mo=W("hidden"),Ho=ze("toPrimitive"),zo=ne.set,Go=ne.getterFor("Symbol"),Yo=Object.prototype,Wo=a.Symbol,$o=se("JSON","stringify"),Jo=D.f,Ko=O.f,Zo=Zn.f,Qo=f.f,Xo=M("symbols"),ei=M("op-symbols"),ti=M("string-to-symbol-registry"),ri=M("symbol-to-string-registry"),ni=M("wks"),oi=a.QObject,ii=!oi||!oi.prototype||!oi.prototype.findChild,ai=u&&s((function(){return 7!=Nn(Ko({},"a",{get:function(){return Ko(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=Jo(Yo,t);n&&delete Yo[t],Ko(e,t,r),n&&e!==Yo&&Ko(Yo,t,n)}:Ko,si=function(e,t){var r=Xo[e]=Nn(Wo.prototype);return zo(r,{type:"Symbol",tag:e,description:t}),u||(r.description=t),r},ui=Ue?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof Wo},ci=function(e,t,r){e===Yo&&ci(ei,t,r),C(e);var n=w(t,1);return C(r),A(Xo,n)?(r.enumerable?(A(e,Mo)&&e[Mo][n]&&(e[Mo][n]=0),r=Nn(r,{enumerable:p(0,0)})):(A(e,Mo)||Ko(e,Mo,p(1,{})),e[Mo][n]=1),ai(e,n,r)):Ko(e,n,r)},li=function(e,t){C(e);var r=v(t),n=St(r).concat(di(r));return Vo(n,(function(t){u&&!fi.call(r,t)||ci(e,t,r[t])})),e},fi=function(e){var t=w(e,1),r=Qo.call(this,t);return this===Yo&&A(Xo,t)&&!A(ei,t)?0:r||!A(this,t)||!A(Xo,t)||A(this,Mo)&&this[Mo][t]?r:1},pi=function(e,t){var r=v(e),n=w(t,1);if(r!==Yo||!A(Xo,n)||A(ei,n)){var o=Jo(r,n);return!o||!A(Xo,n)||A(r,Mo)&&r[Mo][n]||(o.enumerable=1),o}},hi=function(e){var t=Zo(v(e)),r=[];return Vo(t,(function(e){A(Xo,e)||A($,e)||r.push(e)})),r},di=function(e){var t=e===Yo,r=Zo(t?ei:v(e)),n=[];return Vo(r,(function(e){!A(Xo,e)||t&&!A(Yo,e)||n.push(Xo[e])})),n};// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if(// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
Fe||(oe((Wo=function(){if(this instanceof Wo)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=G(e),r=function(e){this===Yo&&r.call(ei,e),A(this,Mo)&&A(this[Mo],t)&&(this[Mo][t]=0),ai(this,t,p(1,e))};return u&&ii&&ai(Yo,t,{configurable:1,set:r}),si(t,e)}).prototype,"toString",(function(){return Go(this).tag})),oe(Wo,"withoutSetter",(function(e){return si(G(e),e)})),f.f=fi,O.f=ci,D.f=pi,Ae.f=Zn.f=hi,Te.f=di,Io.f=function(e){return si(ze(e),e)},u&&(// https://github.com/tc39/proposal-Symbol-description
Ko(Wo.prototype,"description",{configurable:1,get:function(){return Go(this).description}}),oe(Yo,"propertyIsEnumerable",fi,{unsafe:1}))),qe({global:1,wrap:1,forced:!Fe,sham:!Fe},{Symbol:Wo}),Vo(St(ni),(function(e){Po(e)})),qe({target:"Symbol",stat:1,forced:!Fe},{// `Symbol.for` method
// https://tc39.github.io/ecma262/#sec-symbol.for
for:function(e){var t=String(e);if(A(ti,t))return ti[t];var r=Wo(t);return ti[t]=r,ri[r]=t,r},// `Symbol.keyFor` method
// https://tc39.github.io/ecma262/#sec-symbol.keyfor
keyFor:function(e){if(!ui(e))throw TypeError(e+" is not a symbol");if(A(ri,e))return ri[e]},useSetter:function(){ii=1},useSimple:function(){ii=0}}),qe({target:"Object",stat:1,forced:!Fe,sham:!u},{// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
create:function(e,t){return void 0===t?Nn(e):li(Nn(e),t)},// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
defineProperty:ci,// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
defineProperties:li,// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
getOwnPropertyDescriptor:pi}),qe({target:"Object",stat:1,forced:!Fe},{// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
getOwnPropertyNames:hi,// `Object.getOwnPropertySymbols` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
getOwnPropertySymbols:di}),// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
qe({target:"Object",stat:1,forced:s((function(){Te.f(1)}))},{getOwnPropertySymbols:function(e){return Te.f(Pe(e))}}),$o){var gi=!Fe||s((function(){var e=Wo();// MS Edge converts symbol values to JSON as {}
return"[null]"!=$o([e])||"{}"!=$o({a:e})||"{}"!=$o(Object(e))}));qe({target:"JSON",stat:1,forced:gi},{// eslint-disable-next-line no-unused-vars
stringify:function(e,t,r){for(var n,o=[e],i=1;arguments.length>i;)o.push(arguments[i++]);if(n=t,(b(t)||void 0!==e)&&!ui(e))// IE8 returns string on undefined
return je(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!ui(t))return t}),o[1]=t,$o.apply(null,o)}})}// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
Wo.prototype[Ho]||R(Wo.prototype,Ho,Wo.prototype.valueOf),// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
Uo(Wo,"Symbol"),$[Mo]=1;var mi=O.f,yi=a.Symbol;if(u&&"function"==typeof yi&&(!("description"in yi.prototype)||// Safari 12 bug
void 0!==yi().description)){var vi={},bi=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof bi?new yi(e):void 0===e?yi():yi(e);return""===e&&(vi[t]=1),t};// wrap Symbol constructor for correct work with undefined description
Se(bi,yi);var wi=bi.prototype=yi.prototype;wi.constructor=bi;var Ei=wi.toString,Ai="Symbol(test)"==String(yi("test")),Ti=/^Symbol\((.*)\)[^)]+$/;mi(wi,"description",{configurable:1,get:function(){var e=b(this)?this.valueOf():this,t=Ei.call(e);if(A(vi,e))return"";var r=Ai?t.slice(7,-1):t.replace(Ti,"$1");return""===r?void 0:r}}),qe({global:1,forced:1},{Symbol:bi})}// `Symbol.species` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.species
Po("species");// `Array.prototype.fill` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
var xi=function(e/* , start = 0, end = @length */){for(var t=Pe(this),r=pe(t.length),n=arguments.length,o=ge(n>1?arguments[1]:void 0,r),i=n>2?arguments[2]:void 0,a=void 0===i?r:ge(i,r);a>o;)t[o++]=e;return t},Si=ze("unscopables"),_i=Array.prototype;// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
null==_i[Si]&&O.f(_i,Si,{configurable:1,value:Nn(null)});// add a key to Array.prototype[@@unscopables]
var Ni=function(e){_i[Si][e]=1};// `Array.prototype.fill` method
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
qe({target:"Array",proto:1},{fill:xi}),// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
Ni("fill");var Di=ye.includes,Ci=at("indexOf",{ACCESSORS:1,1:0});// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
qe({target:"Array",proto:1,forced:!Ci},{includes:function(e/* , fromIndex = 0 */){return Di(this,e,arguments.length>1?arguments[1]:void 0)}}),// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
Ni("includes");var ki,Oi,Ri,Li={},qi=ze("iterator"),Ii=0;[].keys&&(// Safari 8 has buggy iterators w/o `next`
"next"in(Ri=[].keys())?(Oi=Yr(Yr(Ri)))!==Object.prototype&&(ki=Oi):Ii=1),null==ki&&(ki={}),// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
A(ki,qi)||R(ki,qi,(function(){return this}));var Bi={IteratorPrototype:ki,BUGGY_SAFARI_ITERATORS:Ii},Pi=Bi.IteratorPrototype,ji=function(){return this},Fi=Bi.IteratorPrototype,Ui=Bi.BUGGY_SAFARI_ITERATORS,Vi=ze("iterator"),Mi=function(){return this},Hi=function(e,t,r,n,o,i,a){!function(e,t,r){var n=t+" Iterator";e.prototype=Nn(Pi,{next:p(1,r)}),Uo(e,n,0),Li[n]=ji}(r,t,n);var s,u,c,l=function(e){if(e===o&&m)return m;if(!Ui&&e in d)return d[e];switch(e){case"keys":case"values":case"entries":return function(){return new r(this,e)}}return function(){return new r(this)}},f=t+" Iterator",h=0,d=e.prototype,g=d[Vi]||d["@@iterator"]||o&&d[o],m=!Ui&&g||l(o),y="Array"==t&&d.entries||g;// export additional methods
if(// fix native
y&&(s=Yr(y.call(new e)),Fi!==Object.prototype&&s.next&&(Yr(s)!==Fi&&(bn?bn(s,Fi):"function"!=typeof s[Vi]&&R(s,Vi,Mi)),// Set @@toStringTag to native iterators
Uo(s,f,1))),// fix Array#{values, @@iterator}.name in V8 / FF
"values"==o&&g&&"values"!==g.name&&(h=1,m=function(){return g.call(this)}),// define iterator
d[Vi]!==m&&R(d,Vi,m),Li[t]=m,o)if(u={values:l("values"),keys:i?m:l("keys"),entries:l("entries")},a)for(c in u)(Ui||h||!(c in d))&&oe(d,c,u[c]);else qe({target:t,proto:1,forced:Ui||h},u);return u},zi=ne.set,Gi=ne.getterFor("Array Iterator"),Yi=Hi(Array,"Array",(function(e,t){zi(this,{type:"Array Iterator",target:v(e),// target
index:0,// next index
kind:t});// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}),(function(){var e=Gi(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:1}):"keys"==r?{value:n,done:0}:"values"==r?{value:t[n],done:0}:{value:[n,t[n]],done:0}}),"values");// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Li.Arguments=Li.Array,// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
Ni("keys"),Ni("values"),Ni("entries");var Wi=Math.min,$i=[].lastIndexOf,Ji=!!$i&&1/[1].lastIndexOf(1,-0)<0,Ki=lt("lastIndexOf"),Zi=at("indexOf",{ACCESSORS:1,1:0}),Qi=!Ji&&Ki&&Zi?$i:function(e/* , fromIndex = @[*-1] */){// convert -0 to +0
if(Ji)return $i.apply(this,arguments)||0;var t=v(this),r=pe(t.length),n=r-1;for(arguments.length>1&&(n=Wi(n,le(arguments[1]))),n<0&&(n=r+n);n>=0;n--)if(n in t&&t[n]===e)return n||0;return-1};// `Array.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
qe({target:"Array",proto:1,forced:Qi!==[].lastIndexOf},{lastIndexOf:Qi});var Xi=rt("slice"),ea=at("slice",{ACCESSORS:1,0:0,1:2}),ta=ze("species"),ra=[].slice,na=Math.max;// `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
qe({target:"Array",proto:1,forced:!Xi||!ea},{slice:function(e,t){var r,n,o,i=v(this),a=pe(i.length),s=ge(e,a),u=ge(void 0===t?a:t,a);if(je(i)&&(// cross-realm fallback
"function"!=typeof(r=i.constructor)||r!==Array&&!je(r.prototype)?b(r)&&null===(r=r[ta])&&(r=void 0):r=void 0,r===Array||void 0===r))return ra.call(i,s,u);for(n=new(void 0===r?Array:r)(na(u-s,0)),o=0;s<u;s++,o++)s in i&&wt(n,o,i[s]);return n.length=o,n}}),// `Array[@@species]` getter
// https://tc39.github.io/ecma262/#sec-get-array-@@species
no("Array");var oa="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView,ia=function(e,t,r){for(var n in t)oe(e,n,t[n],r);return e},aa=function(e,t,r){if(!(e instanceof t))throw TypeError("Incorrect "+(r?r+" ":"")+"invocation");return e},sa=function(e){if(void 0===e)return 0;var t=le(e),r=pe(t);if(t!==r)throw RangeError("Wrong length or index");return r},ua=Math.abs,ca=Math.pow,la=Math.floor,fa=Math.log,pa=Math.LN2,ha=function(e,t,r){var n,o,i,a=new Array(r),s=8*r-t-1,u=(1<<s)-1,c=u>>1,l=23===t?ca(2,-24)-ca(2,-77):0,f=e<0||0===e&&1/e<0?1:0,p=0;for(// eslint-disable-next-line no-self-compare
(e=ua(e))!=e||e===1/0?(// eslint-disable-next-line no-self-compare
o=e!=e?1:0,n=u):(n=la(fa(e)/pa),e*(i=ca(2,-n))<1&&(n--,i*=2),(e+=n+c>=1?l/i:l*ca(2,1-c))*i>=2&&(n++,i/=2),n+c>=u?(o=0,n=u):n+c>=1?(o=(e*i-1)*ca(2,t),n+=c):(o=e*ca(2,c-1)*ca(2,t),n=0));t>=8;a[p++]=255&o,o/=256,t-=8);for(n=n<<t|o,s+=t;s>0;a[p++]=255&n,n/=256,s-=8);return a[--p]|=128*f,a},da=function(e,t){var r,n=e.length,o=8*n-t-1,i=(1<<o)-1,a=i>>1,s=o-7,u=n-1,c=e[u--],l=127&c;for(c>>=7;s>0;l=256*l+e[u],u--,s-=8);for(r=l&(1<<-s)-1,l>>=-s,s+=t;s>0;r=256*r+e[u],u--,s-=8);if(0===l)l=1-a;else{if(l===i)return r?NaN:c?-1/0:1/0;r+=ca(2,t),l-=a}return(c?-1:1)*r*ca(2,l-t)},ga=Ae.f,ma=O.f,ya=ne.get,va=ne.set,ba=a.ArrayBuffer,wa=ba,Ea=a.DataView,Aa=Ea&&Ea.prototype,Ta=Object.prototype,xa=a.RangeError,Sa=ha,_a=da,Na=function(e){return[255&e]},Da=function(e){return[255&e,e>>8&255]},Ca=function(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]},ka=function(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]},Oa=function(e){return Sa(e,23,4)},Ra=function(e){return Sa(e,52,8)},La=function(e,t){ma(e.prototype,t,{get:function(){return ya(this)[t]}})},qa=function(e,t,r,n){var o=sa(r),i=ya(e);if(o+t>i.byteLength)throw xa("Wrong index");var a=ya(i.buffer).bytes,s=o+i.byteOffset,u=a.slice(s,s+t);return n?u:u.reverse()},Ia=function(e,t,r,n,o,i){var a=sa(r),s=ya(e);if(a+t>s.byteLength)throw xa("Wrong index");for(var u=ya(s.buffer).bytes,c=a+s.byteOffset,l=n(+o),f=0;f<t;f++)u[c+f]=l[i?f:t-f-1]};if(oa){if(!s((function(){ba(1)}))||!s((function(){new ba(-1);// eslint-disable-line no-new
}))||s((function(){// eslint-disable-line no-new
return new ba,// eslint-disable-line no-new
new ba(1.5),// eslint-disable-line no-new
new ba(NaN),"ArrayBuffer"!=ba.name}))){for(var Ba,Pa=(wa=function(e){return aa(this,wa),new ba(sa(e))}).prototype=ba.prototype,ja=ga(ba),Fa=0;ja.length>Fa;)(Ba=ja[Fa++])in wa||R(wa,Ba,ba[Ba]);Pa.constructor=wa}// WebKit bug - the same parent prototype for typed arrays and data view
bn&&Yr(Aa)!==Ta&&bn(Aa,Ta);// iOS Safari 7.x bug
var Ua=new Ea(new wa(2)),Va=Aa.setInt8;Ua.setInt8(0,2147483648),Ua.setInt8(1,2147483649),!Ua.getInt8(0)&&Ua.getInt8(1)||ia(Aa,{setInt8:function(e,t){Va.call(this,e,t<<24>>24)},setUint8:function(e,t){Va.call(this,e,t<<24>>24)}},{unsafe:1})}else wa=function(e){aa(this,wa,"ArrayBuffer");var t=sa(e);va(this,{bytes:xi.call(new Array(t),0),byteLength:t}),u||(this.byteLength=t)},Ea=function(e,t,r){aa(this,Ea,"DataView"),aa(e,wa,"DataView");var n=ya(e).byteLength,o=le(t);if(o<0||o>n)throw xa("Wrong offset");if(o+(r=void 0===r?n-o:pe(r))>n)throw xa("Wrong length");va(this,{buffer:e,byteLength:r,byteOffset:o}),u||(this.buffer=e,this.byteLength=r,this.byteOffset=o)},u&&(La(wa,"byteLength"),La(Ea,"buffer"),La(Ea,"byteLength"),La(Ea,"byteOffset")),ia(Ea.prototype,{getInt8:function(e){return qa(this,1,e)[0]<<24>>24},getUint8:function(e){return qa(this,1,e)[0]},getInt16:function(e/* , littleEndian */){var t=qa(this,2,e,arguments.length>1?arguments[1]:void 0);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e/* , littleEndian */){var t=qa(this,2,e,arguments.length>1?arguments[1]:void 0);return t[1]<<8|t[0]},getInt32:function(e/* , littleEndian */){return ka(qa(this,4,e,arguments.length>1?arguments[1]:void 0))},getUint32:function(e/* , littleEndian */){return ka(qa(this,4,e,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(e/* , littleEndian */){return _a(qa(this,4,e,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(e/* , littleEndian */){return _a(qa(this,8,e,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(e,t){Ia(this,1,e,Na,t)},setUint8:function(e,t){Ia(this,1,e,Na,t)},setInt16:function(e,t/* , littleEndian */){Ia(this,2,e,Da,t,arguments.length>2?arguments[2]:void 0)},setUint16:function(e,t/* , littleEndian */){Ia(this,2,e,Da,t,arguments.length>2?arguments[2]:void 0)},setInt32:function(e,t/* , littleEndian */){Ia(this,4,e,Ca,t,arguments.length>2?arguments[2]:void 0)},setUint32:function(e,t/* , littleEndian */){Ia(this,4,e,Ca,t,arguments.length>2?arguments[2]:void 0)},setFloat32:function(e,t/* , littleEndian */){Ia(this,4,e,Oa,t,arguments.length>2?arguments[2]:void 0)},setFloat64:function(e,t/* , littleEndian */){Ia(this,8,e,Ra,t,arguments.length>2?arguments[2]:void 0)}});Uo(wa,"ArrayBuffer"),Uo(Ea,"DataView");var Ma={ArrayBuffer:wa,DataView:Ea},Ha=Ma.ArrayBuffer,za=a.ArrayBuffer;// `ArrayBuffer` constructor
// https://tc39.github.io/ecma262/#sec-arraybuffer-constructor
qe({global:1,forced:za!==Ha},{ArrayBuffer:Ha}),no("ArrayBuffer");var Ga=function(e){if(to(e))throw TypeError("The method doesn't accept regular expressions");return e},Ya=ze("match");// `String.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-string.prototype.includes
qe({target:"String",proto:1,forced:!function(e){var t=/./;try{"/./"[e](t)}catch(r){try{return t[Ya]=0,"/./"[e](t)}catch(e){/* empty */}}return 0}("includes")},{includes:function(e/* , position = 0 */){return!!~String(y(this)).indexOf(Ga(e),arguments.length>1?arguments[1]:void 0)}});var Wa=Ln.trim;// check that a method works with the correct list
// of whitespaces and has a correct name
// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
qe({target:"String",proto:1,forced:function(e){return s((function(){return!!Dn[e]()||"​᠎"!="​᠎"[e]()||Dn[e].name!==e}))}("trim")},{trim:function(){return Wa(this)}});var $a=ze("iterator"),Ja=0;try{var Ka=0,Za={next:function(){return{done:!!Ka++}},return:function(){Ja=1}};Za[$a]=function(){return this},// eslint-disable-next-line no-throw-literal
Array.from(Za,(function(){throw 2}))}catch(e){/* empty */}var Qa,Xa=function(e,t){if(!t&&!Ja)return 0;var r=0;try{var n={};n[$a]=function(){return{next:function(){return{done:r=1}}}},e(n)}catch(e){/* empty */}return r},es=O.f,ts=a.Int8Array,rs=ts&&ts.prototype,ns=a.Uint8ClampedArray,os=ns&&ns.prototype,is=ts&&Yr(ts),as=rs&&Yr(rs),ss=Object.prototype,us=ss.isPrototypeOf,cs=ze("toStringTag"),ls=G("TYPED_ARRAY_TAG"),fs=oa&&!!bn&&"Opera"!==Lr(a.opera),ps=0,hs={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},ds=function(e){return b(e)&&A(hs,Lr(e))};for(Qa in hs)a[Qa]||(fs=0);// WebKit bug - typed arrays constructors prototype is Object.prototype
if((!fs||"function"!=typeof is||is===Function.prototype)&&(// eslint-disable-next-line no-shadow
is=function(){throw TypeError("Incorrect invocation")},fs))for(Qa in hs)a[Qa]&&bn(a[Qa],is);if((!fs||!as||as===ss)&&(as=is.prototype,fs))for(Qa in hs)a[Qa]&&bn(a[Qa].prototype,as);// WebKit bug - one more object in Uint8ClampedArray prototype chain
if(fs&&Yr(os)!==as&&bn(os,as),u&&!A(as,cs))for(Qa in ps=1,es(as,cs,{get:function(){return b(this)?this[ls]:void 0}}),hs)a[Qa]&&R(a[Qa],ls,Qa);var gs={NATIVE_ARRAY_BUFFER_VIEWS:fs,TYPED_ARRAY_TAG:ps&&ls,aTypedArray:function(e){if(ds(e))return e;throw TypeError("Target is not a typed array")},aTypedArrayConstructor:function(e){if(bn){if(us.call(is,e))return e}else for(var t in hs)if(A(hs,Qa)){var r=a[t];if(r&&(e===r||us.call(r,e)))return e}throw TypeError("Target is not a typed array constructor")},exportTypedArrayMethod:function(e,t,r){if(u){if(r)for(var n in hs){var o=a[n];o&&A(o.prototype,e)&&delete o.prototype[e]}as[e]&&!r||oe(as,e,r?t:fs&&rs[e]||t)}},exportTypedArrayStaticMethod:function(e,t,r){var n,o;if(u){if(bn){if(r)for(n in hs)(o=a[n])&&A(o,e)&&delete o[e];if(is[e]&&!r)return;// V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
try{return oe(is,e,r?t:fs&&ts[e]||t)}catch(e){/* empty */}}for(n in hs)!(o=a[n])||o[e]&&!r||oe(o,e,t)}},isView:function(e){var t=Lr(e);return"DataView"===t||A(hs,t)},isTypedArray:ds,TypedArray:is,TypedArrayPrototype:as},ms=gs.NATIVE_ARRAY_BUFFER_VIEWS,ys=a.ArrayBuffer,vs=a.Int8Array,bs=!ms||!s((function(){vs(1)}))||!s((function(){new vs(-1)}))||!Xa((function(e){new vs,new vs(null),new vs(1.5),new vs(e)}),1)||s((function(){// Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
return 1!==new vs(new ys(2),1,void 0).length})),ws=function(e,t){var r=function(e){var t=le(e);if(t<0)throw RangeError("The argument can't be less than 0");return t}(e);if(r%t)throw RangeError("Wrong offset");return r},Es=ze("iterator"),As=function(e){if(null!=e)return e[Es]||e["@@iterator"]||Li[Lr(e)]},Ts=ze("iterator"),xs=Array.prototype,Ss=function(e){return void 0!==e&&(Li.Array===e||xs[Ts]===e)},_s=gs.aTypedArrayConstructor,Ns=function(e/* , mapfn, thisArg */){var t,r,n,o,i,a,s=Pe(e),u=arguments.length,c=u>1?arguments[1]:void 0,l=void 0!==c,f=As(s);if(null!=f&&!Ss(f))for(a=(i=f.call(s)).next,s=[];!(o=a.call(i)).done;)s.push(o.value);for(l&&u>2&&(c=Be(c,arguments[2],2)),r=pe(s.length),n=new(_s(this))(r),t=0;r>t;t++)n[t]=l?c(s[t],t):s[t];return n};/* eslint-disable no-new */ // `Uint8Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
r((function(e){var t=Ae.f,r=Je.forEach,n=ne.get,o=ne.set,i=O.f,s=D.f,c=Math.round,l=a.RangeError,f=Ma.ArrayBuffer,h=Ma.DataView,d=gs.NATIVE_ARRAY_BUFFER_VIEWS,g=gs.TYPED_ARRAY_TAG,m=gs.TypedArray,y=gs.TypedArrayPrototype,v=gs.aTypedArrayConstructor,E=gs.isTypedArray,T=function(e,t){for(var r=0,n=t.length,o=new(v(e))(n);n>r;)o[r]=t[r++];return o},x=function(e,t){i(e,t,{get:function(){return n(this)[t]}})},S=function(e){var t;return e instanceof f||"ArrayBuffer"==(t=Lr(e))||"SharedArrayBuffer"==t},_=function(e,t){return E(e)&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},N=function(e,t){return _(e,t=w(t,1))?p(2,e[t]):s(e,t)},C=function(e,t,r){return!(_(e,t=w(t,1))&&b(r)&&A(r,"value"))||A(r,"get")||A(r,"set")||r.configurable||A(r,"writable")&&!r.writable||A(r,"enumerable")&&!r.enumerable?i(e,t,r):(e[t]=r.value,e)};u?(d||(D.f=N,O.f=C,x(y,"buffer"),x(y,"byteOffset"),x(y,"byteLength"),x(y,"length")),qe({target:"Object",stat:1,forced:!d},{getOwnPropertyDescriptor:N,defineProperty:C}),e.exports=function(e,s,u){var p=e.match(/\d+$/)[0]/8,v=e+(u?"Clamped":"")+"Array",w="get"+e,A="set"+e,x=a[v],_=x,N=_&&_.prototype,D={},C=function(e,t){i(e,t,{get:function(){return function(e,t){var r=n(e);return r.view[w](t*p+r.byteOffset,1)}(this,t)},set:function(e){return function(e,t,r){var o=n(e);u&&(r=(r=c(r))<0?0:r>255?255:255&r),o.view[A](t*p+o.byteOffset,r,1)}(this,t,e)},enumerable:1})};d?bs&&(_=s((function(e,t,r,n){return aa(e,_,v),wn(b(t)?S(t)?void 0!==n?new x(t,ws(r,p),n):void 0!==r?new x(t,ws(r,p)):new x(t):E(t)?T(_,t):Ns.call(_,t):new x(sa(t)),e,_)})),bn&&bn(_,m),r(t(x),(function(e){e in _||R(_,e,x[e])})),_.prototype=N):(_=s((function(e,t,r,n){aa(e,_,v);var i,a,s,u=0,c=0;if(b(t)){if(!S(t))return E(t)?T(_,t):Ns.call(_,t);i=t,c=ws(r,p);var d=t.byteLength;if(void 0===n){if(d%p)throw l("Wrong length");if((a=d-c)<0)throw l("Wrong length")}else if((a=pe(n)*p)+c>d)throw l("Wrong length");s=a/p}else s=sa(t),i=new f(a=s*p);for(o(e,{buffer:i,byteOffset:c,byteLength:a,length:s,view:new h(i)});u<s;)C(e,u++)})),bn&&bn(_,m),N=_.prototype=Nn(y)),N.constructor!==_&&R(N,"constructor",_),g&&R(N,g,v),D[v]=_,qe({global:1,forced:_!=x,sham:!d},D),"BYTES_PER_ELEMENT"in _||R(_,"BYTES_PER_ELEMENT",p),"BYTES_PER_ELEMENT"in N||R(N,"BYTES_PER_ELEMENT",p),no(v)}):e.exports=function(){/* empty */}}))("Uint8",(function(e){return function(t,r,n){return e(this,t,r,n)}}));var Ds=Math.min,Cs=[].copyWithin||function(e/* = 0 */,t/* = 0, end = @length */){var r=Pe(this),n=pe(r.length),o=ge(e,n),i=ge(t,n),a=arguments.length>2?arguments[2]:void 0,s=Ds((void 0===a?n:ge(a,n))-i,n-o),u=1;for(i<o&&o<i+s&&(u=-1,i+=s-1,o+=s-1);s-- >0;)i in r?r[o]=r[i]:delete r[o],o+=u,i+=u;return r},ks=gs.aTypedArray;// `Array.prototype.copyWithin` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin
// `%TypedArray%.prototype.copyWithin` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.copywithin
(0,gs.exportTypedArrayMethod)("copyWithin",(function(e,t/* , end */){return Cs.call(ks(this),e,t,arguments.length>2?arguments[2]:void 0)}));var Os=Je.every,Rs=gs.aTypedArray;// `%TypedArray%.prototype.every` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.every
(0,gs.exportTypedArrayMethod)("every",(function(e/* , thisArg */){return Os(Rs(this),e,arguments.length>1?arguments[1]:void 0)}));var Ls=gs.aTypedArray;// `%TypedArray%.prototype.fill` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.fill
// eslint-disable-next-line no-unused-vars
(0,gs.exportTypedArrayMethod)("fill",(function(e/* , start, end */){return xi.apply(Ls(this),arguments)}));var qs=Je.filter,Is=gs.aTypedArray,Bs=gs.aTypedArrayConstructor;// `%TypedArray%.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.filter
(0,gs.exportTypedArrayMethod)("filter",(function(e/* , thisArg */){for(var t=qs(Is(this),e,arguments.length>1?arguments[1]:void 0),r=ko(this,this.constructor),n=0,o=t.length,i=new(Bs(r))(o);o>n;)i[n]=t[n++];return i}));var Ps=Je.find,js=gs.aTypedArray;// `%TypedArray%.prototype.find` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.find
(0,gs.exportTypedArrayMethod)("find",(function(e/* , thisArg */){return Ps(js(this),e,arguments.length>1?arguments[1]:void 0)}));var Fs=Je.findIndex,Us=gs.aTypedArray;// `%TypedArray%.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.findindex
(0,gs.exportTypedArrayMethod)("findIndex",(function(e/* , thisArg */){return Fs(Us(this),e,arguments.length>1?arguments[1]:void 0)}));var Vs=Je.forEach,Ms=gs.aTypedArray;// `%TypedArray%.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.foreach
(0,gs.exportTypedArrayMethod)("forEach",(function(e/* , thisArg */){Vs(Ms(this),e,arguments.length>1?arguments[1]:void 0)}));var Hs=ye.includes,zs=gs.aTypedArray;// `%TypedArray%.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.includes
(0,gs.exportTypedArrayMethod)("includes",(function(e/* , fromIndex */){return Hs(zs(this),e,arguments.length>1?arguments[1]:void 0)}));var Gs=ye.indexOf,Ys=gs.aTypedArray;// `%TypedArray%.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.indexof
(0,gs.exportTypedArrayMethod)("indexOf",(function(e/* , fromIndex */){return Gs(Ys(this),e,arguments.length>1?arguments[1]:void 0)}));var Ws=ze("iterator"),$s=a.Uint8Array,Js=Yi.values,Ks=Yi.keys,Zs=Yi.entries,Qs=gs.aTypedArray,Xs=gs.exportTypedArrayMethod,eu=$s&&$s.prototype[Ws],tu=!!eu&&("values"==eu.name||null==eu.name),ru=function(){return Js.call(Qs(this))};// `%TypedArray%.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.entries
Xs("entries",(function(){return Zs.call(Qs(this))})),// `%TypedArray%.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.keys
Xs("keys",(function(){return Ks.call(Qs(this))})),// `%TypedArray%.prototype.values` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.values
Xs("values",ru,!tu),// `%TypedArray%.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype-@@iterator
Xs(Ws,ru,!tu);var nu=gs.aTypedArray,ou=[].join;// `%TypedArray%.prototype.join` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.join
// eslint-disable-next-line no-unused-vars
(0,gs.exportTypedArrayMethod)("join",(function(e){return ou.apply(nu(this),arguments)}));var iu=gs.aTypedArray;// `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.lastindexof
// eslint-disable-next-line no-unused-vars
(0,gs.exportTypedArrayMethod)("lastIndexOf",(function(e/* , fromIndex */){return Qi.apply(iu(this),arguments)}));var au=Je.map,su=gs.aTypedArray,uu=gs.aTypedArrayConstructor;// `%TypedArray%.prototype.map` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map
(0,gs.exportTypedArrayMethod)("map",(function(e/* , thisArg */){return au(su(this),e,arguments.length>1?arguments[1]:void 0,(function(e,t){return new(uu(ko(e,e.constructor)))(t)}))}));var cu=dn.left,lu=gs.aTypedArray;// `%TypedArray%.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduce
(0,gs.exportTypedArrayMethod)("reduce",(function(e/* , initialValue */){return cu(lu(this),e,arguments.length,arguments.length>1?arguments[1]:void 0)}));var fu=dn.right,pu=gs.aTypedArray;// `%TypedArray%.prototype.reduceRicht` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduceright
(0,gs.exportTypedArrayMethod)("reduceRight",(function(e/* , initialValue */){return fu(pu(this),e,arguments.length,arguments.length>1?arguments[1]:void 0)}));var hu=gs.aTypedArray,du=gs.exportTypedArrayMethod,gu=Math.floor;// `%TypedArray%.prototype.reverse` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reverse
du("reverse",(function(){for(var e,t=hu(this).length,r=gu(t/2),n=0;n<r;)e=this[n],this[n++]=this[--t],this[t]=e;return this}));var mu=gs.aTypedArray;// `%TypedArray%.prototype.set` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.set
(0,gs.exportTypedArrayMethod)("set",(function(e/* , offset */){mu(this);var t=ws(arguments.length>1?arguments[1]:void 0,1),r=this.length,n=Pe(e),o=pe(n.length),i=0;if(o+t>r)throw RangeError("Wrong length");for(;i<o;)this[t+i]=n[i++]}),s((function(){// eslint-disable-next-line no-undef
new Int8Array(1).set({})})));var yu=gs.aTypedArray,vu=gs.aTypedArrayConstructor,bu=[].slice;// `%TypedArray%.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.slice
(0,gs.exportTypedArrayMethod)("slice",(function(e,t){for(var r=bu.call(yu(this),e,t),n=ko(this,this.constructor),o=0,i=r.length,a=new(vu(n))(i);i>o;)a[o]=r[o++];return a}),s((function(){// eslint-disable-next-line no-undef
new Int8Array(1).slice()})));var wu=Je.some,Eu=gs.aTypedArray;// `%TypedArray%.prototype.some` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.some
(0,gs.exportTypedArrayMethod)("some",(function(e/* , thisArg */){return wu(Eu(this),e,arguments.length>1?arguments[1]:void 0)}));var Au=gs.aTypedArray,Tu=[].sort;// `%TypedArray%.prototype.sort` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.sort
(0,gs.exportTypedArrayMethod)("sort",(function(e){return Tu.call(Au(this),e)}));var xu=gs.aTypedArray;// `%TypedArray%.prototype.subarray` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.subarray
(0,gs.exportTypedArrayMethod)("subarray",(function(e,t){var r=xu(this),n=r.length,o=ge(e,n);return new(ko(r,r.constructor))(r.buffer,r.byteOffset+o*r.BYTES_PER_ELEMENT,pe((void 0===t?n:ge(t,n))-o))}));var Su=a.Int8Array,_u=gs.aTypedArray,Nu=gs.exportTypedArrayMethod,Du=[].toLocaleString,Cu=[].slice,ku=!!Su&&s((function(){Du.call(new Su(1))}));// `%TypedArray%.prototype.toLocaleString` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tolocalestring
Nu("toLocaleString",(function(){return Du.apply(ku?Cu.call(_u(this)):_u(this),arguments)}),s((function(){return[1,2].toLocaleString()!=new Su([1,2]).toLocaleString()}))||!s((function(){Su.prototype.toLocaleString.call([1,2])})));var Ou=gs.exportTypedArrayMethod,Ru=a.Uint8Array,Lu=Ru&&Ru.prototype||{},qu=[].toString,Iu=[].join;s((function(){qu.call({})}))&&(qu=function(){return Iu.call(this)});var Bu=Lu.toString!=qu;// `%TypedArray%.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tostring
Ou("toString",qu,Bu),// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
qe({target:"URL",proto:1,enumerable:1},{toJSON:function(){return URL.prototype.toString.call(this)}});var Pu=[],ju=[],Fu="undefined"!=typeof Uint8Array?Uint8Array:Array,Uu=0;function Vu(){Uu=1;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,r=e.length;t<r;++t)Pu[t]=e[t],ju[e.charCodeAt(t)]=t;ju["-".charCodeAt(0)]=62,ju["_".charCodeAt(0)]=63}function Mu(e,t,r){for(var n,o,i=[],a=t;a<r;a+=3)n=(e[a]<<16)+(e[a+1]<<8)+e[a+2],i.push(Pu[(o=n)>>18&63]+Pu[o>>12&63]+Pu[o>>6&63]+Pu[63&o]);return i.join("")}function Hu(e){var t;Uu||Vu();// must be multiple of 3
// go through the array every three bytes, we'll deal with trailing stuff later
for(var r=e.length,n=r%3,o="",i=[],a=0,s=r-n;a<s;a+=16383)i.push(Mu(e,a,a+16383>s?s:a+16383));// pad the end with zeros, but make sure to not forget the extra bytes
return 1===n?(t=e[r-1],o+=Pu[t>>2],o+=Pu[t<<4&63],o+="=="):2===n&&(t=(e[r-2]<<8)+e[r-1],o+=Pu[t>>10],o+=Pu[t>>4&63],o+=Pu[t<<2&63],o+="="),i.push(o),i.join("")}function zu(e,t,r,n,o){var i,a,s=8*o-n-1,u=(1<<s)-1,c=u>>1,l=-7,f=r?o-1:0,p=r?-1:1,h=e[t+f];for(f+=p,i=h&(1<<-l)-1,h>>=-l,l+=s;l>0;i=256*i+e[t+f],f+=p,l-=8);for(a=i&(1<<-l)-1,i>>=-l,l+=n;l>0;a=256*a+e[t+f],f+=p,l-=8);if(0===i)i=1-c;else{if(i===u)return a?NaN:1/0*(h?-1:1);a+=Math.pow(2,n),i-=c}return(h?-1:1)*a*Math.pow(2,i-n)}function Gu(e,t,r,n,o,i){var a,s,u,c=8*i-o-1,l=(1<<c)-1,f=l>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:i-1,d=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=l):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+f>=1?p/u:p*Math.pow(2,1-f))*u>=2&&(a++,u/=2),a+f>=l?(s=0,a=l):a+f>=1?(s=(t*u-1)*Math.pow(2,o),a+=f):(s=t*Math.pow(2,f-1)*Math.pow(2,o),a=0));o>=8;e[r+h]=255&s,h+=d,s/=256,o-=8);for(a=a<<o|s,c+=o;c>0;e[r+h]=255&a,h+=d,a/=256,c-=8);e[r+h-d]|=128*g}var Yu={}.toString,Wu=Array.isArray||function(e){return"[object Array]"==Yu.call(e)};function $u(){return Ku.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function Ju(e,t){if($u()<t)throw new RangeError("Invalid typed array length");return Ku.TYPED_ARRAY_SUPPORT?(// Return an augmented `Uint8Array` instance, for best performance
e=new Uint8Array(t)).__proto__=Ku.prototype:(// Fallback: Return an object instance of the Buffer class
null===e&&(e=new Ku(t)),e.length=t),e}
/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */function Ku(e,t,r){if(!(Ku.TYPED_ARRAY_SUPPORT||this instanceof Ku))return new Ku(e,t,r);// Common case.
if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return Xu(this,e)}return Zu(this,e,t,r)}function Zu(e,t,r,n){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,r,n){// this throws if `array` is not a valid ArrayBuffer
if(t.byteLength,r<0||t.byteLength<r)throw new RangeError("'offset' is out of bounds");if(t.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");return t=void 0===r&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,r):new Uint8Array(t,r,n),Ku.TYPED_ARRAY_SUPPORT?(// Return an augmented `Uint8Array` instance, for best performance
e=t).__proto__=Ku.prototype:// Fallback: Return an object instance of the Buffer class
e=ec(e,t),e}(e,t,r,n):"string"==typeof t?function(e,t,r){if("string"==typeof r&&""!==r||(r="utf8"),!Ku.isEncoding(r))throw new TypeError('"encoding" must be a valid string encoding');var n=0|nc(t,r),o=(e=Ju(e,n)).write(t,r);return o!==n&&(// Writing a hex string, for example, that contains invalid characters will
// cause everything after the first invalid character to be ignored. (e.g.
// 'abxxcd' will be treated as 'ab')
e=e.slice(0,o)),e}(e,t,r):function(e,t){if(rc(t)){var r=0|tc(t.length);return 0===(e=Ju(e,r)).length||t.copy(e,0,0,r),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(n=t.length)!=n?Ju(e,0):ec(e,t);if("Buffer"===t.type&&Wu(t.data))return ec(e,t.data)}var n;// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence
// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}
/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/function Qu(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function Xu(e,t){if(Qu(t),e=Ju(e,t<0?0:0|tc(t)),!Ku.TYPED_ARRAY_SUPPORT)for(var r=0;r<t;++r)e[r]=0;return e}
/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */function ec(e,t){var r=t.length<0?0:0|tc(t.length);e=Ju(e,r);for(var n=0;n<r;n+=1)e[n]=255&t[n];return e}function tc(e){// Note: cannot use `length < kMaxLength()` here because that fails when
// length is NaN (which is otherwise coerced to zero.)
if(e>=$u())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+$u().toString(16)+" bytes");return 0|e}function rc(e){return!(null==e||!e._isBuffer)}function nc(e,t){if(rc(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var r=e.length;if(0===r)return 0;// Use a for loop to avoid recursion
for(var n=0;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return Dc(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return Cc(e).length;default:if(n)return Dc(e).length;// assume utf8
t=(""+t).toLowerCase(),n=1}}function oc(e,t,r){var n=0;// No need to verify that "this.length <= MAX_UINT32" since it's a read-only
// property of a typed array.
// This behaves neither like String nor Uint8Array in that we set start/end
// to their upper/lower bounds if the value passed is out of range.
// undefined is handled specially as per ECMA-262 6th Edition,
// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
// Return early if start > this.length. Done here to prevent potential uint32
// coercion fail below.
if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";// Force coersion to uint32. This will also coerce falsey/NaN values to 0.
if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return vc(this,t,r);case"utf8":case"utf-8":return gc(this,t,r);case"ascii":return mc(this,t,r);case"latin1":case"binary":return yc(this,t,r);case"base64":return dc(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return bc(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=1}}// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
function ic(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function ac(e,t,r,n,o){// Empty buffer means no match
if(0===e.length)return-1;// Normalize byteOffset
if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,// Coerce to Number.
isNaN(r)&&(// byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
r=o?0:e.length-1),// Normalize byteOffset: negative offsets start from the end of the buffer
r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}// Normalize val
// Finally, search either indexOf (if dir is true) or lastIndexOf
if("string"==typeof t&&(t=Ku.from(t,n)),rc(t))// Special case: looking for empty string/buffer always fails
return 0===t.length?-1:sc(e,t,r,n,o);if("number"==typeof t)// Search for a byte value [0-255]
return t&=255,Ku.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):sc(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function sc(e,t,r,n,o){var i,a=1,s=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,r/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(o){var l=-1;for(i=r;i<s;i++)if(c(e,i)===c(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===u)return l*a}else-1!==l&&(i-=i-l),l=-1}else for(r+u>s&&(r=s-u),i=r;i>=0;i--){for(var f=1,p=0;p<u;p++)if(c(e,i+p)!==c(t,p)){f=0;break}if(f)return i}return-1}function uc(e,t,r,n){r=Number(r)||0;var o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;// must be an even number of digits
var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");n>i/2&&(n=i/2);for(var a=0;a<n;++a){var s=parseInt(t.substr(2*a,2),16);if(isNaN(s))return a;e[r+a]=s}return a}function cc(e,t,r,n){return kc(Dc(t,e.length-r),e,r,n)}function lc(e,t,r,n){return kc(function(e){for(var t=[],r=0;r<e.length;++r)// Node's code seems to be doing this and not & 0x7F..
t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function fc(e,t,r,n){return lc(e,t,r,n)}function pc(e,t,r,n){return kc(Cc(t),e,r,n)}function hc(e,t,r,n){return kc(function(e,t){for(var r,n,o,i=[],a=0;a<e.length&&!((t-=2)<0);++a)r=e.charCodeAt(a),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function dc(e,t,r){return 0===t&&r===e.length?Hu(e):Hu(e.slice(t,r))}function gc(e,t,r){r=Math.min(e.length,r);for(var n=[],o=t;o<r;){var i,a,s,u,c=e[o],l=null,f=c>239?4:c>223?3:c>191?2:1;if(o+f<=r)switch(f){case 1:c<128&&(l=c);break;case 2:128==(192&(i=e[o+1]))&&(u=(31&c)<<6|63&i)>127&&(l=u);break;case 3:i=e[o+1],a=e[o+2],128==(192&i)&&128==(192&a)&&(u=(15&c)<<12|(63&i)<<6|63&a)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:i=e[o+1],a=e[o+2],s=e[o+3],128==(192&i)&&128==(192&a)&&128==(192&s)&&(u=(15&c)<<18|(63&i)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(// we did not generate a valid codePoint so insert a
// replacement char (U+FFFD) and advance only 1 byte
l=65533,f=1):l>65535&&(// encode to utf16 (surrogate pair dance)
l-=65536,n.push(l>>>10&1023|55296),l=56320|1023&l),n.push(l),o+=f}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);// avoid extra slice()
// Decode in chunks to avoid "call stack size exceeded".
for(var r="",n=0;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
function mc(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function yc(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function vc(e,t,r){var n,o=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>o)&&(r=o);for(var i="",a=t;a<r;++a)i+=(n=e[a])<16?"0"+n.toString(16):n.toString(16);return i}function bc(e,t,r){for(var n=e.slice(t,r),o="",i=0;i<n.length;i+=2)o+=String.fromCharCode(n[i]+256*n[i+1]);return o}
/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
function wc(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function Ec(e,t,r,n,o,i){if(!rc(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function Ac(e,t,r,n){t<0&&(t=65535+t+1);for(var o=0,i=Math.min(e.length-r,2);o<i;++o)e[r+o]=(t&255<<8*(n?o:1-o))>>>8*(n?o:1-o)}function Tc(e,t,r,n){t<0&&(t=4294967295+t+1);for(var o=0,i=Math.min(e.length-r,4);o<i;++o)e[r+o]=t>>>8*(n?o:3-o)&255}function xc(e,t,r,n,o,i){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function Sc(e,t,r,n,o){return o||xc(e,0,r,4),Gu(e,t,r,n,23,4),r+4}function _c(e,t,r,n,o){return o||xc(e,0,r,8),Gu(e,t,r,n,52,8),r+8}
/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
Ku.TYPED_ARRAY_SUPPORT=void 0!==nr.TYPED_ARRAY_SUPPORT?nr.TYPED_ARRAY_SUPPORT:1,Ku.poolSize=8192,// not used by this implementation
// TODO: Legacy, not needed anymore. Remove in next major version.
Ku._augment=function(e){return e.__proto__=Ku.prototype,e},Ku.from=function(e,t,r){return Zu(null,e,t,r)},Ku.TYPED_ARRAY_SUPPORT&&(Ku.prototype.__proto__=Uint8Array.prototype,Ku.__proto__=Uint8Array),
/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
Ku.alloc=function(e,t,r){return function(e,t,r,n){return Qu(t),t<=0?Ju(e,t):void 0!==r?"string"==typeof n?Ju(e,t).fill(r,n):Ju(e,t).fill(r):Ju(e,t)}(null,e,t,r)},Ku.allocUnsafe=function(e){return Xu(null,e)},
/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
Ku.allocUnsafeSlow=function(e){return Xu(null,e)},Ku.isBuffer=Oc,Ku.compare=function(e,t){if(!rc(e)||!rc(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var r=e.length,n=t.length,o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},Ku.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 1;default:return 0}},Ku.concat=function(e,t){if(!Wu(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Ku.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var n=Ku.allocUnsafe(t),o=0;for(r=0;r<e.length;++r){var i=e[r];if(!rc(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(n,o),o+=i.length}return n},Ku.byteLength=nc,Ku.prototype._isBuffer=1,Ku.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)ic(this,t,t+1);return this},Ku.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)ic(this,t,t+3),ic(this,t+1,t+2);return this},Ku.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)ic(this,t,t+7),ic(this,t+1,t+6),ic(this,t+2,t+5),ic(this,t+3,t+4);return this},Ku.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?gc(this,0,e):oc.apply(this,arguments)},Ku.prototype.equals=function(e){if(!rc(e))throw new TypeError("Argument must be a Buffer");return this===e?1:0===Ku.compare(this,e)},Ku.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},Ku.prototype.compare=function(e,t,r,n,o){if(!rc(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;for(var i=(o>>>=0)-(n>>>=0),a=(r>>>=0)-(t>>>=0),s=Math.min(i,a),u=this.slice(n,o),c=e.slice(t,r),l=0;l<s;++l)if(u[l]!==c[l]){i=u[l],a=c[l];break}return i<a?-1:a<i?1:0},Ku.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},Ku.prototype.indexOf=function(e,t,r){return ac(this,e,t,r,1)},Ku.prototype.lastIndexOf=function(e,t,r){return ac(this,e,t,r,0)},Ku.prototype.write=function(e,t,r,n){// Buffer#write(string)
if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var i=0;;)switch(n){case"hex":return uc(this,e,t,r);case"utf8":case"utf-8":return cc(this,e,t,r);case"ascii":return lc(this,e,t,r);case"latin1":case"binary":return fc(this,e,t,r);case"base64":// Warning: maxLength not taken into account in base64Write
return pc(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return hc(this,e,t,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=1}},Ku.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},Ku.prototype.slice=function(e,t){var r,n=this.length;if((e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e),Ku.TYPED_ARRAY_SUPPORT)(r=this.subarray(e,t)).__proto__=Ku.prototype;else{var o=t-e;r=new Ku(o,void 0);for(var i=0;i<o;++i)r[i]=this[i+e]}return r},Ku.prototype.readUIntLE=function(e,t,r){e|=0,t|=0,r||wc(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n},Ku.prototype.readUIntBE=function(e,t,r){e|=0,t|=0,r||wc(e,t,this.length);for(var n=this[e+--t],o=1;t>0&&(o*=256);)n+=this[e+--t]*o;return n},Ku.prototype.readUInt8=function(e,t){return t||wc(e,1,this.length),this[e]},Ku.prototype.readUInt16LE=function(e,t){return t||wc(e,2,this.length),this[e]|this[e+1]<<8},Ku.prototype.readUInt16BE=function(e,t){return t||wc(e,2,this.length),this[e]<<8|this[e+1]},Ku.prototype.readUInt32LE=function(e,t){return t||wc(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Ku.prototype.readUInt32BE=function(e,t){return t||wc(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Ku.prototype.readIntLE=function(e,t,r){e|=0,t|=0,r||wc(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n>=(o*=128)&&(n-=Math.pow(2,8*t)),n},Ku.prototype.readIntBE=function(e,t,r){e|=0,t|=0,r||wc(e,t,this.length);for(var n=t,o=1,i=this[e+--n];n>0&&(o*=256);)i+=this[e+--n]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*t)),i},Ku.prototype.readInt8=function(e,t){return t||wc(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Ku.prototype.readInt16LE=function(e,t){t||wc(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},Ku.prototype.readInt16BE=function(e,t){t||wc(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},Ku.prototype.readInt32LE=function(e,t){return t||wc(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Ku.prototype.readInt32BE=function(e,t){return t||wc(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Ku.prototype.readFloatLE=function(e,t){return t||wc(e,4,this.length),zu(this,e,1,23,4)},Ku.prototype.readFloatBE=function(e,t){return t||wc(e,4,this.length),zu(this,e,0,23,4)},Ku.prototype.readDoubleLE=function(e,t){return t||wc(e,8,this.length),zu(this,e,1,52,8)},Ku.prototype.readDoubleBE=function(e,t){return t||wc(e,8,this.length),zu(this,e,0,52,8)},Ku.prototype.writeUIntLE=function(e,t,r,n){e=+e,t|=0,r|=0,n||Ec(this,e,t,r,Math.pow(2,8*r)-1,0);var o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},Ku.prototype.writeUIntBE=function(e,t,r,n){e=+e,t|=0,r|=0,n||Ec(this,e,t,r,Math.pow(2,8*r)-1,0);var o=r-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+r},Ku.prototype.writeUInt8=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,1,255,0),Ku.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},Ku.prototype.writeUInt16LE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,2,65535,0),Ku.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):Ac(this,e,t,1),t+2},Ku.prototype.writeUInt16BE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,2,65535,0),Ku.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):Ac(this,e,t,0),t+2},Ku.prototype.writeUInt32LE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,4,4294967295,0),Ku.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):Tc(this,e,t,1),t+4},Ku.prototype.writeUInt32BE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,4,4294967295,0),Ku.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):Tc(this,e,t,0),t+4},Ku.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);Ec(this,e,t,r,o-1,-o)}var i=0,a=1,s=0;for(this[t]=255&e;++i<r&&(a*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+r},Ku.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);Ec(this,e,t,r,o-1,-o)}var i=r-1,a=1,s=0;for(this[t+i]=255&e;--i>=0&&(a*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+r},Ku.prototype.writeInt8=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,1,127,-128),Ku.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},Ku.prototype.writeInt16LE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,2,32767,-32768),Ku.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):Ac(this,e,t,1),t+2},Ku.prototype.writeInt16BE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,2,32767,-32768),Ku.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):Ac(this,e,t,0),t+2},Ku.prototype.writeInt32LE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,4,2147483647,-2147483648),Ku.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):Tc(this,e,t,1),t+4},Ku.prototype.writeInt32BE=function(e,t,r){return e=+e,t|=0,r||Ec(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),Ku.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):Tc(this,e,t,0),t+4},Ku.prototype.writeFloatLE=function(e,t,r){return Sc(this,e,t,1,r)},Ku.prototype.writeFloatBE=function(e,t,r){return Sc(this,e,t,0,r)},Ku.prototype.writeDoubleLE=function(e,t,r){return _c(this,e,t,1,r)},Ku.prototype.writeDoubleBE=function(e,t,r){return _c(this,e,t,0,r)},// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Ku.prototype.copy=function(e,t,r,n){// Copy 0 bytes; we're done
if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;// Fatal error conditions
if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");// Are we oob?
n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var o,i=n-r;if(this===e&&r<t&&t<n)// descending copy from end
for(o=i-1;o>=0;--o)e[o+t]=this[o+r];else if(i<1e3||!Ku.TYPED_ARRAY_SUPPORT)// ascending copy from start
for(o=0;o<i;++o)e[o+t]=this[o+r];else Uint8Array.prototype.set.call(e,this.subarray(r,r+i),t);return i},// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Ku.prototype.fill=function(e,t,r,n){// Handle string cases:
if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!Ku.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof e&&(e&=255);// Invalid ranges are not set to a default, so can range check early.
if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{var a=rc(e)?e:Dc(new Ku(e,n).toString()),s=a.length;for(i=0;i<r-t;++i)this[i+t]=a[i%s]}return this};// HELPER FUNCTIONS
// ================
var Nc=/[^+\/0-9A-Za-z-_]/g;function Dc(e,t){var r;t=t||1/0;for(var n=e.length,o=null,i=[],a=0;a<n;++a){// is surrogate component
if((r=e.charCodeAt(a))>55295&&r<57344){// last char was a lead
if(!o){// no lead yet
if(r>56319){// unexpected trail
(t-=3)>-1&&i.push(239,191,189);continue}// valid lead
if(a+1===n){// unpaired lead
(t-=3)>-1&&i.push(239,191,189);continue}o=r;continue}// 2 leads in a row
if(r<56320){(t-=3)>-1&&i.push(239,191,189),o=r;continue}// valid surrogate pair
r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);// encode utf8
if(o=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function Cc(e){return function(e){var t,r,n,o,i,a;Uu||Vu();var s=e.length;if(s%4>0)throw new Error("Invalid string. Length must be a multiple of 4");// the number of equal signs (place holders)
// if there are two placeholders, than the two characters before it
// represent one byte
// if there is only one, then the three characters before it represent 2 bytes
// this is just a cheap hack to not do indexOf twice
i="="===e[s-2]?2:"="===e[s-1]?1:0,// base64 is 4/3 + up to two characters of the original data
a=new Fu(3*s/4-i),// if there are placeholders, only get up to the last complete 4 chars
n=i>0?s-4:s;var u=0;for(t=0,r=0;t<n;t+=4,r+=3)o=ju[e.charCodeAt(t)]<<18|ju[e.charCodeAt(t+1)]<<12|ju[e.charCodeAt(t+2)]<<6|ju[e.charCodeAt(t+3)],a[u++]=o>>16&255,a[u++]=o>>8&255,a[u++]=255&o;return 2===i?(o=ju[e.charCodeAt(t)]<<2|ju[e.charCodeAt(t+1)]>>4,a[u++]=255&o):1===i&&(o=ju[e.charCodeAt(t)]<<10|ju[e.charCodeAt(t+1)]<<4|ju[e.charCodeAt(t+2)]>>2,a[u++]=o>>8&255,a[u++]=255&o),a}(function(e){// Node converts strings with length < 2 to ''
if((// Node strips out invalid characters like \n and \t from the string, base64-js does not
e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(Nc,"")).length<2)return"";// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
for(;e.length%4!=0;)e+="=";return e}(e))}function kc(e,t,r,n){for(var o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function Oc(e){return null!=e&&(!!e._isBuffer||Rc(e)||// For Node v0.10 support. Remove this eventually.
function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&Rc(e.slice(0,0))}(e))}function Rc(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var Lc="function"==typeof Object.create?function(e,t){// implementation from standard node.js 'util' module
e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:0,writable:1,configurable:1}})}:function(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e},qc=/%[sdj%]/g;function Ic(e){if(!Kc(e)){for(var t=[],r=0;r<arguments.length;r++)t.push(Uc(arguments[r]));return t.join(" ")}r=1;for(var n=arguments,o=n.length,i=String(e).replace(qc,(function(e){if("%%"===e)return"%";if(r>=o)return e;switch(e){case"%s":return String(n[r++]);case"%d":return Number(n[r++]);case"%j":try{return JSON.stringify(n[r++])}catch(e){return"[Circular]"}default:return e}})),a=n[r];r<o;a=n[++r])$c(a)||!Xc(a)?i+=" "+a:i+=" "+Uc(a);return i}// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
function Bc(e,t){// Allow for deprecating things in the process of starting up.
if(Zc(nr.process))return function(){return Bc(e,t).apply(this,arguments)};if(1==Dr.noDeprecation)return e;var r=0;return function(){if(!r){if(Dr.throwDeprecation)throw new Error(t);Dr.traceDeprecation?console.trace(t):console.error(t),r=1}return e.apply(this,arguments)}}var Pc,jc={};function Fc(e){return Zc(Pc)&&(Pc=Dr.env.NODE_DEBUG||""),e=e.toUpperCase(),jc[e]||(new RegExp("\\b"+e+"\\b","i").test(Pc)?jc[e]=function(){var t=Ic.apply(null,arguments);console.error("%s %d: %s",e,0,t)}:jc[e]=function(){}),jc[e]}
/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
/* legacy: obj, showHidden, depth, colors*/function Uc(e,t){// default options
var r={seen:[],stylize:Mc};// legacy...
return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),Wc(t)?// legacy...
r.showHidden=t:t&&// got an "options" object
sl(r,t),// set default options
Zc(r.showHidden)&&(r.showHidden=0),Zc(r.depth)&&(r.depth=2),Zc(r.colors)&&(r.colors=0),Zc(r.customInspect)&&(r.customInspect=1),r.colors&&(r.stylize=Vc),Hc(r,e,r.depth)}// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
function Vc(e,t){var r=Uc.styles[t];return r?"["+Uc.colors[r][0]+"m"+e+"["+Uc.colors[r][1]+"m":e}function Mc(e,t){return e}function Hc(e,t,r){// Provide a hook for user-specified inspect functions.
// Check that value is an object with an inspect function on it
if(e.customInspect&&t&&rl(t.inspect)&&// Filter out the util module, it's inspect function is special
t.inspect!==Uc&&(!t.constructor||t.constructor.prototype!==t)){var n=t.inspect(r,e);return Kc(n)||(n=Hc(e,n,r)),n}// Primitive types cannot have properties
var o=function(e,t){if(Zc(t))return e.stylize("undefined","undefined");if(Kc(t)){var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(r,"string")}return Jc(t)?e.stylize(""+t,"number"):Wc(t)?e.stylize(""+t,"boolean"):// For some reason typeof null is "object", so special case here.
$c(t)?e.stylize("null","null"):void 0}(e,t);if(o)return o;// Look up the keys of the object.
var i=Object.keys(t),a=function(e){var t={};return e.forEach((function(e,r){t[e]=1})),t}(i);// IE doesn't make error fields non-enumerable
// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
if(e.showHidden&&(i=Object.getOwnPropertyNames(t)),tl(t)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return zc(t);// Some type of object without properties can be shortcutted.
if(0===i.length){if(rl(t)){var s=t.name?": "+t.name:"";return e.stylize("[Function"+s+"]","special")}if(Qc(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(el(t))return e.stylize(Date.prototype.toString.call(t),"date");if(tl(t))return zc(t)}var u,c="",l=0,f=["{","}"];// Make Array say that they are Array
return Yc(t)&&(l=1,f=["[","]"]),// Make functions say that they are functions
rl(t)&&(c=" [Function"+(t.name?": "+t.name:"")+"]"),// Make RegExps say that they are RegExps
Qc(t)&&(c=" "+RegExp.prototype.toString.call(t)),// Make dates with properties first say the date
el(t)&&(c=" "+Date.prototype.toUTCString.call(t)),// Make error with message first say the error
tl(t)&&(c=" "+zc(t)),0!==i.length||l&&0!=t.length?r<0?Qc(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),u=l?function(e,t,r,n,o){for(var i=[],a=0,s=t.length;a<s;++a)ul(t,String(a))?i.push(Gc(e,t,r,n,String(a),1)):i.push("");return o.forEach((function(o){o.match(/^\d+$/)||i.push(Gc(e,t,r,n,o,1))})),i}(e,t,r,a,i):i.map((function(n){return Gc(e,t,r,a,n,l)})),e.seen.pop(),function(e,t,r){return e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1]:r[0]+t+" "+e.join(", ")+" "+r[1]}// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
(u,c,f)):f[0]+c+f[1]}function zc(e){return"["+Error.prototype.toString.call(e)+"]"}function Gc(e,t,r,n,o,i){var a,s,u;if((u=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?s=u.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):u.set&&(s=e.stylize("[Setter]","special")),ul(n,o)||(a="["+o+"]"),s||(e.seen.indexOf(u.value)<0?(s=$c(r)?Hc(e,u.value,null):Hc(e,u.value,r-1)).indexOf("\n")>-1&&(s=i?s.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+s.split("\n").map((function(e){return"   "+e})).join("\n")):s=e.stylize("[Circular]","special")),Zc(a)){if(i&&o.match(/^\d+$/))return s;(a=JSON.stringify(""+o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=e.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=e.stylize(a,"string"))}return a+": "+s}function Yc(e){return Array.isArray(e)}function Wc(e){return"boolean"==typeof e}function $c(e){return null===e}function Jc(e){return"number"==typeof e}function Kc(e){return"string"==typeof e}function Zc(e){return void 0===e}function Qc(e){return Xc(e)&&"[object RegExp]"===nl(e)}function Xc(e){return"object"===qo(e)&&null!==e}function el(e){return Xc(e)&&"[object Date]"===nl(e)}function tl(e){return Xc(e)&&("[object Error]"===nl(e)||e instanceof Error)}function rl(e){return"function"==typeof e}function nl(e){return Object.prototype.toString.call(e)}function ol(e){return e<10?"0"+e.toString(10):e.toString(10)}Uc.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},// Don't use 'blue' not visible on cmd.exe
Uc.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",// "name": intentionally not styling
regexp:"red"};var il=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];// 26 Feb 16:19:34
function al(){var e=new Date,t=[ol(e.getHours()),ol(e.getMinutes()),ol(e.getSeconds())].join(":");return[e.getDate(),il[e.getMonth()],t].join(" ")}// log is just a thin wrapper to console.log that prepends a timestamp
function sl(e,t){// Don't do anything if add isn't an object
if(!t||!Xc(t))return e;for(var r=Object.keys(t),n=r.length;n--;)e[r[n]]=t[r[n]];return e}function ul(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var cl={inherits:Lc,_extend:sl,log:function(){console.log("%s - %s",al(),Ic.apply(null,arguments))},isBuffer:function(e){return Oc(e)},isPrimitive:function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"===qo(e)||// ES6 symbol
void 0===e},isFunction:rl,isError:tl,isDate:el,isObject:Xc,isRegExp:Qc,isUndefined:Zc,isSymbol:function(e){return"symbol"===qo(e)},isString:Kc,isNumber:Jc,isNullOrUndefined:function(e){return null==e},isNull:$c,isBoolean:Wc,isArray:Yc,inspect:Uc,deprecate:Bc,format:Ic,debuglog:Fc};function ll(){this.head=null,this.tail=null,this.length=0}ll.prototype.push=function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length},ll.prototype.unshift=function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length},ll.prototype.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},ll.prototype.clear=function(){this.head=this.tail=null,this.length=0},ll.prototype.join=function(e){if(0===this.length)return"";for(var t=this.head,r=""+t.data;t=t.next;)r+=e+t.data;return r},ll.prototype.concat=function(e){if(0===this.length)return Ku.alloc(0);if(1===this.length)return this.head.data;for(var t=Ku.allocUnsafe(e>>>0),r=this.head,n=0;r;)r.data.copy(t,n),n+=r.data.length,r=r.next;return t};var fl=Ku.isEncoding||function(e){switch(e&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return 1;default:return 0}};// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
function pl(e){switch(this.encoding=(e||"utf8").toLowerCase().replace(/[-_]/,""),function(e){if(e&&!fl(e))throw new Error("Unknown encoding: "+e)}(e),this.encoding){case"utf8":// CESU-8 represents each of Surrogate Pair by 3-bytes
this.surrogateSize=3;break;case"ucs2":case"utf16le":// UTF-16 represents each of Surrogate Pair by 2-bytes
this.surrogateSize=2,this.detectIncompleteChar=dl;break;case"base64":// Base-64 stores 3 bytes in 4 chars, and pads the remainder.
this.surrogateSize=3,this.detectIncompleteChar=gl;break;default:return void(this.write=hl)}// Enough space to store all bytes of a single character. UTF-8 needs 4
// bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
this.charBuffer=new Ku(6),// Number of bytes received for the current incomplete multi-byte character.
this.charReceived=0,// Number of bytes expected for the current incomplete multi-byte character.
this.charLength=0}// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.

// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
function hl(e){return e.toString(this.encoding)}function dl(e){this.charReceived=e.length%2,this.charLength=this.charReceived?2:0}function gl(e){this.charReceived=e.length%3,this.charLength=this.charReceived?3:0}pl.prototype.write=function(e){// if our last write ended with an incomplete multibyte character
for(var t="";this.charLength;){// determine how many remaining bytes this buffer has to offer for this char
var r=e.length>=this.charLength-this.charReceived?this.charLength-this.charReceived:e.length;// add the new bytes to the char buffer
if(e.copy(this.charBuffer,this.charReceived,0,r),this.charReceived+=r,this.charReceived<this.charLength)// still not enough chars in this buffer? wait for more ...
return"";// remove bytes belonging to the current character from the buffer
if(e=e.slice(r,e.length),!((n=(// get the character that was split
t=this.charBuffer.slice(0,this.charLength).toString(this.encoding)).charCodeAt(t.length-1))>=55296&&n<=56319)){// if there are no more bytes in this buffer, just emit our char
if(this.charReceived=this.charLength=0,0===e.length)return t;break}this.charLength+=this.surrogateSize,t=""}// determine and set charLength / charReceived
this.detectIncompleteChar(e);var n,o=e.length;// CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
if(this.charLength&&(// buffer the incomplete character bytes we got
e.copy(this.charBuffer,0,e.length-this.charReceived,o),o-=this.charReceived),o=(t+=e.toString(this.encoding,0,o)).length-1,(n=t.charCodeAt(o))>=55296&&n<=56319){var i=this.surrogateSize;return this.charLength+=i,this.charReceived+=i,this.charBuffer.copy(this.charBuffer,i,0,i),e.copy(this.charBuffer,0,0,i),t.substring(0,o)}// or just emit the charStr
return t},// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
pl.prototype.detectIncompleteChar=function(e){// Figure out if one of the last i bytes of our buffer announces an
// incomplete char.
for(// determine how many bytes we have to check at the end of this buffer
var t=e.length>=3?3:e.length;t>0;t--){var r=e[e.length-t];// See http://en.wikipedia.org/wiki/UTF-8#Description
// 110XXXXX
if(1==t&&r>>5==6){this.charLength=2;break}// 1110XXXX
if(t<=2&&r>>4==14){this.charLength=3;break}// 11110XXX
if(t<=3&&r>>3==30){this.charLength=4;break}}this.charReceived=t},pl.prototype.end=function(e){var t="";if(e&&e.length&&(t=this.write(e)),this.charReceived){var r=this.charReceived,n=this.charBuffer,o=this.encoding;t+=n.slice(0,r).toString(o)}return t},vl.ReadableState=yl;var ml=Fc("stream");function yl(e,t){e=e||{},// object stream flag. Used to make read(n) ignore n and to
// make all the buffer merging and length checks go away
this.objectMode=!!e.objectMode,t instanceof Gl&&(this.objectMode=this.objectMode||!!e.readableObjectMode);// the point at which it stops calling _read() to fill the buffer
// Note: 0 is a valid value, means "don't call _read preemptively ever"
var r=e.highWaterMark,n=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:n,// cast to ints.
this.highWaterMark=~~this.highWaterMark,// A linked list is used to store data chunks instead of an array because the
// linked list can remove elements from the beginning faster than
// array.shift()
this.buffer=new ll,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=0,this.endEmitted=0,this.reading=0,// a flag to be able to tell if the onwrite cb is called immediately,
// or on a later tick.  We set this to true at first, because any
// actions that shouldn't happen until "later" should generally also
// not happen before the first write call.
this.sync=1,// whenever we return null, then we set a flag to say
// that we're awaiting a 'readable' event emission.
this.needReadable=0,this.emittedReadable=0,this.readableListening=0,this.resumeScheduled=0,// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=e.defaultEncoding||"utf8",// when piping, we only care about 'readable' events that happen
// after read()ing all the bytes and not getting any pushback.
this.ranOut=0,// the number of writers that are awaiting a drain event in .pipe()s
this.awaitDrain=0,// if true, a maybeReadMore has been scheduled
this.readingMore=0,this.decoder=null,this.encoding=null,e.encoding&&(this.decoder=new pl(e.encoding),this.encoding=e.encoding)}function vl(e){if(!(this instanceof vl))return new vl(e);this._readableState=new yl(e,this),// legacy
this.readable=1,e&&"function"==typeof e.read&&(this._read=e.read),Jr.call(this)}// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
function bl(e,t,r,n,o){var i=function(e,t){var r=null;return Oc(t)||"string"==typeof t||null==t||e.objectMode||(r=new TypeError("Invalid non-string/buffer chunk")),r}(t,r);if(i)e.emit("error",i);else if(null===r)t.reading=0,function(e,t){if(!t.ended){if(t.decoder){var r=t.decoder.end();r&&r.length&&(t.buffer.push(r),t.length+=t.objectMode?1:r.length)}t.ended=1,// emit 'readable' now to make sure it gets picked up.
El(e)}}// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
(e,t);else if(t.objectMode||r&&r.length>0)if(t.ended&&!o){var a=new Error("stream.push() after EOF");e.emit("error",a)}else if(t.endEmitted&&o){var s=new Error("stream.unshift() after end event");e.emit("error",s)}else{var u;!t.decoder||o||n||(r=t.decoder.write(r),u=!t.objectMode&&0===r.length),o||(t.reading=0),// Don't add to the buffer if we've decoded to an empty string chunk and
// we're not in object mode
u||(// if we want the data now, just emit it.
t.flowing&&0===t.length&&!t.sync?(e.emit("data",r),e.read(0)):(// update the buffer info.
t.length+=t.objectMode?1:r.length,o?t.buffer.unshift(r):t.buffer.push(r),t.needReadable&&El(e))),// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function(e,t){t.readingMore||(t.readingMore=1,gr(Tl,e,t))}(e,t)}else o||(t.reading=0);// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
return function(e){return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}// backwards compatibility.
(t)}// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function wl(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?// Only flow one buffer at a time
t.flowing&&t.length?t.buffer.head.data.length:t.length:(// If we're asking for more than the current hwm, then raise the hwm.
e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=8388608?e=8388608:(// Get the next highest power of 2 to prevent increasing hwm excessively in
// tiny amounts
e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:// Don't have enough
t.ended?t.length:(t.needReadable=1,0))}// you can override either this method, or the async _read(n) below.
function El(e){var t=e._readableState;t.needReadable=0,t.emittedReadable||(ml("emitReadable",t.flowing),t.emittedReadable=1,t.sync?gr(Al,e):Al(e))}function Al(e){ml("emit readable"),e.emit("readable"),_l(e)}function Tl(e,t){for(var r=t.length;!t.reading&&!t.flowing&&!t.ended&&t.length<t.highWaterMark&&(ml("maybeReadMore read 0"),e.read(0),r!==t.length);)r=t.length;t.readingMore=0}// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
function xl(e){ml("readable nexttick read 0"),e.read(0)}// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
function Sl(e,t){t.reading||(ml("resume read 0"),e.read(0)),t.resumeScheduled=0,t.awaitDrain=0,e.emit("resume"),_l(e),t.flowing&&!t.reading&&e.read(0)}function _l(e){var t=e._readableState;for(ml("flow",t.flowing);t.flowing&&null!==e.read(););}// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function Nl(e,t){// nothing buffered
return 0===t.length?null:(t.objectMode?r=t.buffer.shift():!e||e>=t.length?(// read it all, truncate the list
r=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.head.data:t.buffer.concat(t.length),t.buffer.clear()):// read part of list
r=// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function(e,t,r){var n;return e<t.head.data.length?(// slice is the same for buffers and strings
n=t.head.data.slice(0,e),t.head.data=t.head.data.slice(e)):// first chunk is a perfect match
n=e===t.head.data.length?t.shift():r?// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function(e,t){var r=t.head,n=1,o=r.data;for(e-=o.length;r=r.next;){var i=r.data,a=e>i.length?i.length:e;if(a===i.length?o+=i:o+=i.slice(0,e),0==(e-=a)){a===i.length?(++n,r.next?t.head=r.next:t.head=t.tail=null):(t.head=r,r.data=i.slice(a));break}++n}return t.length-=n,o}// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
(e,t):function(e,t){var r=Ku.allocUnsafe(e),n=t.head,o=1;for(n.data.copy(r),e-=n.data.length;n=n.next;){var i=n.data,a=e>i.length?i.length:e;if(i.copy(r,r.length-e,0,a),0==(e-=a)){a===i.length?(++o,n.next?t.head=n.next:t.head=t.tail=null):(t.head=n,n.data=i.slice(a));break}++o}return t.length-=o,r}(e,t),n}(e,t.buffer,t.decoder),r);var r}function Dl(e){var t=e._readableState;// If we get here before consuming all the bytes, then that is a
// bug in node.  Should never happen.
if(t.length>0)throw new Error('"endReadable()" called on non-empty stream');t.endEmitted||(t.ended=1,gr(Cl,t,e))}function Cl(e,t){// Check that we didn't get one last unshift.
e.endEmitted||0!==e.length||(e.endEmitted=1,t.readable=0,t.emit("end"))}function kl(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}function Ol(){}function Rl(e,t,r){this.chunk=e,this.encoding=t,this.callback=r,this.next=null}function Ll(e,t){Object.defineProperty(this,"buffer",{get:Bc((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.")}),e=e||{},// object stream flag to indicate whether or not this stream
// contains buffers or objects.
this.objectMode=!!e.objectMode,t instanceof Gl&&(this.objectMode=this.objectMode||!!e.writableObjectMode);// the point at which write() starts returning false
// Note: 0 is a valid value, means that we always return false if
// the entire buffer is not flushed immediately on write()
var r=e.highWaterMark,n=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:n,// cast to ints.
this.highWaterMark=~~this.highWaterMark,this.needDrain=0,// at the start of calling end()
this.ending=0,// when end() has been called, and returned
this.ended=0,// when 'finish' is emitted
this.finished=0;// should we decode strings into buffers before passing to _write?
// this is here so that some node-core streams can optimize string
// handling at a lower level.
var o=0==e.decodeStrings;this.decodeStrings=!o,// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=e.defaultEncoding||"utf8",// not an actual buffer we keep track of, but a measurement
// of how much we're waiting to get pushed to some underlying
// socket or file.
this.length=0,// a flag to see when we're in the middle of a write.
this.writing=0,// when true all writes will be buffered until .uncork() call
this.corked=0,// a flag to be able to tell if the onwrite cb is called immediately,
// or on a later tick.  We set this to true at first, because any
// actions that shouldn't happen until "later" should generally also
// not happen before the first write call.
this.sync=1,// a flag to know if we're processing previously buffered items, which
// may call the _write() callback in the same tick, so that we don't
// end up in an overlapped onwrite situation.
this.bufferProcessing=0,// the callback that's passed to _write(chunk,cb)
this.onwrite=function(e){!function(e,t){var r=e._writableState,n=r.sync,o=r.writecb;if(function(e){e.writing=0,e.writecb=null,e.length-=e.writelen,e.writelen=0}(r),t)!function(e,t,r,n,o){--t.pendingcb,r?gr(o,n):o(n),e._writableState.errorEmitted=1,e.emit("error",n)}(e,r,n,t,o);else{// Check if we're actually ready to finish, but don't emit yet
var i=jl(r);i||r.corked||r.bufferProcessing||!r.bufferedRequest||Pl(e,r),n?/*<replacement>*/gr(Bl,e,r,i,o):Bl(e,r,i,o)}}(t,e)},// the callback that the user supplies to write(chunk,encoding,cb)
this.writecb=null,// the amount that is being written when _write is called.
this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,// number of pending user-supplied write callbacks
// this must be 0 before 'finish' can be emitted
this.pendingcb=0,// emit prefinish if the only thing we're waiting for is _write cbs
// This is relevant for synchronous Transform streams
this.prefinished=0,// True if the error was already emitted and should not be thrown again
this.errorEmitted=0,// count buffered requests
this.bufferedRequestCount=0,// allocate the first CorkedRequest, there is always
// one allocated and free to use, and we maintain at most two
this.corkedRequestsFree=new Vl(this)}function ql(e){// Writable ctor is applied to Duplexes, though they're not
// instanceof Writable, they're instanceof Readable.
if(!(this instanceof ql||this instanceof Gl))return new ql(e);this._writableState=new Ll(e,this),// legacy.
this.writable=1,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev)),Jr.call(this)}// Otherwise people can pipe Writable streams, which is just wrong.
function Il(e,t,r,n,o,i,a){t.writelen=n,t.writecb=a,t.writing=1,t.sync=1,r?e._writev(o,t.onwrite):e._write(o,i,t.onwrite),t.sync=0}function Bl(e,t,r,n){r||// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function(e,t){0===t.length&&t.needDrain&&(t.needDrain=0,e.emit("drain"))}// if there's something in the buffer waiting, then process it
(e,t),t.pendingcb--,n(),Ul(e,t)}function Pl(e,t){t.bufferProcessing=1;var r=t.bufferedRequest;if(e._writev&&r&&r.next){// Fast case, write everything using _writev()
var n=t.bufferedRequestCount,o=new Array(n),i=t.corkedRequestsFree;i.entry=r;for(var a=0;r;)o[a]=r,r=r.next,a+=1;Il(e,t,1,t.length,o,"",i.finish),// doWrite is almost always async, defer these to save a bit of time
// as the hot path ends with doWrite
t.pendingcb++,t.lastBufferedRequest=null,i.next?(t.corkedRequestsFree=i.next,i.next=null):t.corkedRequestsFree=new Vl(t)}else{// Slow case, write chunks one-by-one
for(;r;){var s=r.chunk,u=r.encoding,c=r.callback;// if we didn't call the onwrite immediately, then
// it means that we need to wait until it does.
// also, that means that the chunk and cb are currently
// being processed, so move the buffer counter past them.
if(Il(e,t,0,t.objectMode?1:s.length,s,u,c),r=r.next,t.writing)break}null===r&&(t.lastBufferedRequest=null)}t.bufferedRequestCount=0,t.bufferedRequest=r,t.bufferProcessing=0}function jl(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function Fl(e,t){t.prefinished||(t.prefinished=1,e.emit("prefinish"))}function Ul(e,t){var r=jl(t);return r&&(0===t.pendingcb?(Fl(e,t),t.finished=1,e.emit("finish")):Fl(e,t)),r}// It seems a linked list but it is not
// there will be only 2 of these for each stream
function Vl(e){var t=this;this.next=null,this.entry=null,this.finish=function(r){var n=t.entry;for(t.entry=null;n;){var o=n.callback;e.pendingcb--,o(r),n=n.next}e.corkedRequestsFree?e.corkedRequestsFree.next=t:e.corkedRequestsFree=t}}Lc(vl,Jr),vl.prototype.push=function(e,t){var r=this._readableState;return r.objectMode||"string"!=typeof e||(t=t||r.defaultEncoding)!==r.encoding&&(e=Ku.from(e,t),t=""),bl(this,r,e,t,0)},// Unshift should *always* be something directly out of read()
vl.prototype.unshift=function(e){return bl(this,this._readableState,e,"",1)},vl.prototype.isPaused=function(){return 0==this._readableState.flowing},vl.prototype.setEncoding=function(e){return this._readableState.decoder=new pl(e),this._readableState.encoding=e,this},vl.prototype.read=function(e){ml("read",e),e=parseInt(e,10);var t=this._readableState,r=e;// if we're doing read(0) to trigger a readable event, but we
// already have a bunch of data in the buffer, then just trigger
// the 'readable' event and move on.
if(0!==e&&(t.emittedReadable=0),0===e&&t.needReadable&&(t.length>=t.highWaterMark||t.ended))return ml("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?Dl(this):El(this),null;// if we've ended, and we're now clear, then finish it up.
if(0===(e=wl(e,t))&&t.ended)return 0===t.length&&Dl(this),null;// All the actual chunk generation logic needs to be
// *below* the call to _read.  The reason is that in certain
// synthetic stream cases, such as passthrough streams, _read
// may be a completely synchronous operation which may change
// the state of the read buffer, providing enough data when
// before there was *not* enough.

// So, the steps are:
// 1. Figure out what the state of things will be after we do
// a read from the buffer.

// 2. If that resulting state will trigger a _read, then call _read.
// Note that this may be asynchronous, or synchronous.  Yes, it is
// deeply ugly to write APIs this way, but that still doesn't mean
// that the Readable class should behave improperly, as streams are
// designed to be sync/async agnostic.
// Take note if the _read call is sync or async (ie, if the read call
// has returned yet), so that we know whether or not it's safe to emit
// 'readable' etc.

// 3. Actually pull the requested chunks out of the buffer and return.
// if we need a readable event, then we need to do some reading.
var n,o=t.needReadable;return ml("need readable",o),// if we currently have less than the highWaterMark, then also read some
(0===t.length||t.length-e<t.highWaterMark)&&ml("length less than watermark",o=1),// however, if we've ended, then there's no point, and if we're already
// reading, then it's unnecessary.
t.ended||t.reading?ml("reading or ended",o=0):o&&(ml("do read"),t.reading=1,t.sync=1,// if the length is currently zero, then we *need* a readable event.
0===t.length&&(t.needReadable=1),// call internal read method
this._read(t.highWaterMark),t.sync=0,// If _read pushed data synchronously, then `reading` will be false,
// and we need to re-evaluate how much data we can return to the user.
t.reading||(e=wl(r,t))),null===(n=e>0?Nl(e,t):null)?(t.needReadable=1,e=0):t.length-=e,0===t.length&&(// If we have nothing in the buffer, then we want to know
// as soon as we *do* get something into the buffer.
t.ended||(t.needReadable=1),// If we tried to read() past the EOF, then emit end on the next tick.
r!==e&&t.ended&&Dl(this)),null!==n&&this.emit("data",n),n},vl.prototype._read=function(e){this.emit("error",new Error("not implemented"))},vl.prototype.pipe=function(e,t){var r=this,n=this._readableState;switch(n.pipesCount){case 0:n.pipes=e;break;case 1:n.pipes=[n.pipes,e];break;default:n.pipes.push(e)}n.pipesCount+=1,ml("pipe count=%d opts=%j",n.pipesCount,t);var o=t&&0==t.end?c:a;function i(e){ml("onunpipe"),e===r&&c()}function a(){ml("onend"),e.end()}// when the dest drains, it reduces the awaitDrain counter
// on the source.  This would be more elegant with a .once()
// handler in flow(), but adding and removing repeatedly is
// too slow.
n.endEmitted?gr(o):r.once("end",o),e.on("unpipe",i);var s=function(e){return function(){var t=e._readableState;ml("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&e.listeners("data").length&&(t.flowing=1,_l(e))}}(r);e.on("drain",s);var u=0;function c(){ml("cleanup"),// cleanup event handlers once the pipe is broken
e.removeListener("close",h),e.removeListener("finish",d),e.removeListener("drain",s),e.removeListener("error",p),e.removeListener("unpipe",i),r.removeListener("end",a),r.removeListener("end",c),r.removeListener("data",f),u=1,// if the reader is waiting for a drain event from this
// specific writer, then it would cause it to never start
// flowing again.
// So, if this is awaiting a drain, then we just call it now.
// If we don't know, then assume that we are waiting for one.
!n.awaitDrain||e._writableState&&!e._writableState.needDrain||s()}// If the user pushes more data while we're writing to dest then we'll end up
// in ondata again. However, we only want to increase awaitDrain once because
// dest will only emit one 'drain' event for the multiple writes.
// => Introduce a guard on increasing awaitDrain.
var l=0;function f(t){ml("ondata"),l=0,0!=e.write(t)||l||(// If the user unpiped during `dest.write()`, it is possible
// to get stuck in a permanently paused state if that write
// also returned false.
// => Check whether `dest` is still a piping destination.
(1===n.pipesCount&&n.pipes===e||n.pipesCount>1&&-1!==kl(n.pipes,e))&&!u&&(ml("false write response, pause",r._readableState.awaitDrain),r._readableState.awaitDrain++,l=1),r.pause())}// if the dest has an error, then stop piping into it.
// however, don't suppress the throwing behavior for this.
function p(t){ml("onerror",t),g(),e.removeListener("error",p),0===function(e,t){return e.listeners(t).length}(e,"error")&&e.emit("error",t)}// Make sure our error handler is attached before userland ones.
// Both close and finish should trigger unpipe, but only once.
function h(){e.removeListener("finish",d),g()}function d(){ml("onfinish"),e.removeListener("close",h),g()}function g(){ml("unpipe"),r.unpipe(e)}// tell the dest that it's being piped to
return r.on("data",f),function(e,t,r){// Sadly this is not cacheable as some libraries bundle their own
// event emitter implementation with them.
if("function"==typeof e.prependListener)return e.prependListener(t,r);// This is a hack to make sure that our error handler is attached before any
// userland ones.  NEVER DO THIS. This is here only because this code needs
// to continue to work with older versions of Node.js that do not include
// the prependListener() method. The goal is to eventually remove this hack.
e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(r):e._events[t]=[r,e._events[t]]:e.on(t,r)}(e,"error",p),e.once("close",h),e.once("finish",d),e.emit("pipe",r),// start the flow if it hasn't been started already.
n.flowing||(ml("pipe resume"),r.resume()),e},vl.prototype.unpipe=function(e){var t=this._readableState;// if we're not piping anywhere, then do nothing.
if(0===t.pipesCount)return this;// just one destination.  most common case.
if(1===t.pipesCount)// passed in one, but it's not the right one.
return e&&e!==t.pipes||(e||(e=t.pipes),// got a match.
t.pipes=null,t.pipesCount=0,t.flowing=0,e&&e.emit("unpipe",this)),this;// slow case. multiple pipe destinations.
if(!e){// remove all.
var r=t.pipes,n=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=0;for(var o=0;o<n;o++)r[o].emit("unpipe",this);return this}// try to find the right one.
var i=kl(t.pipes,e);return-1===i||(t.pipes.splice(i,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this)),this},// set up data events if they are asked for
// Ensure readable listeners eventually get something
vl.prototype.on=function(e,t){var r=Jr.prototype.on.call(this,e,t);if("data"===e)// Start flowing on next tick if stream isn't explicitly paused
0!=this._readableState.flowing&&this.resume();else if("readable"===e){var n=this._readableState;n.endEmitted||n.readableListening||(n.readableListening=n.needReadable=1,n.emittedReadable=0,n.reading?n.length&&El(this):gr(xl,this))}return r},vl.prototype.addListener=vl.prototype.on,vl.prototype.resume=function(){var e=this._readableState;return e.flowing||(ml("resume"),e.flowing=1,function(e,t){t.resumeScheduled||(t.resumeScheduled=1,gr(Sl,e,t))}(this,e)),this},vl.prototype.pause=function(){return ml("call pause flowing=%j",this._readableState.flowing),0!=this._readableState.flowing&&(ml("pause"),this._readableState.flowing=0,this.emit("pause")),this},vl.prototype.wrap=function(e){var t=this._readableState,r=0,n=this;// proxy all the other methods.
// important when wrapping filters and duplexes.
for(var o in e.on("end",(function(){if(ml("wrapped end"),t.decoder&&!t.ended){var e=t.decoder.end();e&&e.length&&n.push(e)}n.push(null)})),e.on("data",(function(o){// don't skip over falsy values in objectMode
ml("wrapped data"),t.decoder&&(o=t.decoder.write(o)),t.objectMode&&null==o||(t.objectMode||o&&o.length)&&(n.push(o)||(r=1,e.pause()))})),e)void 0===this[o]&&"function"==typeof e[o]&&(this[o]=function(t){return function(){return e[t].apply(e,arguments)}}(o));// proxy certain important events.
return function(e,t){for(var r=0,n=e.length;r<n;r++)t(e[r],r)}(["error","close","destroy","pause","resume"],(function(t){e.on(t,n.emit.bind(n,t))})),// when we try to consume some more bytes, simply unpause the
// underlying stream.
n._read=function(t){ml("wrapped _read",t),r&&(r=0,e.resume())},n},// exposed for testing purposes only.
vl._fromList=Nl,ql.WritableState=Ll,Lc(ql,Jr),Ll.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},ql.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},ql.prototype.write=function(e,t,r){var n=this._writableState,o=0;return"function"==typeof t&&(r=t,t=null),Ku.isBuffer(e)?t="buffer":t||(t=n.defaultEncoding),"function"!=typeof r&&(r=Ol),n.ended?function(e,t){var r=new Error("write after end");// TODO: defer error events consistently everywhere, not just the cb
e.emit("error",r),gr(t,r)}// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
(this,r):function(e,t,r,n){var o=1,i=0;// Always throw error if a null is written
// if we are not in object mode then throw
// if it is not a buffer, string, or undefined.
return null===r?i=new TypeError("May not write null values to stream"):Ku.isBuffer(r)||"string"==typeof r||void 0===r||t.objectMode||(i=new TypeError("Invalid non-string/buffer chunk")),i&&(e.emit("error",i),gr(n,i),o=0),o}(this,n,e,r)&&(n.pendingcb++,o=// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function(e,t,r,n,o){r=function(e,t,r){return e.objectMode||0==e.decodeStrings||"string"!=typeof t||(t=Ku.from(t,r)),t}(t,r,n),Ku.isBuffer(r)&&(n="buffer");var i=t.objectMode?1:r.length;t.length+=i;var a=t.length<t.highWaterMark;// we must ensure that previous needDrain will not be reset to false.
if(a||(t.needDrain=1),t.writing||t.corked){var s=t.lastBufferedRequest;t.lastBufferedRequest=new Rl(r,n,o),s?s.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else Il(e,t,0,i,r,n,o);return a}(this,n,e,t,r)),o},ql.prototype.cork=function(){this._writableState.corked++},ql.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.finished||e.bufferProcessing||!e.bufferedRequest||Pl(this,e))},ql.prototype.setDefaultEncoding=function(e){if(// node::ParseEncoding() requires lower case.
"string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+e);return this._writableState.defaultEncoding=e,this},ql.prototype._write=function(e,t,r){r(new Error("not implemented"))},ql.prototype._writev=null,ql.prototype.end=function(e,t,r){var n=this._writableState;"function"==typeof e?(r=e,e=null,t=null):"function"==typeof t&&(r=t,t=null),null!=e&&this.write(e,t),// .end() fully uncorks
n.corked&&(n.corked=1,this.uncork()),// ignore unnecessary end() calls.
n.ending||n.finished||function(e,t,r){t.ending=1,Ul(e,t),r&&(t.finished?gr(r):e.once("finish",r)),t.ended=1,e.writable=0}(this,n,r)},Lc(Gl,vl);for(var Ml=Object.keys(ql.prototype),Hl=0;Hl<Ml.length;Hl++){var zl=Ml[Hl];Gl.prototype[zl]||(Gl.prototype[zl]=ql.prototype[zl])}function Gl(e){if(!(this instanceof Gl))return new Gl(e);vl.call(this,e),ql.call(this,e),e&&0==e.readable&&(this.readable=0),e&&0==e.writable&&(this.writable=0),this.allowHalfOpen=1,e&&0==e.allowHalfOpen&&(this.allowHalfOpen=0),this.once("end",Yl)}// the no-half-open enforcer
function Yl(){// if we allow half-open state, or if the writable side ended,
// then we're ok.
this.allowHalfOpen||this._writableState.ended||// no more data can be written.
// But allow more writes to happen in this tick.
gr(Wl,this)}function Wl(e){e.end()}// a transform stream is a readable/writable stream where you do
function $l(e){this.afterTransform=function(t,r){return function(e,t,r){var n=e._transformState;n.transforming=0;var o=n.writecb;if(!o)return e.emit("error",new Error("no writecb in Transform class"));n.writechunk=null,n.writecb=null,null!=r&&e.push(r),o(t);var i=e._readableState;i.reading=0,(i.needReadable||i.length<i.highWaterMark)&&e._read(i.highWaterMark)}(e,t,r)},this.needTransform=0,this.transforming=0,this.writecb=null,this.writechunk=null,this.writeencoding=null}function Jl(e){if(!(this instanceof Jl))return new Jl(e);Gl.call(this,e),this._transformState=new $l(this);// when the writable side finishes, then flush out anything remaining.
var t=this;// start out asking for a readable event once data is transformed.
this._readableState.needReadable=1,// we have implemented the _read method, and done the other things
// that Readable wants before the first _read call, so unset the
// sync guard flag.
this._readableState.sync=0,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.once("prefinish",(function(){"function"==typeof this._flush?this._flush((function(e){Kl(t,e)})):Kl(t)}))}function Kl(e,t){if(t)return e.emit("error",t);// if there's nothing in the write buffer, then that means
// that nothing more will ever be provided
var r=e._writableState,n=e._transformState;if(r.length)throw new Error("Calling transform done when ws.length != 0");if(n.transforming)throw new Error("Calling transform done when still transforming");return e.push(null)}function Zl(e){if(!(this instanceof Zl))return new Zl(e);Jl.call(this,e)}// part of this class) is overridden in the Readable class.
function Ql(){Jr.call(this)}Lc(Jl,Gl),Jl.prototype.push=function(e,t){return this._transformState.needTransform=0,Gl.prototype.push.call(this,e,t)},// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Jl.prototype._transform=function(e,t,r){throw new Error("Not implemented")},Jl.prototype._write=function(e,t,r){var n=this._transformState;if(n.writecb=r,n.writechunk=e,n.writeencoding=t,!n.transforming){var o=this._readableState;(n.needTransform||o.needReadable||o.length<o.highWaterMark)&&this._read(o.highWaterMark)}},// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Jl.prototype._read=function(e){var t=this._transformState;null!==t.writechunk&&t.writecb&&!t.transforming?(t.transforming=1,this._transform(t.writechunk,t.writeencoding,t.afterTransform)):// mark that we need a transform, so that any data that comes in
// will get processed, now that we've asked for it.
t.needTransform=1},Lc(Zl,Jl),Zl.prototype._transform=function(e,t,r){r(null,e)},Lc(Ql,Jr),Ql.Readable=vl,Ql.Writable=ql,Ql.Duplex=Gl,Ql.Transform=Jl,Ql.PassThrough=Zl,// Backwards-compat with node 0.4.x
Ql.Stream=Ql,Ql.prototype.pipe=function(e,t){var r=this;function n(t){e.writable&&0==e.write(t)&&r.pause&&r.pause()}function o(){r.readable&&r.resume&&r.resume()}r.on("data",n),e.on("drain",o),// If the 'end' option is not supplied, dest.end() will be called when
// source gets the 'end' or 'close' events.  Only dest.end() once.
e._isStdio||t&&0==t.end||(r.on("end",a),r.on("close",s));var i=0;function a(){i||(i=1,e.end())}function s(){i||(i=1,"function"==typeof e.destroy&&e.destroy())}// don't leave dangling pipes when there are errors.
function u(e){if(c(),0===Jr.listenerCount(this,"error"))throw e;// Unhandled stream error in pipe.
}// remove all the event listeners that were added.
function c(){r.removeListener("data",n),e.removeListener("drain",o),r.removeListener("end",a),r.removeListener("close",s),r.removeListener("error",u),e.removeListener("error",u),r.removeListener("end",c),r.removeListener("close",c),e.removeListener("close",c)}// Allow for unix-like usage: A.pipe(B).pipe(C)
return r.on("error",u),e.on("error",u),r.on("end",c),r.on("close",c),e.on("close",c),e.emit("pipe",r),e};var Xl=Ql.Writable,ef=tf;function tf(e){if(!(this instanceof tf))return new tf(e);e=e||{},Xl.call(this,e),this.label=void 0!==e.label?e.label:"stdout"}(0,cl.inherits)(tf,Xl),tf.prototype._write=function(e,t,r){var n=e.toString?e.toString():e;0==this.label?console.log(n):console.log(this.label+":",n),gr(r)};
/**
	 * Highlight the contents of tag `name`.
	 *
	 * @private
	 * @param {string} name
	 */
var rf,nf,of,af=function(e){for(var t=document.getElementById("mocha").getElementsByTagName(e),r=0,n=t.length;r<n;++r)t[r].innerHTML=t[r].innerHTML.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\/\/(.*)/gm,'<span class="comment">//$1</span>').replace(/('.*?')/gm,'<span class="string">$1</span>').replace(/(\d+\.\d+)/gm,'<span class="number">$1</span>').replace(/(\d+)/gm,'<span class="number">$1</span>').replace(/\bnew[ \t]+(\w+)/gm,'<span class="keyword">new</span> <span class="init">$1</span>').replace(/\b(function|new|throw|return|var|if|else)\b/gm,'<span class="keyword">$1</span>')},sf=a.Promise,uf=function(e,t,r,n){try{return n?t(C(r)[0],r[1]):t(r);// 7.4.6 IteratorClose(iterator, completion)
}catch(t){var o=e.return;throw void 0!==o&&C(o.call(e)),t}},cf=r((function(e){var t=function(e,t){this.stopped=e,this.result=t};(e.exports=function(e,r,n,o,i){var a,s,u,c,l,f,p,h=Be(r,n,o?2:1);if(i)a=e;else{if("function"!=typeof(s=As(e)))throw TypeError("Target is not iterable");// optimisation for array iterators
if(Ss(s)){for(u=0,c=pe(e.length);c>u;u++)if((l=o?h(C(p=e[u])[0],p[1]):h(e[u]))&&l instanceof t)return l;return new t(0)}a=s.call(e)}for(f=a.next;!(p=f.call(a)).done;)if("object"==typeof(l=uf(a,h,p.value,o))&&l&&l instanceof t)return l;return new t(0)}).stop=function(e){return new t(1,e)}})),lf=/(iphone|ipod|ipad).*applewebkit/i.test(Ke),ff=a.location,pf=a.setImmediate,hf=a.clearImmediate,df=a.process,gf=a.MessageChannel,mf=a.Dispatch,yf=0,vf={},bf=function(e){// eslint-disable-next-line no-prototype-builtins
if(vf.hasOwnProperty(e)){var t=vf[e];delete vf[e],t()}},wf=function(e){return function(){bf(e)}},Ef=function(e){bf(e.data)},Af=function(e){// old engines have not location.origin
a.postMessage(e+"",ff.protocol+"//"+ff.host)};// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
pf&&hf||(pf=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return vf[++yf]=function(){// eslint-disable-next-line no-new-func
("function"==typeof e?e:Function(e)).apply(void 0,t)},rf(yf),yf},hf=function(e){delete vf[e]},// Node.js 0.8-
"process"==d(df)?rf=function(e){df.nextTick(wf(e))}:mf&&mf.now?rf=function(e){mf.now(wf(e))}:gf&&!lf?(of=(nf=new gf).port2,nf.port1.onmessage=Ef,rf=Be(of.postMessage,of,1)):!a.addEventListener||"function"!=typeof postMessage||a.importScripts||s(Af)||"file:"===ff.protocol?rf="onreadystatechange"in S("script")?function(e){An.appendChild(S("script")).onreadystatechange=function(){An.removeChild(this),bf(e)}}:function(e){setTimeout(wf(e),0)}:(rf=Af,a.addEventListener("message",Ef,0)));var Tf,xf,Sf,_f,Nf,Df,Cf,kf,Of={set:pf,clear:hf},Rf=D.f,Lf=Of.set,qf=a.MutationObserver||a.WebKitMutationObserver,If=a.process,Bf=a.Promise,Pf="process"==d(If),jf=Rf(a,"queueMicrotask"),Ff=jf&&jf.value;// modern engines have queueMicrotask method
Ff||(Tf=function(){var e,t;for(Pf&&(e=If.domain)&&e.exit();xf;){t=xf.fn,xf=xf.next;try{t()}catch(e){throw xf?_f():Sf=void 0,e}}Sf=void 0,e&&e.enter()},// Node.js
Pf?_f=function(){If.nextTick(Tf)}:qf&&!lf?(Nf=1,Df=document.createTextNode(""),new qf(Tf).observe(Df,{characterData:1}),_f=function(){Df.data=Nf=!Nf}):Bf&&Bf.resolve?(// Promise.resolve without an argument throws an error in LG WebOS 2
Cf=Bf.resolve(void 0),kf=Cf.then,_f=function(){kf.call(Cf,Tf)}):_f=function(){// strange IE + webpack dev server bug - use .call(global)
Lf.call(a,Tf)});var Uf,Vf,Mf,Hf,zf=Ff||function(e){var t={fn:e,next:void 0};Sf&&(Sf.next=t),xf||(xf=t,_f()),Sf=t},Gf=function(e){var t,r;this.promise=new e((function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n})),this.resolve=Ie(t),this.reject=Ie(r)},Yf={f:function(e){return new Gf(e)}},Wf=function(e,t){if(C(e),b(t)&&t.constructor===e)return t;var r=Yf.f(e);return(0,r.resolve)(t),r.promise},$f=function(e){try{return{error:0,value:e()}}catch(e){return{error:1,value:e}}},Jf=Of.set,Kf=ze("species"),Zf="Promise",Qf=ne.get,Xf=ne.set,ep=ne.getterFor(Zf),tp=sf,rp=a.TypeError,np=a.document,op=a.process,ip=se("fetch"),ap=Yf.f,sp=ap,up="process"==d(op),cp=!!(np&&np.createEvent&&a.dispatchEvent),lp=Re(Zf,(function(){if(F(tp)===String(tp)){// V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
// https://bugs.chromium.org/p/chromium/issues/detail?id=830565
// We can't detect it synchronously, so just check versions
if(66===et)return 1;// Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
if(!up&&"function"!=typeof PromiseRejectionEvent)return 1}// We can't use @@species feature detection in V8 since it causes
// deoptimization and performance degradation
// https://github.com/zloirock/core-js/issues/679
if(et>=51&&/native code/.test(tp))return 0;// Detect correctness of subclassing with @@species support
var e=tp.resolve(1),t=function(e){e((function(){/* empty */}),(function(){/* empty */}))};return(e.constructor={})[Kf]=t,!(e.then((function(){/* empty */}))instanceof t)})),fp=lp||!Xa((function(e){tp.all(e).catch((function(){/* empty */}))})),pp=function(e){var t;return b(e)&&"function"==typeof(t=e.then)?t:0},hp=function(e,t,r){if(!t.notified){t.notified=1;var n=t.reactions;zf((function(){// variable length - can't use forEach
for(var o=t.value,i=1==t.state,a=0;n.length>a;){var s,u,c,l=n[a++],f=i?l.ok:l.fail,p=l.resolve,h=l.reject,d=l.domain;try{f?(i||(2===t.rejection&&yp(e,t),t.rejection=1),1==f?s=o:(d&&d.enter(),s=f(o),// can throw
d&&(d.exit(),c=1)),s===l.promise?h(rp("Promise-chain cycle")):(u=pp(s))?u.call(s,p,h):p(s)):h(o)}catch(e){d&&!c&&d.exit(),h(e)}}t.reactions=[],t.notified=0,r&&!t.rejection&&gp(e,t)}))}},dp=function(e,t,r){var n,o;cp?((n=np.createEvent("Event")).promise=t,n.reason=r,n.initEvent(e,0,1),a.dispatchEvent(n)):n={promise:t,reason:r},(o=a["on"+e])?o(n):"unhandledrejection"===e&&function(e,t){var r=a.console;r&&r.error&&(1===arguments.length?r.error(e):r.error(e,t))}("Unhandled promise rejection",r)},gp=function(e,t){Jf.call(a,(function(){var r,n=t.value;if(mp(t)&&(r=$f((function(){up?op.emit("unhandledRejection",n,e):dp("unhandledrejection",e,n)})),// Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
t.rejection=up||mp(t)?2:1,r.error))throw r.value}))},mp=function(e){return 1!==e.rejection&&!e.parent},yp=function(e,t){Jf.call(a,(function(){up?op.emit("rejectionHandled",e):dp("rejectionhandled",e,t.value)}))},vp=function(e,t,r,n){return function(o){e(t,r,o,n)}},bp=function(e,t,r,n){t.done||(t.done=1,n&&(t=n),t.value=r,t.state=2,hp(e,t,1))},wp=function(e,t,r,n){if(!t.done){t.done=1,n&&(t=n);try{if(e===r)throw rp("Promise can't be resolved itself");var o=pp(r);o?zf((function(){var n={done:0};try{o.call(r,vp(wp,e,n,t),vp(bp,e,n,t))}catch(r){bp(e,n,r,t)}})):(t.value=r,t.state=1,hp(e,t,0))}catch(r){bp(e,{done:0},r,t)}}};// constructor polyfill
lp&&(// 25.4.3.1 Promise(executor)
tp=function(e){aa(this,tp,Zf),Ie(e),Uf.call(this);var t=Qf(this);try{e(vp(wp,this,t),vp(bp,this,t))}catch(e){bp(this,t,e)}},(// eslint-disable-next-line no-unused-vars
Uf=function(e){Xf(this,{type:Zf,done:0,notified:0,parent:0,reactions:[],rejection:0,state:0,value:void 0})}).prototype=ia(tp.prototype,{// `Promise.prototype.then` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.then
then:function(e,t){var r=ep(this),n=ap(ko(this,tp));return n.ok="function"==typeof e?e:1,n.fail="function"==typeof t&&t,n.domain=up?op.domain:void 0,r.parent=1,r.reactions.push(n),0!=r.state&&hp(this,r,0),n.promise},// `Promise.prototype.catch` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.catch
catch:function(e){return this.then(void 0,e)}}),Vf=function(){var e=new Uf,t=Qf(e);this.promise=e,this.resolve=vp(wp,e,t),this.reject=vp(bp,e,t)},Yf.f=ap=function(e){return e===tp||e===Mf?new Vf(e):sp(e)},"function"==typeof sf&&(Hf=sf.prototype.then,// wrap native Promise#then for native async functions
oe(sf.prototype,"then",(function(e,t){var r=this;return new tp((function(e,t){Hf.call(r,e,t)})).then(e,t);// https://github.com/zloirock/core-js/issues/640
}),{unsafe:1}),// wrap fetch result
"function"==typeof ip&&qe({global:1,enumerable:1,forced:1},{// eslint-disable-next-line no-unused-vars
fetch:function(e/* , init */){return Wf(tp,ip.apply(a,arguments))}}))),qe({global:1,wrap:1,forced:lp},{Promise:tp}),Uo(tp,Zf,0),no(Zf),Mf=se(Zf),// statics
qe({target:Zf,stat:1,forced:lp},{// `Promise.reject` method
// https://tc39.github.io/ecma262/#sec-promise.reject
reject:function(e){var t=ap(this);return t.reject.call(void 0,e),t.promise}}),qe({target:Zf,stat:1,forced:lp},{// `Promise.resolve` method
// https://tc39.github.io/ecma262/#sec-promise.resolve
resolve:function(e){return Wf(this,e)}}),qe({target:Zf,stat:1,forced:fp},{// `Promise.all` method
// https://tc39.github.io/ecma262/#sec-promise.all
all:function(e){var t=this,r=ap(t),n=r.resolve,o=r.reject,i=$f((function(){var r=Ie(t.resolve),i=[],a=0,s=1;cf(e,(function(e){var u=a++,c=0;i.push(void 0),s++,r.call(t,e).then((function(e){c||(c=1,i[u]=e,--s||n(i))}),o)})),--s||n(i)}));return i.error&&o(i.value),r.promise},// `Promise.race` method
// https://tc39.github.io/ecma262/#sec-promise.race
race:function(e){var t=this,r=ap(t),n=r.reject,o=$f((function(){var o=Ie(t.resolve);cf(e,(function(e){o.call(t,e).then(r.resolve,n)}))}));return o.error&&n(o.value),r.promise}});var Ep=/[|\\{}()[\]^$+*?.]/g,Ap=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Ep,"\\$&")};// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function Tp(e,t){for(// if the path tries to go above the root, `up` ends up > 0
var r=0,n=e.length-1;n>=0;n--){var o=e[n];"."===o?e.splice(n,1):".."===o?(e.splice(n,1),r++):r&&(e.splice(n,1),r--)}// if the path is allowed to go above the root, restore leading ..s
if(t)for(;r--;r)e.unshift("..");return e}// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var xp=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,Sp=function(e){return xp.exec(e).slice(1)};// path.resolve([from ...], to)
// posix version
function _p(){for(var e="",t=0,r=arguments.length-1;r>=-1&&!t;r--){var n=r>=0?arguments[r]:"/";// Skip empty and invalid entries
if("string"!=typeof n)throw new TypeError("Arguments to path.resolve must be strings");n&&(e=n+"/"+e,t="/"===n.charAt(0))}// At this point the path should be resolved to a full absolute path, but
// handle relative paths to be safe (might happen when process.cwd() fails)
// Normalize the path
return(t?"/":"")+(e=Tp(kp(e.split("/"),(function(e){return!!e})),!t).join("/"))||"."}// posix version
function Np(e){var t=Dp(e),r="/"===Op(e,-1);// Normalize the path
return(e=Tp(kp(e.split("/"),(function(e){return!!e})),!t).join("/"))||t||(e="."),e&&r&&(e+="/"),(t?"/":"")+e}function Dp(e){return"/"===e.charAt(0)}// posix version
var Cp={extname:function(e){return Sp(e)[3]},basename:function(e,t){var r=Sp(e)[2];// TODO: make this comparison case-insensitive on windows?
return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},dirname:function(e){var t=Sp(e),r=t[0],n=t[1];return r||n?(n&&(// It has a dirname, strip trailing slash
n=n.substr(0,n.length-1)),r+n):"."},sep:"/",delimiter:":",relative:// path.relative(from, to)
// posix version
function(e,t){function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;r>=0&&""===e[r];r--);return t>r?[]:e.slice(t,r-t+1)}e=_p(e).substr(1),t=_p(t).substr(1);for(var n=r(e.split("/")),o=r(t.split("/")),i=Math.min(n.length,o.length),a=i,s=0;s<i;s++)if(n[s]!==o[s]){a=s;break}var u=[];for(s=a;s<n.length;s++)u.push("..");return(u=u.concat(o.slice(a))).join("/")},join:function(){var e=Array.prototype.slice.call(arguments,0);return Np(kp(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},isAbsolute:Dp,normalize:Np,resolve:_p};function kp(e,t){if(e.filter)return e.filter(t);for(var r=[],n=0;n<e.length;n++)t(e[n],n,e)&&r.push(e[n]);return r}// String.prototype.substr - negative index don't work in IE8
var Op="b"==="ab".substr(-1)?function(e,t,r){return e.substr(t,r)}:function(e,t,r){return t<0&&(t=e.length+t),e.substr(t,r)};// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
Po("iterator");// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
var Rp=!Xa((function(e){Array.from(e)}));// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
qe({target:"Array",stat:1,forced:Rp},{from:function(e/* , mapfn = undefined, thisArg = undefined */){var t,r,n,o,i,a,s=Pe(e),u="function"==typeof this?this:Array,c=arguments.length,l=c>1?arguments[1]:void 0,f=void 0!==l,p=As(s),h=0;// if the target is not iterable or it's an array with the default iterator - use a simple case
if(f&&(l=Be(l,c>2?arguments[2]:void 0,2)),null==p||u==Array&&Ss(p))for(r=new u(t=pe(s.length));t>h;h++)a=f?l(s[h],h):s[h],wt(r,h,a);else for(i=(o=p.call(s)).next,r=new u;!(n=i.call(o)).done;h++)a=f?uf(o,l,[n.value,h],1):n.value,wt(r,h,a);return r.length=h,r}});var Lp=wo.charAt,qp=ne.set,Ip=ne.getterFor("String Iterator");// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
Hi(String,"String",(function(e){qp(this,{type:"String Iterator",string:String(e),index:0});// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}),(function(){var e,t=Ip(this),r=t.string,n=t.index;return n>=r.length?{value:void 0,done:1}:(e=Lp(r,n),t.index+=e.length,{value:e,done:0})}));var Bp=ze("iterator"),Pp=ze("toStringTag"),jp=Yi.values;for(var Fp in Jt){var Up=a[Fp],Vp=Up&&Up.prototype;if(Vp){// some Chrome versions have non-configurable methods on DOMTokenList
if(Vp[Bp]!==jp)try{R(Vp,Bp,jp)}catch(e){Vp[Bp]=jp}if(Vp[Pp]||R(Vp,Pp,Fp),Jt[Fp])for(var Mp in Yi)// some Chrome versions have non-configurable methods on DOMTokenList
if(Vp[Mp]!==Yi[Mp])try{R(Vp,Mp,Yi[Mp])}catch(e){Vp[Mp]=Yi[Mp]}}}var Hp=r((function(e,t){
/*!
	  
	   diff v4.0.1
	  
	  Software License Agreement (BSD License)
	  
	  Copyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>
	  
	  All rights reserved.
	  
	  Redistribution and use of this software in source and binary forms, with or without modification,
	  are permitted provided that the following conditions are met:
	  
	  * Redistributions of source code must retain the above
	    copyright notice, this list of conditions and the
	    following disclaimer.
	  
	  * Redistributions in binary form must reproduce the above
	    copyright notice, this list of conditions and the
	    following disclaimer in the documentation and/or other
	    materials provided with the distribution.
	  
	  * Neither the name of Kevin Decker nor the names of its
	    contributors may be used to endorse or promote products
	    derived from this software without specific prior
	    written permission.
	  
	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
	  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
	  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
	  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
	  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
	  IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	  @license
	  */
!function(e){function t(){}function r(e,t,r,n,o){for(var i=0,a=t.length,s=0,u=0;i<a;i++){var c=t[i];if(c.removed){// Reverse add and remove so removes are output first to match common convention
// The diffing algorithm is tied to add then remove output and this is the simplest
// route to get the desired output with minimal overhead.
if(c.value=e.join(n.slice(u,u+c.count)),u+=c.count,i&&t[i-1].added){var l=t[i-1];t[i-1]=t[i],t[i]=l}}else{if(!c.added&&o){var f=r.slice(s,s+c.count);f=f.map((function(e,t){var r=n[u+t];return r.length>e.length?r:e})),c.value=e.join(f)}else c.value=e.join(r.slice(s,s+c.count));s+=c.count,// Common case
c.added||(u+=c.count)}}// Special case handle for when one terminal is ignored (i.e. whitespace).
// For this case we merge the terminal into the prior string and drop the change.
// This is only available for string mode.
var p=t[a-1];return a>1&&"string"==typeof p.value&&(p.added||p.removed)&&e.equals("",p.value)&&(t[a-2].value+=p.value,t.pop()),t}function n(e){return{newPos:e.newPos,components:e.components.slice(0)}}t.prototype={diff:function(e,t){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=o.callback;"function"==typeof o&&(i=o,o={}),this.options=o;var a=this;function s(e){return i?(setTimeout((function(){i(void 0,e)}),0),1):e}// Allow subclasses to massage the input prior to running
e=this.castInput(e),t=this.castInput(t),e=this.removeEmpty(this.tokenize(e));var u=(t=this.removeEmpty(this.tokenize(t))).length,c=e.length,l=1,f=u+c,p=[{newPos:-1,components:[]}],h=this.extractCommon(p[0],t,e,0);if(p[0].newPos+1>=u&&h+1>=c)// Identity per the equality and tokenizer
return s([{value:this.join(t),count:t.length}]);// Main worker method. checks all permutations of a given edit length for acceptance.
function d(){for(var o=-1*l;o<=l;o+=2){var i=void 0,f=p[o-1],h=p[o+1],d=(h?h.newPos:0)-o;f&&(// No one else is going to attempt to use this value, clear it
p[o-1]=void 0);var g=f&&f.newPos+1<u,m=h&&0<=d&&d<c;if(g||m){// If we have hit the end of both strings, then we are done
if(// Select the diagonal that we want to branch from. We select the prior
// path whose position in the new string is the farthest from the origin
// and does not pass the bounds of the diff graph
!g||m&&f.newPos<h.newPos?(i=n(h),a.pushComponent(i.components,void 0,1)):(// No need to clone, we've pulled it from the list
(i=f).newPos++,a.pushComponent(i.components,1,void 0)),d=a.extractCommon(i,t,e,o),i.newPos+1>=u&&d+1>=c)return s(r(a,i.components,t,e,a.useLongestToken));// Otherwise track this path as a potential candidate and continue.
p[o]=i}else// If this path is a terminal then prune
p[o]=void 0}l++}// Performs the length of edit iteration. Is a bit fugly as this has to support the
// sync and async mode which is never fun. Loops over execEditLength until a value
// is produced.
if(i)!function e(){setTimeout((function(){// This should not happen, but we want to be safe.
/* istanbul ignore next */if(l>f)return i();d()||e()}),0)}();else for(;l<=f;){var g=d();if(g)return g}},pushComponent:function(e,t,r){var n=e[e.length-1];n&&n.added===t&&n.removed===r?// We need to clone here as the component clone operation is just
// as shallow array clone
e[e.length-1]={count:n.count+1,added:t,removed:r}:e.push({count:1,added:t,removed:r})},extractCommon:function(e,t,r,n){for(var o=t.length,i=r.length,a=e.newPos,s=a-n,u=0;a+1<o&&s+1<i&&this.equals(t[a+1],r[s+1]);)a++,s++,u++;return u&&e.components.push({count:u}),e.newPos=a,s},equals:function(e,t){return this.options.comparator?this.options.comparator(e,t):e===t||this.options.ignoreCase&&e.toLowerCase()===t.toLowerCase()},removeEmpty:function(e){for(var t=[],r=0;r<e.length;r++)e[r]&&t.push(e[r]);return t},castInput:function(e){return e},tokenize:function(e){return e.split("")},join:function(e){return e.join("")}};var o=new t;function i(e,t){if("function"==typeof e)t.callback=e;else if(e)for(var r in e)/* istanbul ignore else */e.hasOwnProperty(r)&&(t[r]=e[r]);return t}
// Ranges and exceptions:
// Latin-1 Supplement, 0080–00FF
//  - U+00D7  × Multiplication sign
//  - U+00F7  ÷ Division sign
// Latin Extended-A, 0100–017F
// Latin Extended-B, 0180–024F
// IPA Extensions, 0250–02AF
// Spacing Modifier Letters, 02B0–02FF
//  - U+02C7  ˇ &#711;  Caron
//  - U+02D8  ˘ &#728;  Breve
//  - U+02D9  ˙ &#729;  Dot Above
//  - U+02DA  ˚ &#730;  Ring Above
//  - U+02DB  ˛ &#731;  Ogonek
//  - U+02DC  ˜ &#732;  Small Tilde
//  - U+02DD  ˝ &#733;  Double Acute Accent
// Latin Extended Additional, 1E00–1EFF
var a=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,s=/\S/,u=new t;u.equals=function(e,t){return this.options.ignoreCase&&(e=e.toLowerCase(),t=t.toLowerCase()),e===t||this.options.ignoreWhitespace&&!s.test(e)&&!s.test(t)},u.tokenize=function(e){// Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.
for(var t=e.split(/(\s+|[()[\]{}'"]|\b)/),r=0;r<t.length-1;r++)// If we have an empty string in the next field and we have only word chars before and after, merge
!t[r+1]&&t[r+2]&&a.test(t[r])&&a.test(t[r+2])&&(t[r]+=t[r+2],t.splice(r+1,2),r--);return t};var c=new t;function l(e,t,r){return c.diff(e,t,r)}c.tokenize=function(e){var t=[],r=e.split(/(\n|\r\n)/);// Ignore the final empty token that occurs if the string ends with a new line
r[r.length-1]||r.pop();// Merge the content and line separators into single tokens
for(var n=0;n<r.length;n++){var o=r[n];n%2&&!this.options.newlineIsToken?t[t.length-1]+=o:(this.options.ignoreWhitespace&&(o=o.trim()),t.push(o))}return t};var f=new t;f.tokenize=function(e){return e.split(/(\S.+?[.!?])(?=\s+|$)/)};var p=new t;function h(e){return(h="function"==typeof Symbol&&"symbol"===qo(Symbol.iterator)?function(e){return qo(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":qo(e)})(e)}function d(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}p.tokenize=function(e){return e.split(/([{}:;,]|\s+)/)};var g=Object.prototype.toString,m=new t;// This function handles the presence of circular references by bailing out when encountering an
// object that is already on the "stack" of items being processed. Accepts an optional replacer
function y(e,t,r,n,o){var i,a;for(t=t||[],r=r||[],n&&(e=n(o,e)),i=0;i<t.length;i+=1)if(t[i]===e)return r[i];if("[object Array]"===g.call(e)){for(t.push(e),a=new Array(e.length),r.push(a),i=0;i<e.length;i+=1)a[i]=y(e[i],t,r,n,o);return t.pop(),r.pop(),a}if(e&&e.toJSON&&(e=e.toJSON()),"object"===h(e)&&null!==e){t.push(e),a={},r.push(a);var s,u=[];for(s in e)/* istanbul ignore else */e.hasOwnProperty(s)&&u.push(s);for(u.sort(),i=0;i<u.length;i+=1)a[s=u[i]]=y(e[s],t,r,n,s);t.pop(),r.pop()}else a=e;return a}// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a
// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:
m.useLongestToken=1,m.tokenize=c.tokenize,m.castInput=function(e){var t=this.options,r=t.undefinedReplacement,n=t.stringifyReplacer,o=void 0===n?function(e,t){return void 0===t?r:t}:n;return"string"==typeof e?e:JSON.stringify(y(e,null,null,o),o,"  ")},m.equals=function(e,r){return t.prototype.equals.call(m,e.replace(/,([\r\n])/g,"$1"),r.replace(/,([\r\n])/g,"$1"))};var v=new t;function b(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e.split(/\r\n|[\n\v\f\r\x85]/),n=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],o=[],i=0;function a(){var e={};// Parse diff metadata
for(o.push(e);i<r.length;){var n=r[i];// File header found, end parsing diff metadata
if(/^(\-\-\-|\+\+\+|@@)\s/.test(n))break;// Diff index
var a=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(n);a&&(e.index=a[1]),i++}// Parse file headers if they are defined. Unified diff requires them, but
// there's no technical issues to have an isolated hunk without file header
for(s(e),s(e),// Parse hunks
e.hunks=[];i<r.length;){var c=r[i];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(c))break;if(/^@@/.test(c))e.hunks.push(u());else{if(c&&t.strict)// Ignore unexpected content unless in strict mode
throw new Error("Unknown line "+(i+1)+" "+JSON.stringify(c));i++}}}// Parses the --- and +++ headers, if none are found, no lines
// are consumed.
function s(e){var t=/^(---|\+\+\+)\s+(.*)$/.exec(r[i]);if(t){var n="---"===t[1]?"old":"new",o=t[2].split("\t",2),a=o[0].replace(/\\\\/g,"\\");/^".*"$/.test(a)&&(a=a.substr(1,a.length-2)),e[n+"FileName"]=a,e[n+"Header"]=(o[1]||"").trim(),i++}}// Parses a hunk
// This assumes that we are at the start of a hunk.
function u(){for(var e=i,o=r[i++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),a={oldStart:+o[1],oldLines:+o[2]||1,newStart:+o[3],newLines:+o[4]||1,lines:[],linedelimiters:[]},s=0,u=0;i<r.length&&!(0===r[i].indexOf("--- ")&&i+2<r.length&&0===r[i+1].indexOf("+++ ")&&0===r[i+2].indexOf("@@"));i++){var c=0==r[i].length&&i!=r.length-1?" ":r[i][0];if("+"!==c&&"-"!==c&&" "!==c&&"\\"!==c)break;a.lines.push(r[i]),a.linedelimiters.push(n[i]||"\n"),"+"===c?s++:"-"===c?u++:" "===c&&(s++,u++)}// Handle the empty block count case
// Perform optional sanity checking
if(s||1!==a.newLines||(a.newLines=0),u||1!==a.oldLines||(a.oldLines=0),t.strict){if(s!==a.newLines)throw new Error("Added line count did not match for hunk at line "+(e+1));if(u!==a.oldLines)throw new Error("Removed line count did not match for hunk at line "+(e+1))}return a}for(;i<r.length;)a();return o}// Iterator that traverses in the range of [min, max], stepping
// by distance from a given start position. I.e. for [0, 4], with
// start of 2, this will iterate 2, 3, 1, 4, 0.
function w(e,t,r){var n=1,o=0,i=0,a=1;return function s(){if(n&&!i){// Check if trying to fit beyond text length, and if not, check it fits
// after offset location (or desired location on first iteration)
if(o?a++:n=0,e+a<=r)return a;i=1}if(!o)// Check if trying to fit before text beginning, and if not, check it fits
// before offset location
return i||(n=1),t<=e-a?-a++:(o=1,s());// We tried to fit hunk before text beginning and beyond text length, then
// hunk can't fit on the text. Return undefined
}}function E(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof t&&(t=b(t)),Array.isArray(t)){if(t.length>1)throw new Error("applyPatch only works with a single input.");t=t[0]}// Apply the diff to the input
var n,o,i=e.split(/\r\n|[\n\v\f\r\x85]/),a=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],s=t.hunks,u=r.compareLine||function(e,t,r,n){return t===n},c=0,l=r.fuzzFactor||0,f=0,p=0;
/**
	       * Checks if the hunk exactly fits on the provided location
	       */function h(e,t){for(var r=0;r<e.lines.length;r++){var n=e.lines[r],o=n.length>0?n[0]:" ",a=n.length>0?n.substr(1):n;if(" "===o||"-"===o){// Context sanity check
if(!u(t+1,i[t],o,a)&&++c>l)return 0;t++}}return 1}// Search best fit offsets for each hunk based on the previous ones
for(var d=0;d<s.length;d++){for(var g=s[d],m=i.length-g.oldLines,y=0,v=p+g.oldStart-1,E=w(v,f,m);void 0!==y;y=E())if(h(g,v+y)){g.offset=p+=y;break}if(void 0===y)return 0;// Set lower text limit to end of the current hunk, so next ones don't try
// to fit over already patched text
f=g.offset+g.oldStart+g.oldLines}// Apply patch hunks
for(var A=0,T=0;T<s.length;T++){var x=s[T],S=x.oldStart+x.offset+A-1;A+=x.newLines-x.oldLines,S<0&&(// Creating a new file
S=0);for(var _=0;_<x.lines.length;_++){var N=x.lines[_],D=N.length>0?N[0]:" ",C=N.length>0?N.substr(1):N,k=x.linedelimiters[_];if(" "===D)S++;else if("-"===D)i.splice(S,1),a.splice(S,1);else if("+"===D)i.splice(S,0,C),a.splice(S,0,k),S++;else if("\\"===D){var O=x.lines[_-1]?x.lines[_-1][0]:null;"+"===O?n=1:"-"===O&&(o=1)}}}// Handle EOFNL insertion/removal
if(n)for(;!i[i.length-1];)i.pop(),a.pop();else o&&(i.push(""),a.push("\n"));for(var R=0;R<i.length-1;R++)i[R]=i[R]+a[R];return i.join("")}// Wrapper that supports multiple file patches via callbacks.
function A(e,t,r,n,o,i,a){a||(a={}),void 0===a.context&&(a.context=4);var s=l(r,n,a);// Append an empty value to make cleanup easier
function u(e){return e.map((function(e){return" "+e}))}s.push({value:"",lines:[]});for(var c=[],f=0,p=0,h=[],g=1,m=1,y=function(e){var t=s[e],o=t.lines||t.value.replace(/\n$/,"").split("\n");if(t.lines=o,t.added||t.removed){var i;// If we have previous context, start with that
if(!f){var l=s[e-1];f=g,p=m,l&&(h=a.context>0?u(l.lines.slice(-a.context)):[],f-=h.length,p-=h.length)}// Output our changes
(i=h).push.apply(i,d(o.map((function(e){return(t.added?"+":"-")+e})))),// Track the updated file position
t.added?m+=o.length:g+=o.length}else{// Identical context lines. Track line changes
if(f)// Close out any changes that have been output (or join overlapping)
if(o.length<=2*a.context&&e<s.length-2){var y;// Overlapping
(y=h).push.apply(y,d(u(o)))}else{var v,b=Math.min(o.length,a.context);// end the range and output
(v=h).push.apply(v,d(u(o.slice(0,b))));var w={oldStart:f,oldLines:g-f+b,newStart:p,newLines:m-p+b,lines:h};if(e>=s.length-2&&o.length<=a.context){// EOF is inside this hunk
var E=/\n$/.test(r),A=/\n$/.test(n),T=0==o.length&&h.length>w.oldLines;!E&&T&&// special case: old has no eol and no trailing context; no-nl can end up before adds
h.splice(w.oldLines,0,"\\ No newline at end of file"),(E||T)&&A||h.push("\\ No newline at end of file")}c.push(w),f=0,p=0,h=[]}g+=o.length,m+=o.length}},v=0;v<s.length;v++)y(v);return{oldFileName:e,newFileName:t,oldHeader:o,newHeader:i,hunks:c}}function T(e,t,r,n,o,i,a){var s=A(e,t,r,n,o,i,a),u=[];e==t&&u.push("Index: "+e),u.push("==================================================================="),u.push("--- "+s.oldFileName+(void 0===s.oldHeader?"":"\t"+s.oldHeader)),u.push("+++ "+s.newFileName+(void 0===s.newHeader?"":"\t"+s.newHeader));for(var c=0;c<s.hunks.length;c++){var l=s.hunks[c];u.push("@@ -"+l.oldStart+","+l.oldLines+" +"+l.newStart+","+l.newLines+" @@"),u.push.apply(u,l.lines)}return u.join("\n")+"\n"}function x(e,t){if(t.length>e.length)return 0;for(var r=0;r<t.length;r++)if(t[r]!==e[r])return 0;return 1}function S(e){var t=function e(t){var r=0,n=0;return t.forEach((function(t){if("string"!=typeof t){var o=e(t.mine),i=e(t.theirs);void 0!==r&&(o.oldLines===i.oldLines?r+=o.oldLines:r=void 0),void 0!==n&&(o.newLines===i.newLines?n+=o.newLines:n=void 0)}else void 0===n||"+"!==t[0]&&" "!==t[0]||n++,void 0===r||"-"!==t[0]&&" "!==t[0]||r++})),{oldLines:r,newLines:n}}// See: http://code.google.com/p/google-diff-match-patch/wiki/API
(e.lines),r=t.oldLines,n=t.newLines;void 0!==r?e.oldLines=r:delete e.oldLines,void 0!==n?e.newLines=n:delete e.newLines}function _(e,t){if("string"==typeof e){if(/^@@/m.test(e)||/^Index:/m.test(e))return b(e)[0];if(!t)throw new Error("Must provide a base reference or pass in a patch");return A(void 0,void 0,t,e)}return e}function N(e){return e.newFileName&&e.newFileName!==e.oldFileName}function D(e,t,r){return t===r?t:(e.conflict=1,{mine:t,theirs:r})}function C(e,t){return e.oldStart<t.oldStart&&e.oldStart+e.oldLines<t.oldStart}function k(e,t){return{oldStart:e.oldStart,oldLines:e.oldLines,newStart:e.newStart+t,newLines:e.newLines,lines:e.lines}}function O(e,t,r,n,o){// This will generally result in a conflicted hunk, but there are cases where the context
// is the only overlap where we can successfully merge the content here.
var i={offset:t,lines:r,index:0},a={offset:n,lines:o,index:0};// Handle any leading content
// Now in the overlap content. Scan through and select the best changes from each.
for(I(e,i,a),I(e,a,i);i.index<i.lines.length&&a.index<a.lines.length;){var s=i.lines[i.index],u=a.lines[a.index];if("-"!==s[0]&&"+"!==s[0]||"-"!==u[0]&&"+"!==u[0])if("+"===s[0]&&" "===u[0]){var c;// Mine inserted
(c=e.lines).push.apply(c,d(P(i)))}else if("+"===u[0]&&" "===s[0]){var l;// Theirs inserted
(l=e.lines).push.apply(l,d(P(a)))}else"-"===s[0]&&" "===u[0]?// Mine removed or edited
L(e,i,a):"-"===u[0]&&" "===s[0]?// Their removed or edited
L(e,a,i,1):s===u?(// Context identity
e.lines.push(s),i.index++,a.index++):// Context mismatch
q(e,P(i),P(a));else// Both modified ...
R(e,i,a)}// Now push anything that may be remaining
B(e,i),B(e,a),S(e)}function R(e,t,r){var n,o,i=P(t),a=P(r);if(j(i)&&j(a)){var s,u;// Special case for remove changes that are supersets of one another
if(x(i,a)&&F(r,i,i.length-a.length))return void(s=e.lines).push.apply(s,d(i));if(x(a,i)&&F(t,a,a.length-i.length))return void(u=e.lines).push.apply(u,d(a))}else if(o=a,(n=i).length===o.length&&x(n,o)){var c;return void(c=e.lines).push.apply(c,d(i))}q(e,i,a)}function L(e,t,r,n){var o,i=P(t),a=function(e,t){for(var r=[],n=[],o=0,i=0,a=0;o<t.length&&e.index<e.lines.length;){var s=e.lines[e.index],u=t[o];// Once we've hit our add, then we are done
if("+"===u[0])break;// Consume any additions in the other block as a conflict to attempt
// to pull in the remaining context after this
if(i=i||" "!==s[0],n.push(u),o++,"+"===s[0])for(a=1;"+"===s[0];)r.push(s),s=e.lines[++e.index];u.substr(1)===s.substr(1)?(r.push(s),e.index++):a=1}if("+"===(t[o]||"")[0]&&i&&(a=1),a)return r;for(;o<t.length;)n.push(t[o++]);return{merged:n,changes:r}}(r,i);a.merged?(o=e.lines).push.apply(o,d(a.merged)):q(e,n?a:i,n?i:a)}function q(e,t,r){e.conflict=1,e.lines.push({conflict:1,mine:t,theirs:r})}function I(e,t,r){for(;t.offset<r.offset&&t.index<t.lines.length;){var n=t.lines[t.index++];e.lines.push(n),t.offset++}}function B(e,t){for(;t.index<t.lines.length;){var r=t.lines[t.index++];e.lines.push(r)}}function P(e){for(var t=[],r=e.lines[e.index][0];e.index<e.lines.length;){var n=e.lines[e.index];// Group additions that are immediately after subtractions and treat them as one "atomic" modify change.
if("-"===r&&"+"===n[0]&&(r="+"),r!==n[0])break;t.push(n),e.index++}return t}function j(e){return e.reduce((function(e,t){return e&&"-"===t[0]}),1)}function F(e,t,r){for(var n=0;n<r;n++){var o=t[t.length-r+n].substr(1);if(e.lines[e.index+n]!==" "+o)return 0}return e.index+=r,1}function U(e){var t=e;return t=(t=(t=(t=t.replace(/&/g,"&amp;")).replace(/</g,"&lt;")).replace(/>/g,"&gt;")).replace(/"/g,"&quot;")}/* See LICENSE file for terms of use */v.tokenize=function(e){return e.slice()},v.join=v.removeEmpty=function(e){return e},e.Diff=t,e.diffChars=function(e,t,r){return o.diff(e,t,r)},e.diffWords=function(e,t,r){return r=i(r,{ignoreWhitespace:1}),u.diff(e,t,r)},e.diffWordsWithSpace=function(e,t,r){return u.diff(e,t,r)},e.diffLines=l,e.diffTrimmedLines=function(e,t,r){var n=i(r,{ignoreWhitespace:1});return c.diff(e,t,n)},e.diffSentences=function(e,t,r){return f.diff(e,t,r)},e.diffCss=function(e,t,r){return p.diff(e,t,r)},e.diffJson=function(e,t,r){return m.diff(e,t,r)},e.diffArrays=function(e,t,r){return v.diff(e,t,r)},e.structuredPatch=A,e.createTwoFilesPatch=T,e.createPatch=function(e,t,r,n,o,i){return T(e,e,t,r,n,o,i)},e.applyPatch=E,e.applyPatches=function(e,t){"string"==typeof e&&(e=b(e));var r=0;!function n(){var o=e[r++];if(!o)return t.complete();t.loadFile(o,(function(e,r){if(e)return t.complete(e);var i=E(r,o,t);t.patched(o,i,(function(e){if(e)return t.complete(e);n()}))}))}()},e.parsePatch=b,e.merge=function(e,t,r){e=_(e,r),t=_(t,r);var n={};// For index we just let it pass through as it doesn't have any necessary meaning.
// Leaving sanity checks on this to the API consumer that may know more about the
// meaning in their own context.
(e.index||t.index)&&(n.index=e.index||t.index),(e.newFileName||t.newFileName)&&(N(e)?N(t)?(// Both changed... figure it out
n.oldFileName=D(n,e.oldFileName,t.oldFileName),n.newFileName=D(n,e.newFileName,t.newFileName),n.oldHeader=D(n,e.oldHeader,t.oldHeader),n.newHeader=D(n,e.newHeader,t.newHeader)):(// No header or no change in theirs, use ours
n.oldFileName=e.oldFileName,n.newFileName=e.newFileName,n.oldHeader=e.oldHeader,n.newHeader=e.newHeader):(// No header or no change in ours, use theirs (and ours if theirs does not exist)
n.oldFileName=t.oldFileName||e.oldFileName,n.newFileName=t.newFileName||e.newFileName,n.oldHeader=t.oldHeader||e.oldHeader,n.newHeader=t.newHeader||e.newHeader)),n.hunks=[];for(var o=0,i=0,a=0,s=0;o<e.hunks.length||i<t.hunks.length;){var u=e.hunks[o]||{oldStart:1/0},c=t.hunks[i]||{oldStart:1/0};if(C(u,c))// This patch does not overlap with any of the others, yay.
n.hunks.push(k(u,a)),o++,s+=u.newLines-u.oldLines;else if(C(c,u))// This patch does not overlap with any of the others, yay.
n.hunks.push(k(c,s)),i++,a+=c.newLines-c.oldLines;else{// Overlap, merge as best we can
var l={oldStart:Math.min(u.oldStart,c.oldStart),oldLines:0,newStart:Math.min(u.newStart+a,c.oldStart+s),newLines:0,lines:[]};O(l,u.oldStart,u.lines,c.oldStart,c.lines),i++,o++,n.hunks.push(l)}}return n},e.convertChangesToDMP=function(e){for(var t,r,n=[],o=0;o<e.length;o++)r=(t=e[o]).added?1:t.removed?-1:0,n.push([r,t.value]);return n},e.convertChangesToXML=function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];n.added?t.push("<ins>"):n.removed&&t.push("<del>"),t.push(U(n.value)),n.added?t.push("</ins>"):n.removed&&t.push("</del>")}return t.join("")},e.canonicalize=y,Object.defineProperty(e,"__esModule",{value:1})}(t)})),zp=1e3,Gp=6e4,Yp=60*Gp,Wp=24*Yp,$p=function(e,t){t=t||{};var r=qo(e);if("string"===r&&e.length>0)
/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */return function(e){if(!((e=String(e)).length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*r;case"weeks":case"week":case"w":return 6048e5*r;case"days":case"day":case"d":return r*Wp;case"hours":case"hour":case"hrs":case"hr":case"h":return r*Yp;case"minutes":case"minute":case"mins":case"min":case"m":return r*Gp;case"seconds":case"second":case"secs":case"sec":case"s":return r*zp;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}
/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */(e);if("number"===r&&isFinite(e))return t.long?
/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */
function(e){var t=Math.abs(e);return t>=Wp?Jp(e,t,Wp,"day"):t>=Yp?Jp(e,t,Yp,"hour"):t>=Gp?Jp(e,t,Gp,"minute"):t>=zp?Jp(e,t,zp,"second"):e+" ms"}
/**
	 * Pluralization helper.
	 */(e):function(e){var t=Math.abs(e);return t>=Wp?Math.round(e/Wp)+"d":t>=Yp?Math.round(e/Yp)+"h":t>=Gp?Math.round(e/Gp)+"m":t>=zp?Math.round(e/zp)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};
/**
	 * Helpers.
	 */function Jp(e,t,r,n){var o=t>=1.5*r;return Math.round(e/r)+" "+n+(o?"s":"")}var Kp=!s((function(){return Object.isExtensible(Object.preventExtensions({}))})),Zp=r((function(e){var t=O.f,r=G("meta"),n=0,o=Object.isExtensible||function(){return 1},i=function(e){t(e,r,{value:{objectID:"O"+ ++n,// object ID
weakData:{}}})},a=e.exports={REQUIRED:0,fastKey:function(e,t){// return a primitive with prefix
if(!b(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!A(e,r)){// can't set metadata to uncaught frozen object
if(!o(e))return"F";// not necessary to add metadata
if(!t)return"E";// add missing metadata
i(e)}return e[r].objectID},getWeakData:function(e,t){if(!A(e,r)){// can't set metadata to uncaught frozen object
if(!o(e))return 1;// not necessary to add metadata
if(!t)return 0;// add missing metadata
i(e)}return e[r].weakData},onFreeze:function(e){return Kp&&a.REQUIRED&&o(e)&&!A(e,r)&&i(e),e}};$[r]=1})),Qp=Zp.onFreeze,Xp=Object.freeze,eh=s((function(){Xp(1)}));// `Object.freeze` method
// https://tc39.github.io/ecma262/#sec-object.freeze
qe({target:"Object",stat:1,forced:eh,sham:!Kp},{freeze:function(e){return Xp&&b(e)?Xp(Qp(e)):e}});var th,rh=r((function(t,r){!function(n){// Detect free variables `exports`.
var o=r,i=t&&t.exports==o&&t,a="object"==qo(e)&&e;// Detect free variable `module`.
a.global!==a&&a.window!==a||(n=a);/*--------------------------------------------------------------------------*/ // All astral symbols.
var s=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,u=/[\x01-\x7F]/g,c=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,l=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,f={"­":"shy","‌":"zwnj","‍":"zwj","‎":"lrm","⁣":"ic","⁢":"it","⁡":"af","‏":"rlm","​":"ZeroWidthSpace","⁠":"NoBreak","̑":"DownBreve","⃛":"tdot","⃜":"DotDot","\t":"Tab","\n":"NewLine"," ":"puncsp"," ":"MediumSpace"," ":"thinsp"," ":"hairsp"," ":"emsp13"," ":"ensp"," ":"emsp14"," ":"emsp"," ":"numsp"," ":"nbsp","  ":"ThickSpace","‾":"oline",_:"lowbar","‐":"dash","–":"ndash","—":"mdash","―":"horbar",",":"comma",";":"semi","⁏":"bsemi",":":"colon","⩴":"Colone","!":"excl","¡":"iexcl","?":"quest","¿":"iquest",".":"period","‥":"nldr","…":"mldr","·":"middot","'":"apos","‘":"lsquo","’":"rsquo","‚":"sbquo","‹":"lsaquo","›":"rsaquo",'"':"quot","“":"ldquo","”":"rdquo","„":"bdquo","«":"laquo","»":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","⌈":"lceil","⌉":"rceil","⌊":"lfloor","⌋":"rfloor","⦅":"lopar","⦆":"ropar","⦋":"lbrke","⦌":"rbrke","⦍":"lbrkslu","⦎":"rbrksld","⦏":"lbrksld","⦐":"rbrkslu","⦑":"langd","⦒":"rangd","⦓":"lparlt","⦔":"rpargt","⦕":"gtlPar","⦖":"ltrPar","⟦":"lobrk","⟧":"robrk","⟨":"lang","⟩":"rang","⟪":"Lang","⟫":"Rang","⟬":"loang","⟭":"roang","❲":"lbbrk","❳":"rbbrk","‖":"Vert","§":"sect","¶":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","‰":"permil","‱":"pertenk","†":"dagger","‡":"Dagger","•":"bull","⁃":"hybull","′":"prime","″":"Prime","‴":"tprime","⁗":"qprime","‵":"bprime","⁁":"caret","`":"grave","´":"acute","˜":"tilde","^":"Hat","¯":"macr","˘":"breve","˙":"dot","¨":"die","˚":"ring","˝":"dblac","¸":"cedil","˛":"ogon",ˆ:"circ",ˇ:"caron","°":"deg","©":"copy","®":"reg","℗":"copysr",℘:"wp","℞":"rx","℧":"mho","℩":"iiota","←":"larr","↚":"nlarr","→":"rarr","↛":"nrarr","↑":"uarr","↓":"darr","↔":"harr","↮":"nharr","↕":"varr","↖":"nwarr","↗":"nearr","↘":"searr","↙":"swarr","↝":"rarrw","↝̸":"nrarrw","↞":"Larr","↟":"Uarr","↠":"Rarr","↡":"Darr","↢":"larrtl","↣":"rarrtl","↤":"mapstoleft","↥":"mapstoup","↦":"map","↧":"mapstodown","↩":"larrhk","↪":"rarrhk","↫":"larrlp","↬":"rarrlp","↭":"harrw","↰":"lsh","↱":"rsh","↲":"ldsh","↳":"rdsh","↵":"crarr","↶":"cularr","↷":"curarr","↺":"olarr","↻":"orarr","↼":"lharu","↽":"lhard","↾":"uharr","↿":"uharl","⇀":"rharu","⇁":"rhard","⇂":"dharr","⇃":"dharl","⇄":"rlarr","⇅":"udarr","⇆":"lrarr","⇇":"llarr","⇈":"uuarr","⇉":"rrarr","⇊":"ddarr","⇋":"lrhar","⇌":"rlhar","⇐":"lArr","⇍":"nlArr","⇑":"uArr","⇒":"rArr","⇏":"nrArr","⇓":"dArr","⇔":"iff","⇎":"nhArr","⇕":"vArr","⇖":"nwArr","⇗":"neArr","⇘":"seArr","⇙":"swArr","⇚":"lAarr","⇛":"rAarr","⇝":"zigrarr","⇤":"larrb","⇥":"rarrb","⇵":"duarr","⇽":"loarr","⇾":"roarr","⇿":"hoarr","∀":"forall","∁":"comp","∂":"part","∂̸":"npart","∃":"exist","∄":"nexist","∅":"empty","∇":"Del","∈":"in","∉":"notin","∋":"ni","∌":"notni","϶":"bepsi","∏":"prod","∐":"coprod","∑":"sum","+":"plus","±":"pm","÷":"div","×":"times","<":"lt","≮":"nlt","<⃒":"nvlt","=":"equals","≠":"ne","=⃥":"bne","⩵":"Equal",">":"gt","≯":"ngt",">⃒":"nvgt","¬":"not","|":"vert","¦":"brvbar","−":"minus","∓":"mp","∔":"plusdo","⁄":"frasl","∖":"setmn","∗":"lowast","∘":"compfn","√":"Sqrt","∝":"prop","∞":"infin","∟":"angrt","∠":"ang","∠⃒":"nang","∡":"angmsd","∢":"angsph","∣":"mid","∤":"nmid","∥":"par","∦":"npar","∧":"and","∨":"or","∩":"cap","∩︀":"caps","∪":"cup","∪︀":"cups","∫":"int","∬":"Int","∭":"tint","⨌":"qint","∮":"oint","∯":"Conint","∰":"Cconint","∱":"cwint","∲":"cwconint","∳":"awconint","∴":"there4","∵":"becaus","∶":"ratio","∷":"Colon","∸":"minusd","∺":"mDDot","∻":"homtht","∼":"sim","≁":"nsim","∼⃒":"nvsim","∽":"bsim","∽̱":"race","∾":"ac","∾̳":"acE","∿":"acd","≀":"wr","≂":"esim","≂̸":"nesim","≃":"sime","≄":"nsime","≅":"cong","≇":"ncong","≆":"simne","≈":"ap","≉":"nap","≊":"ape","≋":"apid","≋̸":"napid","≌":"bcong","≍":"CupCap","≭":"NotCupCap","≍⃒":"nvap","≎":"bump","≎̸":"nbump","≏":"bumpe","≏̸":"nbumpe","≐":"doteq","≐̸":"nedot","≑":"eDot","≒":"efDot","≓":"erDot","≔":"colone","≕":"ecolon","≖":"ecir","≗":"cire","≙":"wedgeq","≚":"veeeq","≜":"trie","≟":"equest","≡":"equiv","≢":"nequiv","≡⃥":"bnequiv","≤":"le","≰":"nle","≤⃒":"nvle","≥":"ge","≱":"nge","≥⃒":"nvge","≦":"lE","≦̸":"nlE","≧":"gE","≧̸":"ngE","≨︀":"lvnE","≨":"lnE","≩":"gnE","≩︀":"gvnE","≪":"ll","≪̸":"nLtv","≪⃒":"nLt","≫":"gg","≫̸":"nGtv","≫⃒":"nGt","≬":"twixt","≲":"lsim","≴":"nlsim","≳":"gsim","≵":"ngsim","≶":"lg","≸":"ntlg","≷":"gl","≹":"ntgl","≺":"pr","⊀":"npr","≻":"sc","⊁":"nsc","≼":"prcue","⋠":"nprcue","≽":"sccue","⋡":"nsccue","≾":"prsim","≿":"scsim","≿̸":"NotSucceedsTilde","⊂":"sub","⊄":"nsub","⊂⃒":"vnsub","⊃":"sup","⊅":"nsup","⊃⃒":"vnsup","⊆":"sube","⊈":"nsube","⊇":"supe","⊉":"nsupe","⊊︀":"vsubne","⊊":"subne","⊋︀":"vsupne","⊋":"supne","⊍":"cupdot","⊎":"uplus","⊏":"sqsub","⊏̸":"NotSquareSubset","⊐":"sqsup","⊐̸":"NotSquareSuperset","⊑":"sqsube","⋢":"nsqsube","⊒":"sqsupe","⋣":"nsqsupe","⊓":"sqcap","⊓︀":"sqcaps","⊔":"sqcup","⊔︀":"sqcups","⊕":"oplus","⊖":"ominus","⊗":"otimes","⊘":"osol","⊙":"odot","⊚":"ocir","⊛":"oast","⊝":"odash","⊞":"plusb","⊟":"minusb","⊠":"timesb","⊡":"sdotb","⊢":"vdash","⊬":"nvdash","⊣":"dashv","⊤":"top","⊥":"bot","⊧":"models","⊨":"vDash","⊭":"nvDash","⊩":"Vdash","⊮":"nVdash","⊪":"Vvdash","⊫":"VDash","⊯":"nVDash","⊰":"prurel","⊲":"vltri","⋪":"nltri","⊳":"vrtri","⋫":"nrtri","⊴":"ltrie","⋬":"nltrie","⊴⃒":"nvltrie","⊵":"rtrie","⋭":"nrtrie","⊵⃒":"nvrtrie","⊶":"origof","⊷":"imof","⊸":"mumap","⊹":"hercon","⊺":"intcal","⊻":"veebar","⊽":"barvee","⊾":"angrtvb","⊿":"lrtri","⋀":"Wedge","⋁":"Vee","⋂":"xcap","⋃":"xcup","⋄":"diam","⋅":"sdot","⋆":"Star","⋇":"divonx","⋈":"bowtie","⋉":"ltimes","⋊":"rtimes","⋋":"lthree","⋌":"rthree","⋍":"bsime","⋎":"cuvee","⋏":"cuwed","⋐":"Sub","⋑":"Sup","⋒":"Cap","⋓":"Cup","⋔":"fork","⋕":"epar","⋖":"ltdot","⋗":"gtdot","⋘":"Ll","⋘̸":"nLl","⋙":"Gg","⋙̸":"nGg","⋚︀":"lesg","⋚":"leg","⋛":"gel","⋛︀":"gesl","⋞":"cuepr","⋟":"cuesc","⋦":"lnsim","⋧":"gnsim","⋨":"prnsim","⋩":"scnsim","⋮":"vellip","⋯":"ctdot","⋰":"utdot","⋱":"dtdot","⋲":"disin","⋳":"isinsv","⋴":"isins","⋵":"isindot","⋵̸":"notindot","⋶":"notinvc","⋷":"notinvb","⋹":"isinE","⋹̸":"notinE","⋺":"nisd","⋻":"xnis","⋼":"nis","⋽":"notnivc","⋾":"notnivb","⌅":"barwed","⌆":"Barwed","⌌":"drcrop","⌍":"dlcrop","⌎":"urcrop","⌏":"ulcrop","⌐":"bnot","⌒":"profline","⌓":"profsurf","⌕":"telrec","⌖":"target","⌜":"ulcorn","⌝":"urcorn","⌞":"dlcorn","⌟":"drcorn","⌢":"frown","⌣":"smile","⌭":"cylcty","⌮":"profalar","⌶":"topbot","⌽":"ovbar","⌿":"solbar","⍼":"angzarr","⎰":"lmoust","⎱":"rmoust","⎴":"tbrk","⎵":"bbrk","⎶":"bbrktbrk","⏜":"OverParenthesis","⏝":"UnderParenthesis","⏞":"OverBrace","⏟":"UnderBrace","⏢":"trpezium","⏧":"elinters","␣":"blank","─":"boxh","│":"boxv","┌":"boxdr","┐":"boxdl","└":"boxur","┘":"boxul","├":"boxvr","┤":"boxvl","┬":"boxhd","┴":"boxhu","┼":"boxvh","═":"boxH","║":"boxV","╒":"boxdR","╓":"boxDr","╔":"boxDR","╕":"boxdL","╖":"boxDl","╗":"boxDL","╘":"boxuR","╙":"boxUr","╚":"boxUR","╛":"boxuL","╜":"boxUl","╝":"boxUL","╞":"boxvR","╟":"boxVr","╠":"boxVR","╡":"boxvL","╢":"boxVl","╣":"boxVL","╤":"boxHd","╥":"boxhD","╦":"boxHD","╧":"boxHu","╨":"boxhU","╩":"boxHU","╪":"boxvH","╫":"boxVh","╬":"boxVH","▀":"uhblk","▄":"lhblk","█":"block","░":"blk14","▒":"blk12","▓":"blk34","□":"squ","▪":"squf","▫":"EmptyVerySmallSquare","▭":"rect","▮":"marker","▱":"fltns","△":"xutri","▴":"utrif","▵":"utri","▸":"rtrif","▹":"rtri","▽":"xdtri","▾":"dtrif","▿":"dtri","◂":"ltrif","◃":"ltri","◊":"loz","○":"cir","◬":"tridot","◯":"xcirc","◸":"ultri","◹":"urtri","◺":"lltri","◻":"EmptySmallSquare","◼":"FilledSmallSquare","★":"starf","☆":"star","☎":"phone","♀":"female","♂":"male","♠":"spades","♣":"clubs","♥":"hearts","♦":"diams","♪":"sung","✓":"check","✗":"cross","✠":"malt","✶":"sext","❘":"VerticalSeparator","⟈":"bsolhsub","⟉":"suphsol","⟵":"xlarr","⟶":"xrarr","⟷":"xharr","⟸":"xlArr","⟹":"xrArr","⟺":"xhArr","⟼":"xmap","⟿":"dzigrarr","⤂":"nvlArr","⤃":"nvrArr","⤄":"nvHarr","⤅":"Map","⤌":"lbarr","⤍":"rbarr","⤎":"lBarr","⤏":"rBarr","⤐":"RBarr","⤑":"DDotrahd","⤒":"UpArrowBar","⤓":"DownArrowBar","⤖":"Rarrtl","⤙":"latail","⤚":"ratail","⤛":"lAtail","⤜":"rAtail","⤝":"larrfs","⤞":"rarrfs","⤟":"larrbfs","⤠":"rarrbfs","⤣":"nwarhk","⤤":"nearhk","⤥":"searhk","⤦":"swarhk","⤧":"nwnear","⤨":"toea","⤩":"tosa","⤪":"swnwar","⤳":"rarrc","⤳̸":"nrarrc","⤵":"cudarrr","⤶":"ldca","⤷":"rdca","⤸":"cudarrl","⤹":"larrpl","⤼":"curarrm","⤽":"cularrp","⥅":"rarrpl","⥈":"harrcir","⥉":"Uarrocir","⥊":"lurdshar","⥋":"ldrushar","⥎":"LeftRightVector","⥏":"RightUpDownVector","⥐":"DownLeftRightVector","⥑":"LeftUpDownVector","⥒":"LeftVectorBar","⥓":"RightVectorBar","⥔":"RightUpVectorBar","⥕":"RightDownVectorBar","⥖":"DownLeftVectorBar","⥗":"DownRightVectorBar","⥘":"LeftUpVectorBar","⥙":"LeftDownVectorBar","⥚":"LeftTeeVector","⥛":"RightTeeVector","⥜":"RightUpTeeVector","⥝":"RightDownTeeVector","⥞":"DownLeftTeeVector","⥟":"DownRightTeeVector","⥠":"LeftUpTeeVector","⥡":"LeftDownTeeVector","⥢":"lHar","⥣":"uHar","⥤":"rHar","⥥":"dHar","⥦":"luruhar","⥧":"ldrdhar","⥨":"ruluhar","⥩":"rdldhar","⥪":"lharul","⥫":"llhard","⥬":"rharul","⥭":"lrhard","⥮":"udhar","⥯":"duhar","⥰":"RoundImplies","⥱":"erarr","⥲":"simrarr","⥳":"larrsim","⥴":"rarrsim","⥵":"rarrap","⥶":"ltlarr","⥸":"gtrarr","⥹":"subrarr","⥻":"suplarr","⥼":"lfisht","⥽":"rfisht","⥾":"ufisht","⥿":"dfisht","⦚":"vzigzag","⦜":"vangrt","⦝":"angrtvbd","⦤":"ange","⦥":"range","⦦":"dwangle","⦧":"uwangle","⦨":"angmsdaa","⦩":"angmsdab","⦪":"angmsdac","⦫":"angmsdad","⦬":"angmsdae","⦭":"angmsdaf","⦮":"angmsdag","⦯":"angmsdah","⦰":"bemptyv","⦱":"demptyv","⦲":"cemptyv","⦳":"raemptyv","⦴":"laemptyv","⦵":"ohbar","⦶":"omid","⦷":"opar","⦹":"operp","⦻":"olcross","⦼":"odsold","⦾":"olcir","⦿":"ofcir","⧀":"olt","⧁":"ogt","⧂":"cirscir","⧃":"cirE","⧄":"solb","⧅":"bsolb","⧉":"boxbox","⧍":"trisb","⧎":"rtriltri","⧏":"LeftTriangleBar","⧏̸":"NotLeftTriangleBar","⧐":"RightTriangleBar","⧐̸":"NotRightTriangleBar","⧜":"iinfin","⧝":"infintie","⧞":"nvinfin","⧣":"eparsl","⧤":"smeparsl","⧥":"eqvparsl","⧫":"lozf","⧴":"RuleDelayed","⧶":"dsol","⨀":"xodot","⨁":"xoplus","⨂":"xotime","⨄":"xuplus","⨆":"xsqcup","⨍":"fpartint","⨐":"cirfnint","⨑":"awint","⨒":"rppolint","⨓":"scpolint","⨔":"npolint","⨕":"pointint","⨖":"quatint","⨗":"intlarhk","⨢":"pluscir","⨣":"plusacir","⨤":"simplus","⨥":"plusdu","⨦":"plussim","⨧":"plustwo","⨩":"mcomma","⨪":"minusdu","⨭":"loplus","⨮":"roplus","⨯":"Cross","⨰":"timesd","⨱":"timesbar","⨳":"smashp","⨴":"lotimes","⨵":"rotimes","⨶":"otimesas","⨷":"Otimes","⨸":"odiv","⨹":"triplus","⨺":"triminus","⨻":"tritime","⨼":"iprod","⨿":"amalg","⩀":"capdot","⩂":"ncup","⩃":"ncap","⩄":"capand","⩅":"cupor","⩆":"cupcap","⩇":"capcup","⩈":"cupbrcap","⩉":"capbrcup","⩊":"cupcup","⩋":"capcap","⩌":"ccups","⩍":"ccaps","⩐":"ccupssm","⩓":"And","⩔":"Or","⩕":"andand","⩖":"oror","⩗":"orslope","⩘":"andslope","⩚":"andv","⩛":"orv","⩜":"andd","⩝":"ord","⩟":"wedbar","⩦":"sdote","⩪":"simdot","⩭":"congdot","⩭̸":"ncongdot","⩮":"easter","⩯":"apacir","⩰":"apE","⩰̸":"napE","⩱":"eplus","⩲":"pluse","⩳":"Esim","⩷":"eDDot","⩸":"equivDD","⩹":"ltcir","⩺":"gtcir","⩻":"ltquest","⩼":"gtquest","⩽":"les","⩽̸":"nles","⩾":"ges","⩾̸":"nges","⩿":"lesdot","⪀":"gesdot","⪁":"lesdoto","⪂":"gesdoto","⪃":"lesdotor","⪄":"gesdotol","⪅":"lap","⪆":"gap","⪇":"lne","⪈":"gne","⪉":"lnap","⪊":"gnap","⪋":"lEg","⪌":"gEl","⪍":"lsime","⪎":"gsime","⪏":"lsimg","⪐":"gsiml","⪑":"lgE","⪒":"glE","⪓":"lesges","⪔":"gesles","⪕":"els","⪖":"egs","⪗":"elsdot","⪘":"egsdot","⪙":"el","⪚":"eg","⪝":"siml","⪞":"simg","⪟":"simlE","⪠":"simgE","⪡":"LessLess","⪡̸":"NotNestedLessLess","⪢":"GreaterGreater","⪢̸":"NotNestedGreaterGreater","⪤":"glj","⪥":"gla","⪦":"ltcc","⪧":"gtcc","⪨":"lescc","⪩":"gescc","⪪":"smt","⪫":"lat","⪬":"smte","⪬︀":"smtes","⪭":"late","⪭︀":"lates","⪮":"bumpE","⪯":"pre","⪯̸":"npre","⪰":"sce","⪰̸":"nsce","⪳":"prE","⪴":"scE","⪵":"prnE","⪶":"scnE","⪷":"prap","⪸":"scap","⪹":"prnap","⪺":"scnap","⪻":"Pr","⪼":"Sc","⪽":"subdot","⪾":"supdot","⪿":"subplus","⫀":"supplus","⫁":"submult","⫂":"supmult","⫃":"subedot","⫄":"supedot","⫅":"subE","⫅̸":"nsubE","⫆":"supE","⫆̸":"nsupE","⫇":"subsim","⫈":"supsim","⫋︀":"vsubnE","⫋":"subnE","⫌︀":"vsupnE","⫌":"supnE","⫏":"csub","⫐":"csup","⫑":"csube","⫒":"csupe","⫓":"subsup","⫔":"supsub","⫕":"subsub","⫖":"supsup","⫗":"suphsub","⫘":"supdsub","⫙":"forkv","⫚":"topfork","⫛":"mlcp","⫤":"Dashv","⫦":"Vdashl","⫧":"Barv","⫨":"vBar","⫩":"vBarv","⫫":"Vbar","⫬":"Not","⫭":"bNot","⫮":"rnmid","⫯":"cirmid","⫰":"midcir","⫱":"topcir","⫲":"nhpar","⫳":"parsim","⫽":"parsl","⫽⃥":"nparsl","♭":"flat","♮":"natur","♯":"sharp","¤":"curren","¢":"cent",$:"dollar","£":"pound","¥":"yen","€":"euro","¹":"sup1","½":"half","⅓":"frac13","¼":"frac14","⅕":"frac15","⅙":"frac16","⅛":"frac18","²":"sup2","⅔":"frac23","⅖":"frac25","³":"sup3","¾":"frac34","⅗":"frac35","⅜":"frac38","⅘":"frac45","⅚":"frac56","⅝":"frac58","⅞":"frac78",𝒶:"ascr",𝕒:"aopf",𝔞:"afr",𝔸:"Aopf",𝔄:"Afr",𝒜:"Ascr",ª:"ordf",á:"aacute",Á:"Aacute",à:"agrave",À:"Agrave",ă:"abreve",Ă:"Abreve",â:"acirc",Â:"Acirc",å:"aring",Å:"angst",ä:"auml",Ä:"Auml",ã:"atilde",Ã:"Atilde",ą:"aogon",Ą:"Aogon",ā:"amacr",Ā:"Amacr",æ:"aelig",Æ:"AElig",𝒷:"bscr",𝕓:"bopf",𝔟:"bfr",𝔹:"Bopf",ℬ:"Bscr",𝔅:"Bfr",𝔠:"cfr",𝒸:"cscr",𝕔:"copf",ℭ:"Cfr",𝒞:"Cscr",ℂ:"Copf",ć:"cacute",Ć:"Cacute",ĉ:"ccirc",Ĉ:"Ccirc",č:"ccaron",Č:"Ccaron",ċ:"cdot",Ċ:"Cdot",ç:"ccedil",Ç:"Ccedil","℅":"incare",𝔡:"dfr",ⅆ:"dd",𝕕:"dopf",𝒹:"dscr",𝒟:"Dscr",𝔇:"Dfr",ⅅ:"DD",𝔻:"Dopf",ď:"dcaron",Ď:"Dcaron",đ:"dstrok",Đ:"Dstrok",ð:"eth",Ð:"ETH",ⅇ:"ee",ℯ:"escr",𝔢:"efr",𝕖:"eopf",ℰ:"Escr",𝔈:"Efr",𝔼:"Eopf",é:"eacute",É:"Eacute",è:"egrave",È:"Egrave",ê:"ecirc",Ê:"Ecirc",ě:"ecaron",Ě:"Ecaron",ë:"euml",Ë:"Euml",ė:"edot",Ė:"Edot",ę:"eogon",Ę:"Eogon",ē:"emacr",Ē:"Emacr",𝔣:"ffr",𝕗:"fopf",𝒻:"fscr",𝔉:"Ffr",𝔽:"Fopf",ℱ:"Fscr",ﬀ:"fflig",ﬃ:"ffilig",ﬄ:"ffllig",ﬁ:"filig",fj:"fjlig",ﬂ:"fllig",ƒ:"fnof",ℊ:"gscr",𝕘:"gopf",𝔤:"gfr",𝒢:"Gscr",𝔾:"Gopf",𝔊:"Gfr",ǵ:"gacute",ğ:"gbreve",Ğ:"Gbreve",ĝ:"gcirc",Ĝ:"Gcirc",ġ:"gdot",Ġ:"Gdot",Ģ:"Gcedil",𝔥:"hfr",ℎ:"planckh",𝒽:"hscr",𝕙:"hopf",ℋ:"Hscr",ℌ:"Hfr",ℍ:"Hopf",ĥ:"hcirc",Ĥ:"Hcirc",ℏ:"hbar",ħ:"hstrok",Ħ:"Hstrok",𝕚:"iopf",𝔦:"ifr",𝒾:"iscr",ⅈ:"ii",𝕀:"Iopf",ℐ:"Iscr",ℑ:"Im",í:"iacute",Í:"Iacute",ì:"igrave",Ì:"Igrave",î:"icirc",Î:"Icirc",ï:"iuml",Ï:"Iuml",ĩ:"itilde",Ĩ:"Itilde",İ:"Idot",į:"iogon",Į:"Iogon",ī:"imacr",Ī:"Imacr",ĳ:"ijlig",Ĳ:"IJlig",ı:"imath",𝒿:"jscr",𝕛:"jopf",𝔧:"jfr",𝒥:"Jscr",𝔍:"Jfr",𝕁:"Jopf",ĵ:"jcirc",Ĵ:"Jcirc",ȷ:"jmath",𝕜:"kopf",𝓀:"kscr",𝔨:"kfr",𝒦:"Kscr",𝕂:"Kopf",𝔎:"Kfr",ķ:"kcedil",Ķ:"Kcedil",𝔩:"lfr",𝓁:"lscr",ℓ:"ell",𝕝:"lopf",ℒ:"Lscr",𝔏:"Lfr",𝕃:"Lopf",ĺ:"lacute",Ĺ:"Lacute",ľ:"lcaron",Ľ:"Lcaron",ļ:"lcedil",Ļ:"Lcedil",ł:"lstrok",Ł:"Lstrok",ŀ:"lmidot",Ŀ:"Lmidot",𝔪:"mfr",𝕞:"mopf",𝓂:"mscr",𝔐:"Mfr",𝕄:"Mopf",ℳ:"Mscr",𝔫:"nfr",𝕟:"nopf",𝓃:"nscr",ℕ:"Nopf",𝒩:"Nscr",𝔑:"Nfr",ń:"nacute",Ń:"Nacute",ň:"ncaron",Ň:"Ncaron",ñ:"ntilde",Ñ:"Ntilde",ņ:"ncedil",Ņ:"Ncedil","№":"numero",ŋ:"eng",Ŋ:"ENG",𝕠:"oopf",𝔬:"ofr",ℴ:"oscr",𝒪:"Oscr",𝔒:"Ofr",𝕆:"Oopf",º:"ordm",ó:"oacute",Ó:"Oacute",ò:"ograve",Ò:"Ograve",ô:"ocirc",Ô:"Ocirc",ö:"ouml",Ö:"Ouml",ő:"odblac",Ő:"Odblac",õ:"otilde",Õ:"Otilde",ø:"oslash",Ø:"Oslash",ō:"omacr",Ō:"Omacr",œ:"oelig",Œ:"OElig",𝔭:"pfr",𝓅:"pscr",𝕡:"popf",ℙ:"Popf",𝔓:"Pfr",𝒫:"Pscr",𝕢:"qopf",𝔮:"qfr",𝓆:"qscr",𝒬:"Qscr",𝔔:"Qfr",ℚ:"Qopf",ĸ:"kgreen",𝔯:"rfr",𝕣:"ropf",𝓇:"rscr",ℛ:"Rscr",ℜ:"Re",ℝ:"Ropf",ŕ:"racute",Ŕ:"Racute",ř:"rcaron",Ř:"Rcaron",ŗ:"rcedil",Ŗ:"Rcedil",𝕤:"sopf",𝓈:"sscr",𝔰:"sfr",𝕊:"Sopf",𝔖:"Sfr",𝒮:"Sscr","Ⓢ":"oS",ś:"sacute",Ś:"Sacute",ŝ:"scirc",Ŝ:"Scirc",š:"scaron",Š:"Scaron",ş:"scedil",Ş:"Scedil",ß:"szlig",𝔱:"tfr",𝓉:"tscr",𝕥:"topf",𝒯:"Tscr",𝔗:"Tfr",𝕋:"Topf",ť:"tcaron",Ť:"Tcaron",ţ:"tcedil",Ţ:"Tcedil","™":"trade",ŧ:"tstrok",Ŧ:"Tstrok",𝓊:"uscr",𝕦:"uopf",𝔲:"ufr",𝕌:"Uopf",𝔘:"Ufr",𝒰:"Uscr",ú:"uacute",Ú:"Uacute",ù:"ugrave",Ù:"Ugrave",ŭ:"ubreve",Ŭ:"Ubreve",û:"ucirc",Û:"Ucirc",ů:"uring",Ů:"Uring",ü:"uuml",Ü:"Uuml",ű:"udblac",Ű:"Udblac",ũ:"utilde",Ũ:"Utilde",ų:"uogon",Ų:"Uogon",ū:"umacr",Ū:"Umacr",𝔳:"vfr",𝕧:"vopf",𝓋:"vscr",𝔙:"Vfr",𝕍:"Vopf",𝒱:"Vscr",𝕨:"wopf",𝓌:"wscr",𝔴:"wfr",𝒲:"Wscr",𝕎:"Wopf",𝔚:"Wfr",ŵ:"wcirc",Ŵ:"Wcirc",𝔵:"xfr",𝓍:"xscr",𝕩:"xopf",𝕏:"Xopf",𝔛:"Xfr",𝒳:"Xscr",𝔶:"yfr",𝓎:"yscr",𝕪:"yopf",𝒴:"Yscr",𝔜:"Yfr",𝕐:"Yopf",ý:"yacute",Ý:"Yacute",ŷ:"ycirc",Ŷ:"Ycirc",ÿ:"yuml",Ÿ:"Yuml",𝓏:"zscr",𝔷:"zfr",𝕫:"zopf",ℨ:"Zfr",ℤ:"Zopf",𝒵:"Zscr",ź:"zacute",Ź:"Zacute",ž:"zcaron",Ž:"Zcaron",ż:"zdot",Ż:"Zdot",Ƶ:"imped",þ:"thorn",Þ:"THORN",ŉ:"napos",α:"alpha",Α:"Alpha",β:"beta",Β:"Beta",γ:"gamma",Γ:"Gamma",δ:"delta",Δ:"Delta",ε:"epsi",ϵ:"epsiv",Ε:"Epsilon",ϝ:"gammad",Ϝ:"Gammad",ζ:"zeta",Ζ:"Zeta",η:"eta",Η:"Eta",θ:"theta",ϑ:"thetav",Θ:"Theta",ι:"iota",Ι:"Iota",κ:"kappa",ϰ:"kappav",Κ:"Kappa",λ:"lambda",Λ:"Lambda",μ:"mu",µ:"micro",Μ:"Mu",ν:"nu",Ν:"Nu",ξ:"xi",Ξ:"Xi",ο:"omicron",Ο:"Omicron",π:"pi",ϖ:"piv",Π:"Pi",ρ:"rho",ϱ:"rhov",Ρ:"Rho",σ:"sigma",Σ:"Sigma",ς:"sigmaf",τ:"tau",Τ:"Tau",υ:"upsi",Υ:"Upsilon",ϒ:"Upsi",φ:"phi",ϕ:"phiv",Φ:"Phi",χ:"chi",Χ:"Chi",ψ:"psi",Ψ:"Psi",ω:"omega",Ω:"ohm",а:"acy",А:"Acy",б:"bcy",Б:"Bcy",в:"vcy",В:"Vcy",г:"gcy",Г:"Gcy",ѓ:"gjcy",Ѓ:"GJcy",д:"dcy",Д:"Dcy",ђ:"djcy",Ђ:"DJcy",е:"iecy",Е:"IEcy",ё:"iocy",Ё:"IOcy",є:"jukcy",Є:"Jukcy",ж:"zhcy",Ж:"ZHcy",з:"zcy",З:"Zcy",ѕ:"dscy",Ѕ:"DScy",и:"icy",И:"Icy",і:"iukcy",І:"Iukcy",ї:"yicy",Ї:"YIcy",й:"jcy",Й:"Jcy",ј:"jsercy",Ј:"Jsercy",к:"kcy",К:"Kcy",ќ:"kjcy",Ќ:"KJcy",л:"lcy",Л:"Lcy",љ:"ljcy",Љ:"LJcy",м:"mcy",М:"Mcy",н:"ncy",Н:"Ncy",њ:"njcy",Њ:"NJcy",о:"ocy",О:"Ocy",п:"pcy",П:"Pcy",р:"rcy",Р:"Rcy",с:"scy",С:"Scy",т:"tcy",Т:"Tcy",ћ:"tshcy",Ћ:"TSHcy",у:"ucy",У:"Ucy",ў:"ubrcy",Ў:"Ubrcy",ф:"fcy",Ф:"Fcy",х:"khcy",Х:"KHcy",ц:"tscy",Ц:"TScy",ч:"chcy",Ч:"CHcy",џ:"dzcy",Џ:"DZcy",ш:"shcy",Ш:"SHcy",щ:"shchcy",Щ:"SHCHcy",ъ:"hardcy",Ъ:"HARDcy",ы:"ycy",Ы:"Ycy",ь:"softcy",Ь:"SOFTcy",э:"ecy",Э:"Ecy",ю:"yucy",Ю:"YUcy",я:"yacy",Я:"YAcy",ℵ:"aleph",ℶ:"beth",ℷ:"gimel",ℸ:"daleth"},p=/["&'<>`]/g,h={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the
// following is not strictly necessary unless it’s part of a tag or an
// unquoted attribute value. We’re only escaping it to support those
// situations, and for XML support.
">":"&gt;",// In Internet Explorer ≤ 8, the backtick character can be used
// to break out of (un)quoted attribute values or HTML comments.
// See http://html5sec.org/#102, http://html5sec.org/#108, and
// http://html5sec.org/#133.
"`":"&#x60;"},d=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,g=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,m=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,y={aacute:"á",Aacute:"Á",abreve:"ă",Abreve:"Ă",ac:"∾",acd:"∿",acE:"∾̳",acirc:"â",Acirc:"Â",acute:"´",acy:"а",Acy:"А",aelig:"æ",AElig:"Æ",af:"⁡",afr:"𝔞",Afr:"𝔄",agrave:"à",Agrave:"À",alefsym:"ℵ",aleph:"ℵ",alpha:"α",Alpha:"Α",amacr:"ā",Amacr:"Ā",amalg:"⨿",amp:"&",AMP:"&",and:"∧",And:"⩓",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",Aogon:"Ą",aopf:"𝕒",Aopf:"𝔸",ap:"≈",apacir:"⩯",ape:"≊",apE:"⩰",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",aring:"å",Aring:"Å",ascr:"𝒶",Ascr:"𝒜",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",Bcy:"Б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",beta:"β",Beta:"Β",beth:"ℶ",between:"≬",bfr:"𝔟",Bfr:"𝔅",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bNot:"⫭",bopf:"𝕓",Bopf:"𝔹",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxhD:"╥",boxHd:"╤",boxHD:"╦",boxhu:"┴",boxhU:"╨",boxHu:"╧",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpe:"≏",bumpE:"⪮",bumpeq:"≏",Bumpeq:"≎",cacute:"ć",Cacute:"Ć",cap:"∩",Cap:"⋒",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",ccaron:"č",Ccaron:"Č",ccedil:"ç",Ccedil:"Ç",ccirc:"ĉ",Ccirc:"Ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",Cdot:"Ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",chcy:"ч",CHcy:"Ч",check:"✓",checkmark:"✓",chi:"χ",Chi:"Χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cire:"≗",cirE:"⧃",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",colone:"≔",Colone:"⩴",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",cscr:"𝒸",Cscr:"𝒞",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",Cup:"⋓",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",dArr:"⇓",Darr:"↡",dash:"‐",dashv:"⊣",Dashv:"⫤",dbkarow:"⤏",dblac:"˝",dcaron:"ď",Dcaron:"Ď",dcy:"д",Dcy:"Д",dd:"ⅆ",DD:"ⅅ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",delta:"δ",Delta:"Δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",Dfr:"𝔇",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",DJcy:"Ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",Dopf:"𝔻",dot:"˙",Dot:"¨",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",downarrow:"↓",Downarrow:"⇓",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",Dscr:"𝒟",dscy:"ѕ",DScy:"Ѕ",dsol:"⧶",dstrok:"đ",Dstrok:"Đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",DZcy:"Џ",dzigrarr:"⟿",eacute:"é",Eacute:"É",easter:"⩮",ecaron:"ě",Ecaron:"Ě",ecir:"≖",ecirc:"ê",Ecirc:"Ê",ecolon:"≕",ecy:"э",Ecy:"Э",eDDot:"⩷",edot:"ė",eDot:"≑",Edot:"Ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",Efr:"𝔈",eg:"⪚",egrave:"è",Egrave:"È",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",Emacr:"Ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",eng:"ŋ",ENG:"Ŋ",ensp:" ",eogon:"ę",Eogon:"Ę",eopf:"𝕖",Eopf:"𝔼",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",Epsilon:"Ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",esim:"≂",Esim:"⩳",eta:"η",Eta:"Η",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",fcy:"ф",Fcy:"Ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",Ffr:"𝔉",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",Fopf:"𝔽",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",gamma:"γ",Gamma:"Γ",gammad:"ϝ",Gammad:"Ϝ",gap:"⪆",gbreve:"ğ",Gbreve:"Ğ",Gcedil:"Ģ",gcirc:"ĝ",Gcirc:"Ĝ",gcy:"г",Gcy:"Г",gdot:"ġ",Gdot:"Ġ",ge:"≥",gE:"≧",gel:"⋛",gEl:"⪌",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",Gfr:"𝔊",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",GJcy:"Ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",Gopf:"𝔾",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",gscr:"ℊ",Gscr:"𝒢",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",Gt:"≫",GT:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",HARDcy:"Ъ",harr:"↔",hArr:"⇔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",hcirc:"ĥ",Hcirc:"Ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",hstrok:"ħ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",iacute:"í",Iacute:"Í",ic:"⁣",icirc:"î",Icirc:"Î",icy:"и",Icy:"И",Idot:"İ",iecy:"е",IEcy:"Е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",igrave:"ì",Igrave:"Ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",IJlig:"Ĳ",Im:"ℑ",imacr:"ī",Imacr:"Ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",Int:"∬",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",iocy:"ё",IOcy:"Ё",iogon:"į",Iogon:"Į",iopf:"𝕚",Iopf:"𝕀",iota:"ι",Iota:"Ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",Itilde:"Ĩ",iukcy:"і",Iukcy:"І",iuml:"ï",Iuml:"Ï",jcirc:"ĵ",Jcirc:"Ĵ",jcy:"й",Jcy:"Й",jfr:"𝔧",Jfr:"𝔍",jmath:"ȷ",jopf:"𝕛",Jopf:"𝕁",jscr:"𝒿",Jscr:"𝒥",jsercy:"ј",Jsercy:"Ј",jukcy:"є",Jukcy:"Є",kappa:"κ",Kappa:"Κ",kappav:"ϰ",kcedil:"ķ",Kcedil:"Ķ",kcy:"к",Kcy:"К",kfr:"𝔨",Kfr:"𝔎",kgreen:"ĸ",khcy:"х",KHcy:"Х",kjcy:"ќ",KJcy:"Ќ",kopf:"𝕜",Kopf:"𝕂",kscr:"𝓀",Kscr:"𝒦",lAarr:"⇚",lacute:"ĺ",Lacute:"Ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",Lambda:"Λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larr:"←",lArr:"⇐",Larr:"↞",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",lAtail:"⤛",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",Lcaron:"Ľ",lcedil:"ļ",Lcedil:"Ļ",lceil:"⌈",lcub:"{",lcy:"л",Lcy:"Л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",leftarrow:"←",Leftarrow:"⇐",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",Leftrightarrow:"⇔",LeftRightArrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",leg:"⋚",lEg:"⪋",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",Lfr:"𝔏",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",LJcy:"Љ",ll:"≪",Ll:"⋘",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",lmidot:"ŀ",Lmidot:"Ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",Longleftarrow:"⟸",LongLeftArrow:"⟵",longleftrightarrow:"⟷",Longleftrightarrow:"⟺",LongLeftRightArrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",Longrightarrow:"⟹",LongRightArrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",Lopf:"𝕃",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",Lstrok:"Ł",lt:"<",Lt:"≪",LT:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",Map:"⤅",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",Mcy:"М",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",mfr:"𝔪",Mfr:"𝔐",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",Mopf:"𝕄",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",mu:"μ",Mu:"Μ",multimap:"⊸",mumap:"⊸",nabla:"∇",nacute:"ń",Nacute:"Ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",Ncaron:"Ň",ncedil:"ņ",Ncedil:"Ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",Ncy:"Н",ndash:"–",ne:"≠",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",nfr:"𝔫",Nfr:"𝔑",nge:"≱",ngE:"≧̸",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",ngt:"≯",nGt:"≫⃒",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",NJcy:"Њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nle:"≰",nlE:"≦̸",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nlt:"≮",nLt:"≪⃒",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",not:"¬",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrarr:"↛",nrArr:"⇏",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",Nscr:"𝒩",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsube:"⊈",nsubE:"⫅̸",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupe:"⊉",nsupE:"⫆̸",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",Ntilde:"Ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",Nu:"Ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",oacute:"ó",Oacute:"Ó",oast:"⊛",ocir:"⊚",ocirc:"ô",Ocirc:"Ô",ocy:"о",Ocy:"О",odash:"⊝",odblac:"ő",Odblac:"Ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",OElig:"Œ",ofcir:"⦿",ofr:"𝔬",Ofr:"𝔒",ogon:"˛",ograve:"ò",Ograve:"Ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",Omacr:"Ō",omega:"ω",Omega:"Ω",omicron:"ο",Omicron:"Ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",Oopf:"𝕆",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",or:"∨",Or:"⩔",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",oscr:"ℴ",Oscr:"𝒪",oslash:"ø",Oslash:"Ø",osol:"⊘",otilde:"õ",Otilde:"Õ",otimes:"⊗",Otimes:"⨷",otimesas:"⨶",ouml:"ö",Ouml:"Ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",pcy:"п",Pcy:"П",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",Pfr:"𝔓",phi:"φ",Phi:"Φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",Pi:"Π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",pr:"≺",Pr:"⪻",prap:"⪷",prcue:"≼",pre:"⪯",prE:"⪳",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",Pscr:"𝒫",psi:"ψ",Psi:"Ψ",puncsp:" ",qfr:"𝔮",Qfr:"𝔔",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",qscr:"𝓆",Qscr:"𝒬",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",racute:"ŕ",Racute:"Ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rArr:"⇒",Rarr:"↠",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",Rarrtl:"⤖",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",Rcaron:"Ř",rcedil:"ŗ",Rcedil:"Ŗ",rceil:"⌉",rcub:"}",rcy:"р",Rcy:"Р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",Rho:"Ρ",rhov:"ϱ",RightAngleBracket:"⟩",rightarrow:"→",Rightarrow:"⇒",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",sacute:"ś",Sacute:"Ś",sbquo:"‚",sc:"≻",Sc:"⪼",scap:"⪸",scaron:"š",Scaron:"Š",sccue:"≽",sce:"⪰",scE:"⪴",scedil:"ş",Scedil:"Ş",scirc:"ŝ",Scirc:"Ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",Scy:"С",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",Sfr:"𝔖",sfrown:"⌢",sharp:"♯",shchcy:"щ",SHCHcy:"Щ",shcy:"ш",SHcy:"Ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",sigma:"σ",Sigma:"Σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",SOFTcy:"Ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",Sopf:"𝕊",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",Sscr:"𝒮",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",Star:"⋆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",sube:"⊆",subE:"⫅",subedot:"⫃",submult:"⫁",subne:"⊊",subnE:"⫋",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup:"⊃",Sup:"⋑",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supe:"⊇",supE:"⫆",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supne:"⊋",supnE:"⫌",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",tau:"τ",Tau:"Τ",tbrk:"⎴",tcaron:"ť",Tcaron:"Ť",tcedil:"ţ",Tcedil:"Ţ",tcy:"т",Tcy:"Т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",Tfr:"𝔗",there4:"∴",therefore:"∴",Therefore:"∴",theta:"θ",Theta:"Θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",thorn:"þ",THORN:"Þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",Topf:"𝕋",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",Tscr:"𝒯",tscy:"ц",TScy:"Ц",tshcy:"ћ",TSHcy:"Ћ",tstrok:"ŧ",Tstrok:"Ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uacute:"ú",Uacute:"Ú",uarr:"↑",uArr:"⇑",Uarr:"↟",Uarrocir:"⥉",ubrcy:"ў",Ubrcy:"Ў",ubreve:"ŭ",Ubreve:"Ŭ",ucirc:"û",Ucirc:"Û",ucy:"у",Ucy:"У",udarr:"⇅",udblac:"ű",Udblac:"Ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",Ufr:"𝔘",ugrave:"ù",Ugrave:"Ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",Umacr:"Ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",uogon:"ų",Uogon:"Ų",uopf:"𝕦",Uopf:"𝕌",uparrow:"↑",Uparrow:"⇑",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",updownarrow:"↕",Updownarrow:"⇕",UpDownArrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",upsilon:"υ",Upsilon:"Υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",Uring:"Ů",urtri:"◹",uscr:"𝓊",Uscr:"𝒰",utdot:"⋰",utilde:"ũ",Utilde:"Ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",Uuml:"Ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",vcy:"в",Vcy:"В",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",vee:"∨",Vee:"⋁",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",vfr:"𝔳",Vfr:"𝔙",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",Vopf:"𝕍",vprop:"∝",vrtri:"⊳",vscr:"𝓋",Vscr:"𝒱",vsubne:"⊊︀",vsubnE:"⫋︀",vsupne:"⊋︀",vsupnE:"⫌︀",Vvdash:"⊪",vzigzag:"⦚",wcirc:"ŵ",Wcirc:"Ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",wfr:"𝔴",Wfr:"𝔚",wopf:"𝕨",Wopf:"𝕎",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",Wscr:"𝒲",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",Xfr:"𝔛",xharr:"⟷",xhArr:"⟺",xi:"ξ",Xi:"Ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",Xopf:"𝕏",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",xscr:"𝓍",Xscr:"𝒳",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",Yacute:"Ý",yacy:"я",YAcy:"Я",ycirc:"ŷ",Ycirc:"Ŷ",ycy:"ы",Ycy:"Ы",yen:"¥",yfr:"𝔶",Yfr:"𝔜",yicy:"ї",YIcy:"Ї",yopf:"𝕪",Yopf:"𝕐",yscr:"𝓎",Yscr:"𝒴",yucy:"ю",YUcy:"Ю",yuml:"ÿ",Yuml:"Ÿ",zacute:"ź",Zacute:"Ź",zcaron:"ž",Zcaron:"Ž",zcy:"з",Zcy:"З",zdot:"ż",Zdot:"Ż",zeetrf:"ℨ",ZeroWidthSpace:"​",zeta:"ζ",Zeta:"Ζ",zfr:"𝔷",Zfr:"ℨ",zhcy:"ж",ZHcy:"Ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",zscr:"𝓏",Zscr:"𝒵",zwj:"‍",zwnj:"‌"},v={aacute:"á",Aacute:"Á",acirc:"â",Acirc:"Â",acute:"´",aelig:"æ",AElig:"Æ",agrave:"à",Agrave:"À",amp:"&",AMP:"&",aring:"å",Aring:"Å",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",brvbar:"¦",ccedil:"ç",Ccedil:"Ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",eacute:"é",Eacute:"É",ecirc:"ê",Ecirc:"Ê",egrave:"è",Egrave:"È",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",iacute:"í",Iacute:"Í",icirc:"î",Icirc:"Î",iexcl:"¡",igrave:"ì",Igrave:"Ì",iquest:"¿",iuml:"ï",Iuml:"Ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",ntilde:"ñ",Ntilde:"Ñ",oacute:"ó",Oacute:"Ó",ocirc:"ô",Ocirc:"Ô",ograve:"ò",Ograve:"Ò",ordf:"ª",ordm:"º",oslash:"ø",Oslash:"Ø",otilde:"õ",Otilde:"Õ",ouml:"ö",Ouml:"Ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",thorn:"þ",THORN:"Þ",times:"×",uacute:"ú",Uacute:"Ú",ucirc:"û",Ucirc:"Û",ugrave:"ù",Ugrave:"Ù",uml:"¨",uuml:"ü",Uuml:"Ü",yacute:"ý",Yacute:"Ý",yen:"¥",yuml:"ÿ"},b={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"},w=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],E=String.fromCharCode,A={}.hasOwnProperty,T=function(e,t){return A.call(e,t)},x=function(e,t){if(!e)return t;var r,n={};for(r in t)// A `hasOwnProperty` check is not needed here, since only recognized
// option names are used anyway. Any others are ignored.
n[r]=T(e,r)?e[r]:t[r];return n},S=function(e,t){var r="";return e>=55296&&e<=57343||e>1114111?(// See issue #4:
// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is
// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD
// REPLACEMENT CHARACTER.”
t&&D("character reference outside the permissible Unicode range"),"�"):T(b,e)?(t&&D("disallowed character reference"),b[e]):(t&&function(e,t){for(var r=-1,n=e.length;++r<n;)if(e[r]==t)return 1;return 0}(w,e)&&D("disallowed character reference"),e>65535&&(r+=E((e-=65536)>>>10&1023|55296),e=56320|1023&e),r+=E(e))},_=function(e){return"&#x"+e.toString(16).toUpperCase()+";"},N=function(e){return"&#"+e+";"},D=function(e){throw Error("Parse error: "+e)},C=function e(t,r){(r=x(r,e.options)).strict&&g.test(t)&&D("forbidden code point");var n=r.encodeEverything,o=r.useNamedReferences,i=r.allowUnsafeSymbols,a=r.decimal?N:_,h=function(e){return a(e.charCodeAt(0))};return n?(// Encode ASCII symbols.
t=t.replace(u,(function(e){// Use named references if requested & possible.
return o&&T(f,e)?"&"+f[e]+";":h(e)})),// Shorten a few escapes that represent two symbols, of which at least one
// is within the ASCII range.
o&&(t=t.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),// Encode non-ASCII symbols.
o&&(// Encode non-ASCII symbols that can be replaced with a named reference.
t=t.replace(l,(function(e){// Note: there is no need to check `has(encodeMap, string)` here.
return"&"+f[e]+";"})))):o?(// Apply named character references.
// Encode `<>"'&` using named character references.
i||(t=t.replace(p,(function(e){return"&"+f[e]+";";// no need to check `has()` here
}))),// Encode non-ASCII symbols that can be replaced with a named reference.
t=(// Shorten escapes that represent two symbols, of which at least one is
// `<>"'&`.
t=t.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;")).replace(l,(function(e){// Note: there is no need to check `has(encodeMap, string)` here.
return"&"+f[e]+";"}))):i||(// Encode `<>"'&` using hexadecimal escapes, now that they’re not handled
// using named character references.
t=t.replace(p,h)),t.replace(s,(function(e){// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
var t=e.charCodeAt(0),r=e.charCodeAt(1);return a(1024*(t-55296)+r-56320+65536)})).replace(c,h)};// All ASCII symbols (not just printable ASCII) except those listed in the
// first column of the overrides table.
// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides
// Expose default options (so they can be overridden globally).
C.options={allowUnsafeSymbols:0,encodeEverything:0,strict:0,useNamedReferences:0,decimal:0};var k=function e(t,r){var n=(r=x(r,e.options)).strict;return n&&d.test(t)&&D("malformed character reference"),t.replace(m,(function(e,t,o,i,a,s,u,c,l){var f,p,h,d,g,m;return t?y[g=t]:o?(// Decode named character references without trailing `;`, e.g. `&amp`.
// This is only a parse error if it gets converted to `&`, or if it is
// followed by `=` in an attribute context.
g=o,(m=i)&&r.isAttributeValue?(n&&"="==m&&D("`&` did not start a character reference"),e):(n&&D("named character reference was not terminated by a semicolon"),v[g]+(m||""))):a?(// Decode decimal escapes, e.g. `&#119558;`.
h=a,p=s,n&&!p&&D("character reference was not terminated by a semicolon"),f=parseInt(h,10),S(f,n)):u?(// Decode hexadecimal escapes, e.g. `&#x1D306;`.
d=u,p=c,n&&!p&&D("character reference was not terminated by a semicolon"),f=parseInt(d,16),S(f,n)):(// If we’re still here, `if ($7)` is implied; it’s an ambiguous
// ampersand for sure. https://mths.be/notes/ambiguous-ampersands
n&&D("named character reference was not terminated by a semicolon"),e)}))};// Expose default options (so they can be overridden globally).
k.options={isAttributeValue:0,strict:0};var O={version:"1.2.0",encode:C,decode:k,escape:function(e){return e.replace(p,(function(e){// Note: there is no need to check `has(escapeMap, $0)` here.
return h[e]}))},unescape:k};/*--------------------------------------------------------------------------*/ // Some AMD build optimizers, like r.js, check for specific condition patterns
// like the following:
if(o&&!o.nodeType)if(i)// in Node.js, io.js, or RingoJS v0.8.0+
i.exports=O;else// in Narwhal or RingoJS v0.7.0-
for(var R in O)T(O,R)&&(o[R]=O[R]);else// in Rhino or a web browser
n.he=O}(e)})),nh=Object.prototype.toString,oh=function(e){var t=nh.call(e),r="[object Arguments]"===t;return r||(r="[object Array]"!==t&&null!==e&&"object"===qo(e)&&"number"==typeof e.length&&e.length>=0&&"[object Function]"===nh.call(e.callee)),r};if(!Object.keys){// modified from https://github.com/es-shims/es5-shim
var ih=Object.prototype.hasOwnProperty,ah=Object.prototype.toString,sh=oh,uh=Object.prototype.propertyIsEnumerable,ch=!uh.call({toString:null},"toString"),lh=uh.call((function(){}),"prototype"),fh=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],ph=function(e){var t=e.constructor;return t&&t.prototype===e},hh={$applicationCache:1,$console:1,$external:1,$frame:1,$frameElement:1,$frames:1,$innerHeight:1,$innerWidth:1,$onmozfullscreenchange:1,$onmozfullscreenerror:1,$outerHeight:1,$outerWidth:1,$pageXOffset:1,$pageYOffset:1,$parent:1,$scrollLeft:1,$scrollTop:1,$scrollX:1,$scrollY:1,$self:1,$webkitIndexedDB:1,$webkitStorageInfo:1,$window:1},dh=function(){/* global window */if("undefined"==typeof window)return 0;for(var e in window)try{if(!hh["$"+e]&&ih.call(window,e)&&null!==window[e]&&"object"===qo(window[e]))try{ph(window[e])}catch(e){return 1}}catch(e){return 1}return 0}();th=function(e){var t=null!==e&&"object"===qo(e),r="[object Function]"===ah.call(e),n=sh(e),o=t&&"[object String]"===ah.call(e),i=[];if(!t&&!r&&!n)throw new TypeError("Object.keys called on a non-object");var a=lh&&r;if(o&&e.length>0&&!ih.call(e,0))for(var s=0;s<e.length;++s)i.push(String(s));if(n&&e.length>0)for(var u=0;u<e.length;++u)i.push(String(u));else for(var c in e)a&&"prototype"===c||!ih.call(e,c)||i.push(String(c));if(ch)for(var l=function(e){/* global window */if("undefined"==typeof window||!dh)return ph(e);try{return ph(e)}catch(e){return 0}}(e),f=0;f<fh.length;++f)l&&"constructor"===fh[f]||!ih.call(e,fh[f])||i.push(fh[f]);return i}}var gh=th,mh=Array.prototype.slice,yh=Object.keys,vh=yh?function(e){return yh(e)}:gh,bh=Object.keys;vh.shim=function(){return Object.keys?function(){// Safari 5.0 bug
var e=Object.keys(arguments);return e&&e.length===arguments.length}(1,2)||(Object.keys=function(e){// eslint-disable-line func-name-matching
return oh(e)?bh(mh.call(e)):bh(e)}):Object.keys=vh,Object.keys||vh};var wh=vh,Eh="function"==typeof Symbol&&"symbol"===qo(Symbol("foo")),Ah=Object.prototype.toString,Th=Array.prototype.concat,xh=Object.defineProperty,Sh=xh&&function(){var e={};try{// eslint-disable-next-line no-unused-vars, no-restricted-syntax
for(var t in xh(e,"x",{enumerable:0,value:e}),e)// jscs:ignore disallowUnusedVariables
return 0;return e.x===e}catch(e){/* this is IE 8. */return 0}}(),_h=function(e,t,r,n){var o;(!(t in e)||"function"==typeof(o=n)&&"[object Function]"===Ah.call(o)&&n())&&(Sh?xh(e,t,{configurable:1,enumerable:0,value:r,writable:1}):e[t]=r)},Nh=function(e,t){var r=arguments.length>2?arguments[2]:{},n=wh(t);Eh&&(n=Th.call(n,Object.getOwnPropertySymbols(t)));for(var o=0;o<n.length;o+=1)_h(e,n[o],t[n[o]],r[n[o]])};Nh.supportsDescriptors=!!Sh;var Dh=Nh,Ch="Function.prototype.bind called on incompatible ",kh=Array.prototype.slice,Oh=Object.prototype.toString,Rh=Function.prototype.bind||function(e){var t=this;if("function"!=typeof t||"[object Function]"!==Oh.call(t))throw new TypeError(Ch+t);for(var r,n=kh.call(arguments,1),o=function(){if(this instanceof r){var o=t.apply(this,n.concat(kh.call(arguments)));return Object(o)===o?o:this}return t.apply(e,n.concat(kh.call(arguments)))},i=Math.max(0,t.length-n.length),a=[],s=0;s<i;s++)a.push("$"+s);if(r=Function("binder","return function ("+a.join(",")+"){ return binder.apply(this,arguments); }")(o),t.prototype){var u=function(){};u.prototype=t.prototype,r.prototype=new u,u.prototype=null}return r},Lh=function(e){return null!=e},qh=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return 0;if("symbol"===qo(Symbol.iterator))return 1;var e={},t=Symbol("test"),r=Object(t);if("string"==typeof t)return 0;if("[object Symbol]"!==Object.prototype.toString.call(t))return 0;if("[object Symbol]"!==Object.prototype.toString.call(r))return 0;// temp disabled per https://github.com/ljharb/object.assign/issues/17
// if (sym instanceof Symbol) { return false; }
// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
// if (!(symObj instanceof Symbol)) { return false; }
// if (typeof Symbol.prototype.toString !== 'function') { return false; }
// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }
for(t in e[t]=42,e)return 0;// eslint-disable-line no-restricted-syntax
if("function"==typeof Object.keys&&0!==Object.keys(e).length)return 0;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return 0;var n=Object.getOwnPropertySymbols(e);if(1!==n.length||n[0]!==t)return 0;if(!Object.prototype.propertyIsEnumerable.call(e,t))return 0;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(e,t);if(42!==o.value||1!=o.enumerable)return 0}return 1}(),Ih=Object,Bh=Rh.call(Function.call,Array.prototype.push),Ph=Rh.call(Function.call,Object.prototype.propertyIsEnumerable),jh=qh?Object.getOwnPropertySymbols:null,Fh=function(e,t){if(!Lh(e))throw new TypeError("target must be an object");var r,n,o,i,a,s,u,c=Ih(e);for(r=1;r<arguments.length;++r){n=Ih(arguments[r]),i=wh(n);var l=qh&&(Object.getOwnPropertySymbols||jh);if(l)for(a=l(n),o=0;o<a.length;++o)u=a[o],Ph(n,u)&&Bh(i,u);for(o=0;o<i.length;++o)s=n[u=i[o]],Ph(n,u)&&(c[u]=s)}return c},Uh=Zp.onFreeze,Vh=Object.preventExtensions,Mh=s((function(){Vh(1)}));// `Object.preventExtensions` method
// https://tc39.github.io/ecma262/#sec-object.preventextensions
qe({target:"Object",stat:1,forced:Mh,sham:!Kp},{preventExtensions:function(e){return Vh&&b(e)?Vh(Uh(e)):e}});var Hh=function(){return Object.assign?function(){if(!Object.assign)return 0;// v8, specifically in node 4.x, has a bug with incorrect property enumeration order
// note: this does not detect the bug unless there's 20 characters
for(var e="abcdefghijklmnopqrst",t=e.split(""),r={},n=0;n<t.length;++n)r[t[n]]=t[n];var o=Object.assign({},r),i="";for(var a in o)i+=a;return e!==i}()||function(){if(!Object.assign||!Object.preventExtensions)return 0;// Firefox 37 still has "pending exception" logic in its Object.assign implementation,
// which is 72% slower than our shim, and Firefox 40's native implementation.
var e=Object.preventExtensions({1:2});try{Object.assign(e,"xy")}catch(t){return"y"===e[1]}return 0}()?Fh:Object.assign:Fh},zh=Hh();Dh(zh,{getPolyfill:Hh,implementation:Fh,shim:function(){var e=Hh();return Dh(Object,{assign:e},{assign:function(){return Object.assign!==e}}),e}});var Gh=zh,Yh=r((function(e,t){
/**
	   * Various utility functions used throughout Mocha's codebase.
	   * @module utils
	   */
/**
	   * Module dependencies.
	   */
var r=t.assign=Gh.getPolyfill();
/**
	   * Inherit the prototype methods from one constructor into another.
	   *
	   * @param {function} ctor - Constructor function which needs to inherit the
	   *     prototype.
	   * @param {function} superCtor - Constructor function to inherit prototype from.
	   * @throws {TypeError} if either constructor is null, or if super constructor
	   *     lacks a prototype.
	   */
/**
	   * If a value could have properties, and has none, this function is called,
	   * which returns a string representation of the empty value.
	   *
	   * Functions w/ no properties return `'[Function]'`
	   * Arrays w/ length === 0 return `'[]'`
	   * Objects w/ no properties return `'{}'`
	   * All else: return result of `value.toString()`
	   *
	   * @private
	   * @param {*} value The value to inspect.
	   * @param {string} typeHint The type of the value
	   * @returns {string}
	   */
function n(e,t){switch(t){case"function":return"[Function]";case"object":return"{}";case"array":return"[]";default:return e.toString()}}
/**
	   * Takes some variable and asks `Object.prototype.toString()` what it thinks it
	   * is.
	   *
	   * @private
	   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString
	   * @param {*} value The value to test.
	   * @returns {string} Computed type
	   * @example
	   * type({}) // 'object'
	   * type([]) // 'array'
	   * type(1) // 'number'
	   * type(false) // 'boolean'
	   * type(Infinity) // 'number'
	   * type(null) // 'null'
	   * type(new Date()) // 'date'
	   * type(/foo/) // 'regexp'
	   * type('type') // 'string'
	   * type(global) // 'global'
	   * type(new String('foo') // 'object'
	   */t.inherits=cl.inherits,
/**
	   * Escape special characters in the given string of html.
	   *
	   * @private
	   * @param  {string} html
	   * @return {string}
	   */
t.escape=function(e){return rh.encode(String(e),{useNamedReferences:0})},
/**
	   * Test if the given obj is type of string.
	   *
	   * @private
	   * @param {Object} obj
	   * @return {boolean}
	   */
t.isString=function(e){return"string"==typeof e},
/**
	   * Compute a slug from the given `str`.
	   *
	   * @private
	   * @param {string} str
	   * @return {string}
	   */
t.slug=function(e){return e.toLowerCase().replace(/\s+/g,"-").replace(/[^-\w]/g,"").replace(/-{2,}/g,"-")},
/**
	   * Strip the function definition from `str`, and re-indent for pre whitespace.
	   *
	   * @param {string} str
	   * @return {string}
	   */
t.clean=function(e){var t=(e=e.replace(/\r\n?|[\n\u2028\u2029]/g,"\n").replace(/^\uFEFF/,"").replace(/^function(?:\s*|\s+[^(]*)\([^)]*\)\s*\{((?:.|\n)*?)\s*\}$|^\([^)]*\)\s*=>\s*(?:\{((?:.|\n)*?)\s*\}|((?:.|\n)*))$/,"$1$2$3")).match(/^\n?( *)/)[1].length,r=e.match(/^\n?(\t*)/)[1].length,n=new RegExp("^\n?"+(r?"\t":" ")+"{"+(r||t)+"}","gm");return(e=e.replace(n,"")).trim()};var o=t.type=function(e){return void 0===e?"undefined":null===e?"null":Oc(e)?"buffer":Object.prototype.toString.call(e).replace(/^\[.+\s(.+?)]$/,"$1").toLowerCase()};
/**
	   * Stringify `value`. Different behavior depending on type of value:
	   *
	   * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.
	   * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.
	   * - If `value` is an *empty* object, function, or array, return result of function
	   *   {@link emptyRepresentation}.
	   * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of
	   *   JSON.stringify().
	   *
	   * @private
	   * @see exports.type
	   * @param {*} value
	   * @return {string}
	   */
/**
	   * like JSON.stringify but more sense.
	   *
	   * @private
	   * @param {Object}  object
	   * @param {number=} spaces
	   * @param {number=} depth
	   * @returns {*}
	   */
function i(e,t,r){if(void 0===t)// primitive types
return l(e);var n=t*(r=r||1),a=Array.isArray(e)?"[":"{",s=Array.isArray(e)?"]":"}",u="number"==typeof e.length?e.length:Object.keys(e).length;// `.repeat()` polyfill
function c(e,t){return new Array(t).join(e)}function l(e){switch(o(e)){case"null":case"undefined":e="["+e+"]";break;case"array":case"object":e=i(e,t,r+1);break;case"boolean":case"regexp":case"symbol":case"number":e=0===e&&1/e==-1/0?"-0":e.toString();break;case"date":var n=isNaN(e.getTime())?e.toString():e.toISOString();e="[Date: "+n+"]";break;case"buffer":var a=e.toJSON();// Based on the toJSON result
e="[Buffer: "+i(a=a.data&&a.type?a.data:a,2,r+1)+"]";break;default:e="[Function]"===e||"[Circular]"===e?e:JSON.stringify(e);// string
}return e}for(var f in e)Object.prototype.hasOwnProperty.call(e,f)&&(--u,a+="\n "+c(" ",n)+(Array.isArray(e)?"":'"'+f+'": ')+// key
l(e[f])+(// value
u?",":""));return a+(// [], {}
1!==a.length?"\n"+c(" ",--n)+s:s)}
/**
	   * Return a new Thing that has the keys in sorted order. Recursive.
	   *
	   * If the Thing...
	   * - has already been seen, return string `'[Circular]'`
	   * - is `undefined`, return string `'[undefined]'`
	   * - is `null`, return value `null`
	   * - is some other primitive, return the value
	   * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method
	   * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.
	   * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`
	   *
	   * @private
	   * @see {@link exports.stringify}
	   * @param {*} value Thing to inspect.  May or may not have properties.
	   * @param {Array} [stack=[]] Stack of seen values
	   * @param {string} [typeHint] Type hint
	   * @return {(Object|Array|Function|string|undefined)}
	   */
/**
	   * process.emitWarning or a polyfill
	   * @see https://nodejs.org/api/process.html#process_process_emitwarning_warning_options
	   * @ignore
	   */
function a(e,t){Dr.emitWarning?Dr.emitWarning(e,t):gr((function(){console.warn(t+": "+e)}))}
/**
	   * Show a deprecation warning. Each distinct message is only displayed once.
	   * Ignores empty messages.
	   *
	   * @param {string} [msg] - Warning to print
	   * @private
	   */t.stringify=function(e){var r=o(e);if(!~["object","array","function"].indexOf(r)){if("buffer"===r){var a=Ku.prototype.toJSON.call(e);// Based on the toJSON result
return i(a.data&&a.type?a.data:a,2).replace(/,(\n|$)/g,"$1")}// IE7/IE8 has a bizarre String constructor; needs to be coerced
// into an array and back to obj.
if("string"!==r||"object"!==qo(e))return i(e);e=e.split("").reduce((function(e,t,r){return e[r]=t,e}),{}),r="object"}for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s))return i(t.canonicalize(e,null,r),2).replace(/,(\n|$)/g,"$1");return n(e,r)},t.canonicalize=function(e,r,i){var a,s;/* eslint-disable no-unused-vars */function u(e,t){r.push(e),t(),r.pop()}if(/* eslint-enable no-unused-vars */i=i||o(e),-1!==(r=r||[]).indexOf(e))return"[Circular]";switch(i){case"undefined":case"buffer":case"null":a=e;break;case"array":u(e,(function(){a=e.map((function(e){return t.canonicalize(e,r)}))}));break;case"function":/* eslint-disable guard-for-in */for(s in e){a={};break}/* eslint-enable guard-for-in */if(!a){a=n(e,i);break}/* falls through */case"object":a=a||{},u(e,(function(){Object.keys(e).sort().forEach((function(n){a[n]=t.canonicalize(e[n],r)}))}));break;case"date":case"number":case"regexp":case"boolean":case"symbol":a=e;break;default:a=e+""}return a},t.deprecate=function e(t){(t=String(t))&&!e.cache[t]&&(e.cache[t]=1,a(t,"DeprecationWarning"))},t.deprecate.cache={},
/**
	   * Show a generic warning.
	   * Ignores empty messages.
	   *
	   * @param {string} [msg] - Warning to print
	   * @private
	   */
t.warn=function(e){e&&a(e)},
/**
	   * @summary
	   * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)
	   * @description
	   * When invoking this function you get a filter function that get the Error.stack as an input,
	   * and return a prettify output.
	   * (i.e: strip Mocha and internal node functions from stack trace).
	   * @returns {Function}
	   */
t.stackTraceFilter=function(){// TODO: Replace with `process.browser`
var e,r="undefined"==typeof document?{node:1}:{browser:1},n=Cp.sep;return r.node?e=t.cwd()+n:(e=("undefined"==typeof location?window.location:location).href.replace(/\/[^/]*$/,"/"),n="/"),function(t){return(t=(t=t.split("\n")).reduce((function(t,o){return function(e){return~e.indexOf("node_modules"+n+"mocha"+n)||~e.indexOf(n+"mocha.js")||~e.indexOf(n+"mocha.min.js")}(o)||r.node&&function(e){return~e.indexOf("(timers.js:")||~e.indexOf("(events.js:")||~e.indexOf("(node.js:")||~e.indexOf("(module.js:")||~e.indexOf("GeneratorFunctionPrototype.next (native)")||0}(o)||(// Clean up cwd(absolute)
/:\d+:\d+\)?$/.test(o)&&(o=o.replace("("+e,"(")),t.push(o)),t}),[])).join("\n")}},
/**
	   * Crude, but effective.
	   * @public
	   * @param {*} value
	   * @returns {boolean} Whether or not `value` is a Promise
	   */
t.isPromise=function(e){return"object"===qo(e)&&null!==e&&"function"==typeof e.then},
/**
	   * Clamps a numeric value to an inclusive range.
	   *
	   * @param {number} value - Value to be clamped.
	   * @param {numer[]} range - Two element array specifying [min, max] range.
	   * @returns {number} clamped value
	   */
t.clamp=function(e,t){return Math.min(Math.max(e,t[0]),t[1])},
/**
	   * Single quote text by combining with undirectional ASCII quotation marks.
	   *
	   * @description
	   * Provides a simple means of markup for quoting text to be used in output.
	   * Use this to quote names of variables, methods, and packages.
	   *
	   * <samp>package 'foo' cannot be found</samp>
	   *
	   * @private
	   * @param {string} str - Value to be quoted.
	   * @returns {string} quoted value
	   * @example
	   * sQuote('n') // => 'n'
	   */
t.sQuote=function(e){return"'"+e+"'"},
/**
	   * Double quote text by combining with undirectional ASCII quotation marks.
	   *
	   * @description
	   * Provides a simple means of markup for quoting text to be used in output.
	   * Use this to quote names of datatypes, classes, pathnames, and strings.
	   *
	   * <samp>argument 'value' must be "string" or "number"</samp>
	   *
	   * @private
	   * @param {string} str - Value to be quoted.
	   * @returns {string} quoted value
	   * @example
	   * dQuote('number') // => "number"
	   */
t.dQuote=function(e){return'"'+e+'"'},
/**
	   * It's a noop.
	   * @public
	   */
t.noop=function(){},
/**
	   * Creates a map-like object.
	   *
	   * @description
	   * A "map" is an object with no prototype, for our purposes. In some cases
	   * this would be more appropriate than a `Map`, especially if your environment
	   * doesn't support it. Recommended for use in Mocha's public APIs.
	   *
	   * @public
	   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map|MDN:Map}
	   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Custom_and_Null_objects|MDN:Object.create - Custom objects}
	   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign|MDN:Object.assign}
	   * @param {...*} [obj] - Arguments to `Object.assign()`.
	   * @returns {Object} An object with no prototype, having `...obj` properties
	   */
t.createMap=function(e){return r.apply(null,[Object.create(null)].concat(Array.prototype.slice.call(arguments)))},
/**
	   * Creates a read-only map-like object.
	   *
	   * @description
	   * This differs from {@link module:utils.createMap createMap} only in that
	   * the argument must be non-empty, because the result is frozen.
	   *
	   * @see {@link module:utils.createMap createMap}
	   * @param {...*} [obj] - Arguments to `Object.assign()`.
	   * @returns {Object} A frozen object with no prototype, having `...obj` properties
	   * @throws {TypeError} if argument is not a non-empty object.
	   */
t.defineConstants=function(e){if("object"!==o(e)||!Object.keys(e).length)throw new TypeError("Invalid argument; expected a non-empty object");return Object.freeze(t.createMap(e))},
/**
	   * Whether current version of Node support ES modules
	   *
	   * @description
	   * Versions prior to 10 did not support ES Modules, and version 10 has an old incompatible version of ESM.
	   * This function returns whether Node.JS has ES Module supports that is compatible with Mocha's needs,
	   * which is version >=12.11.
	   *
	   * @param {partialSupport} whether the full Node.js ESM support is available (>= 12) or just something that supports the runtime (>= 10)
	   *
	   * @returns {Boolean} whether the current version of Node.JS supports ES Modules in a way that is compatible with Mocha
	   */
t.supportsEsModules=function(e){if(!t.isBrowser()&&Dr.versions&&Dr.versions.node){var r=Dr.versions.node.split("."),n=+r[0],o=+r[1];return e?n>=10:n>=13||12===n&&o>=11}},
/**
	   * Returns current working directory
	   *
	   * Wrapper around `process.cwd()` for isolation
	   * @private
	   */
t.cwd=function(){return Dr.cwd()},
/**
	   * Returns `true` if Mocha is running in a browser.
	   * Checks for `process.browser`.
	   * @returns {boolean}
	   * @private
	   */
t.isBrowser=function(){return Boolean(1)}})),Wh=Object.freeze({__proto__:null,default:{}}),$h=
/**
	 * Initialize a new `Pending` error with the given message.
	 *
	 * @param {string} message
	 */
function(e){this.message=e}
/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 */,Jh=function(e){
/**
	  * Selects a color for a debug namespace
	  * @param {String} namespace The namespace string for the for the debug instance to be colored
	  * @return {Number|String} An ANSI color code for the given namespace
	  * @api private
	  */
function t(e){for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[Math.abs(t)%r.colors.length]}
/**
	  * Create a debugger with the given `namespace`.
	  *
	  * @param {String} namespace
	  * @return {Function}
	  * @api public
	  */
function r(e){var i;function a(){// Disabled?
if(a.enabled){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var o=a,s=Number(new Date),u=s-(i||s);// Set `diff` timestamp
o.diff=u,o.prev=i,o.curr=s,i=s,t[0]=r.coerce(t[0]),"string"!=typeof t[0]&&// Anything else let's inspect with %O
t.unshift("%O");// Apply any `formatters` transformations
var c=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,(function(e,n){// If we encounter an escaped % then don't increase the array index
if("%%"===e)return e;c++;var i=r.formatters[n];if("function"==typeof i){var a=t[c];e=i.call(o,a),// Now we need to remove `args[index]` since it's inlined in the `format`
t.splice(c,1),c--}return e})),// Apply env-specific formatting (colors, etc.)
r.formatArgs.call(o,t);var l=o.log||r.log;l.apply(o,t)}}return a.namespace=e,a.enabled=r.enabled(e),a.useColors=r.useColors(),a.color=t(e),a.destroy=n,a.extend=o,// Debug.formatArgs = formatArgs;
// debug.rawLog = rawLog;
// env-specific initialization logic for debug instances
"function"==typeof r.init&&r.init(a),r.instances.push(a),a}function n(){var e=r.instances.indexOf(this);return-1!==e?(r.instances.splice(e,1),1):0}function o(e,t){return r(this.namespace+(void 0===t?":":t)+e)}
/**
	  * Enables a debug mode by namespaces. This can include modes
	  * separated by a colon and wildcards.
	  *
	  * @param {String} namespaces
	  * @api public
	  */return r.debug=r,r.default=r,r.coerce=
/**
	  * Coerce `val`.
	  *
	  * @param {Mixed} val
	  * @return {Mixed}
	  * @api private
	  */
function(e){return e instanceof Error?e.stack||e.message:e},r.disable=
/**
	  * Disable debug output.
	  *
	  * @api public
	  */
function(){r.enable("")}
/**
	  * Returns true if the given mode name is enabled, false otherwise.
	  *
	  * @param {String} name
	  * @return {Boolean}
	  * @api public
	  */,r.enable=function(e){var t;r.save(e),r.names=[],r.skips=[];var n=("string"==typeof e?e:"").split(/[\s,]+/),o=n.length;for(t=0;t<o;t++)n[t]&&("-"===(e=n[t].replace(/\*/g,".*?"))[0]?r.skips.push(new RegExp("^"+e.substr(1)+"$")):r.names.push(new RegExp("^"+e+"$")));for(t=0;t<r.instances.length;t++){var i=r.instances[t];i.enabled=r.enabled(i.namespace)}},r.enabled=function(e){if("*"===e[e.length-1])return 1;var t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return 0;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return 1;return 0},r.humanize=$p,Object.keys(e).forEach((function(t){r[t]=e[t]})),
/**
	  * Active `debug` instances.
	  */
r.instances=[],
/**
	  * The currently active debug mode names, and names to skip.
	  */
r.names=[],r.skips=[],
/**
	  * Map of special "%n" handling functions, for the debug "format" argument.
	  *
	  * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	  */
r.formatters={},r.selectColor=t,r.enable(r.load()),r},Kh=r((function(e,t){function r(e){return(r="function"==typeof Symbol&&"symbol"===qo(Symbol.iterator)?function(e){return qo(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":qo(e)})(e)}/* eslint-env browser */
/**
	   * This is the web browser implementation of `debug()`.
	   */t.log=
/**
	   * Invokes `console.log()` when available.
	   * No-op when `console.log` is not a "function".
	   *
	   * @api public
	   */
function(){var e;// This hackery is required for IE8/9, where
// the `console.log` function doesn't have 'apply'
return"object"===("undefined"==typeof console?"undefined":r(console))&&console.log&&(e=console).log.apply(e,arguments)}
/**
	   * Save `namespaces`.
	   *
	   * @param {String} namespaces
	   * @api private
	   */,t.formatArgs=
/**
	   * Colorize log arguments if enabled.
	   *
	   * @api public
	   */
function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),this.useColors){var r="color: "+this.color;t.splice(1,0,r,"color: inherit");// The final "%c" is somewhat tricky, because there could be other
// arguments passed either before or after the %c, so we need to
// figure out the correct index to insert the CSS into
var n=0,o=0;t[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(n++,"%c"===e&&(// We only are interested in the *last* %c
// (the user may have provided their own)
o=n))})),t.splice(o,0,r)}},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){// Swallow
// XXX (@Qix-) should we be logging these?
}}
/**
	   * Load `namespaces`.
	   *
	   * @return {String} returns the previously persisted debug modes
	   * @api private
	   */,t.load=function(){var e;try{e=t.storage.getItem("debug")}catch(e){}// Swallow
// XXX (@Qix-) should we be logging these?
// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
return!e&&void 0!==Dr&&"env"in Dr&&(e=Dr.env.DEBUG),e}
/**
	   * Localstorage attempts to return the localstorage.
	   *
	   * This is necessary because safari throws
	   * when a user disables cookies/localstorage
	   * and you attempt to access it.
	   *
	   * @return {LocalStorage}
	   * @api private
	   */,t.useColors=
/**
	   * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	   * and the Firebug extension (any Firefox version) are known
	   * to support "%c" CSS customizations.
	   *
	   * TODO: add a `localStorage` variable to explicitly enable/disable colors
	   */
// eslint-disable-next-line complexity
function(){// NB: In an Electron preload script, document will be defined but not fully
// initialized. Since we know we're in Chrome, we'll just detect this case
// explicitly
return"undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs)?1:// Internet Explorer and Edge do not support colors.
"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?0:"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||// Is firebug? http://stackoverflow.com/a/398120/376773
"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||// Is firefox >= v31?
// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||// Double check webkit in userAgent just in case we are in a worker
"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
// The Browser also has localStorage in the global context.
return localStorage}catch(e){// Swallow
// XXX (@Qix-) should we be logging these?
}}(),
/**
	   * Colors.
	   */
t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=Jh(t),
/**
	   * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	   */
e.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}})),Zh=cl.format,Qh={
/**
	   * An unrecoverable error.
	   */
FATAL:"ERR_MOCHA_FATAL",
/**
	   * The type of an argument to a function call is invalid
	   */
INVALID_ARG_TYPE:"ERR_MOCHA_INVALID_ARG_TYPE",
/**
	   * The value of an argument to a function call is invalid
	   */
INVALID_ARG_VALUE:"ERR_MOCHA_INVALID_ARG_VALUE",
/**
	   * Something was thrown, but it wasn't an `Error`
	   */
INVALID_EXCEPTION:"ERR_MOCHA_INVALID_EXCEPTION",
/**
	   * An interface (e.g., `Mocha.interfaces`) is unknown or invalid
	   */
INVALID_INTERFACE:"ERR_MOCHA_INVALID_INTERFACE",
/**
	   * A reporter (.e.g, `Mocha.reporters`) is unknown or invalid
	   */
INVALID_REPORTER:"ERR_MOCHA_INVALID_REPORTER",
/**
	   * `done()` was called twice in a `Test` or `Hook` callback
	   */
MULTIPLE_DONE:"ERR_MOCHA_MULTIPLE_DONE",
/**
	   * No files matched the pattern provided by the user
	   */
NO_FILES_MATCH_PATTERN:"ERR_MOCHA_NO_FILES_MATCH_PATTERN",
/**
	   * Known, but unsupported behavior of some kind
	   */
UNSUPPORTED:"ERR_MOCHA_UNSUPPORTED",
/**
	   * Invalid state transition occurring in `Mocha` instance
	   */
INSTANCE_ALREADY_RUNNING:"ERR_MOCHA_INSTANCE_ALREADY_RUNNING",
/**
	   * Invalid state transition occurring in `Mocha` instance
	   */
INSTANCE_ALREADY_DISPOSED:"ERR_MOCHA_INSTANCE_ALREADY_DISPOSED",
/**
	   * Use of `only()` w/ `--forbid-only` results in this error.
	   */
FORBIDDEN_EXCLUSIVITY:"ERR_MOCHA_FORBIDDEN_EXCLUSIVITY"};
/**
	 * Creates an error object to be thrown when the reporter specified in the options was not found.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} reporter - User-specified reporter value.
	 * @returns {Error} instance detailing the error condition
	 */
function Xh(e,t){var r=new TypeError(e);return r.code=Qh.INVALID_REPORTER,r.reporter=t,r}
/**
	 * Creates an error object to be thrown when the interface specified in the options was not found.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} ui - User-specified interface value.
	 * @returns {Error} instance detailing the error condition
	 */function ed(e,t){var r=new Error(e);return r.code=Qh.INVALID_INTERFACE,r.interface=t,r}
/**
	 * Creates an error object to be thrown when a behavior, option, or parameter is unsupported.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @returns {Error} instance detailing the error condition
	 */
/**
	 * Creates an error object to be thrown when an argument did not use the supported type
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} argument - Argument name.
	 * @param {string} expected - Expected argument datatype.
	 * @returns {Error} instance detailing the error condition
	 */
function td(e,t,r){var n=new TypeError(e);return n.code=Qh.INVALID_ARG_TYPE,n.argument=t,n.expected=r,n.actual=qo(t),n}
/**
	 * Creates an error object to be thrown when an argument did not use the supported value
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} argument - Argument name.
	 * @param {string} value - Argument value.
	 * @param {string} [reason] - Why value is invalid.
	 * @returns {Error} instance detailing the error condition
	 */var rd={createInvalidArgumentTypeError:td,createInvalidArgumentValueError:function(e,t,r,n){var o=new TypeError(e);return o.code=Qh.INVALID_ARG_VALUE,o.argument=t,o.value=r,o.reason=void 0!==n?n:"is invalid",o}
/**
	 * Creates an error object to be thrown when an exception was caught, but the `Error` is falsy or undefined.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @returns {Error} instance detailing the error condition
	 */,createInvalidExceptionError:function(e,t){var r=new Error(e);return r.code=Qh.INVALID_EXCEPTION,r.valueType=qo(t),r.value=t,r}
/**
	 * Creates an error object to be thrown when an unrecoverable error occurs.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @returns {Error} instance detailing the error condition
	 */,createInvalidInterfaceError:ed,createInvalidReporterError:Xh,createMissingArgumentError:
/**
	 * Creates an error object to be thrown when an argument is missing.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} argument - Argument name.
	 * @param {string} expected - Expected argument datatype.
	 * @returns {Error} instance detailing the error condition
	 */
function(e,t,r){return td(e,t,r)},createNoFilesMatchPatternError:
/**
	 * Creates an error object to be thrown when no files to be tested could be found using specified pattern.
	 *
	 * @public
	 * @param {string} message - Error message to be displayed.
	 * @param {string} pattern - User-specified argument value.
	 * @returns {Error} instance detailing the error condition
	 */
function(e,t){var r=new Error(e);return r.code=Qh.NO_FILES_MATCH_PATTERN,r.pattern=t,r},createUnsupportedError:function(e){var t=new Error(e);return t.code=Qh.UNSUPPORTED,t},createInvalidPluginError:
/**
	 * Dynamically creates a plugin-type-specific error based on plugin type
	 * @param {string} message - Error message
	 * @param {"reporter"|"interface"} pluginType - Plugin type. Future: expand as needed
	 * @param {string} [pluginId] - Name/path of plugin, if any
	 * @throws When `pluginType` is not known
	 * @public
	 * @returns {Error}
	 */
function(e,t,r){switch(t){case"reporter":return Xh(e,r);case"interface":return ed(e,r);default:throw new Error('unknown pluginType "'+t+'"')}}
/**
	 * Creates an error object to be thrown when a mocha object's `run` method is executed while it is already disposed.
	 * @param {string} message The error message to be displayed.
	 * @param {boolean} cleanReferencesAfterRun the value of `cleanReferencesAfterRun`
	 * @param {Mocha} instance the mocha instance that throw this error
	 */,createMochaInstanceAlreadyDisposedError:function(e,t,r){var n=new Error(e);return n.code=Qh.INSTANCE_ALREADY_DISPOSED,n.cleanReferencesAfterRun=t,n.instance=r,n}
/**
	 * Creates an error object to be thrown when a mocha object's `run` method is called while a test run is in progress.
	 * @param {string} message The error message to be displayed.
	 */,createMochaInstanceAlreadyRunningError:function(e,t){var r=new Error(e);return r.code=Qh.INSTANCE_ALREADY_RUNNING,r.instance=t,r}
/*
	 * Creates an error object to be thrown when done() is called multiple times in a test
	 *
	 * @public
	 * @param {Runnable} runnable - Original runnable
	 * @param {Error} [originalErr] - Original error, if any
	 * @returns {Error} instance detailing the error condition
	 */,createFatalError:function(e,t){var r=new Error(e);return r.code=Qh.FATAL,r.valueType=qo(t),r.value=t,r},createMultipleDoneError:function(e,t){var r;try{r=Zh("<%s>",e.fullTitle()),e.parent.root&&(r+=" (of root suite)")}catch(t){r=Zh("<%s> (of unknown suite)",e.title)}var n=Zh("done() called multiple times in %s %s",e.type?e.type:"unknown runnable",r);e.file&&(n+=Zh(" of file %s",e.file)),t&&(n+=Zh("; in addition, done() received error: %s",t));var o=new Error(n);return o.code=Qh.MULTIPLE_DONE,o.valueType=qo(t),o.value=t,o}
/**
	 * Creates an error object to be thrown when `.only()` is used with
	 * `--forbid-only`.
	 * @public
	 * @param {Mocha} mocha - Mocha instance
	 * @returns {Error} Error with code {@link constants.FORBIDDEN_EXCLUSIVITY}
	 */,createForbiddenExclusivityError:function(e){var t=new Error(e.isWorker?"`.only` is not supported in parallel mode":"`.only` forbidden by --forbid-only");return t.code=Qh.FORBIDDEN_EXCLUSIVITY,t},constants:Qh},nd=Jr.EventEmitter,od=Kh("mocha:runnable"),id=rd.createInvalidExceptionError,ad=rd.createMultipleDoneError,sd=e.Date,ud=e.setTimeout,cd=e.clearTimeout,ld=Object.prototype.toString,fd=pd;
/**
	 * Initialize a new `Runnable` with the given `title` and callback `fn`.
	 *
	 * @class
	 * @extends external:EventEmitter
	 * @public
	 * @param {String} title
	 * @param {Function} fn
	 */
function pd(e,t){this.title=e,this.fn=t,this.body=(t||"").toString(),this.async=t&&t.length,this.sync=!this.async,this._timeout=2e3,this._slow=75,this._retries=-1,this.reset()}
/**
	 * Inherit from `EventEmitter.prototype`.
	 */Yh.inherits(pd,nd),
/**
	 * Resets the state initially or for a next run.
	 */
pd.prototype.reset=function(){this.timedOut=0,this._currentRetry=0,this.pending=0,delete this.state,delete this.err},
/**
	 * Get current timeout value in msecs.
	 *
	 * @private
	 * @returns {number} current timeout threshold value
	 */
/**
	 * @summary
	 * Set timeout threshold value (msecs).
	 *
	 * @description
	 * A string argument can use shorthand (e.g., "2s") and will be converted.
	 * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].
	 * If clamped value matches either range endpoint, timeouts will be disabled.
	 *
	 * @private
	 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}
	 * @param {number|string} ms - Timeout threshold value.
	 * @returns {Runnable} this
	 * @chainable
	 */
pd.prototype.timeout=function(e){if(!arguments.length)return this._timeout;"string"==typeof e&&(e=$p(e));// Clamp to range
var t=Math.pow(2,31)-1,r=[0,t];// see #1652 for reasoning
return(e=Yh.clamp(e,r))===r[0]||e===r[1]?this._timeout=0:this._timeout=e,od("timeout %d",this._timeout),this.timer&&this.resetTimeout(),this},
/**
	 * Set or get slow `ms`.
	 *
	 * @private
	 * @param {number|string} ms
	 * @return {Runnable|number} ms or Runnable instance.
	 */
pd.prototype.slow=function(e){return arguments.length&&void 0!==e?("string"==typeof e&&(e=$p(e)),od("slow %d",e),this._slow=e,this):this._slow},
/**
	 * Halt and mark as pending.
	 *
	 * @memberof Mocha.Runnable
	 * @public
	 */
pd.prototype.skip=function(){throw this.pending=1,new $h("sync skip; aborting execution")},
/**
	 * Check if this runnable or its parent suite is marked as pending.
	 *
	 * @private
	 */
pd.prototype.isPending=function(){return this.pending||this.parent&&this.parent.isPending()},
/**
	 * Return `true` if this Runnable has failed.
	 * @return {boolean}
	 * @private
	 */
pd.prototype.isFailed=function(){return!this.isPending()&&this.state===hd.STATE_FAILED},
/**
	 * Return `true` if this Runnable has passed.
	 * @return {boolean}
	 * @private
	 */
pd.prototype.isPassed=function(){return!this.isPending()&&this.state===hd.STATE_PASSED},
/**
	 * Set or get number of retries.
	 *
	 * @private
	 */
pd.prototype.retries=function(e){if(!arguments.length)return this._retries;this._retries=e},
/**
	 * Set or get current retry
	 *
	 * @private
	 */
pd.prototype.currentRetry=function(e){if(!arguments.length)return this._currentRetry;this._currentRetry=e},
/**
	 * Return the full title generated by recursively concatenating the parent's
	 * full title.
	 *
	 * @memberof Mocha.Runnable
	 * @public
	 * @return {string}
	 */
pd.prototype.fullTitle=function(){return this.titlePath().join(" ")},
/**
	 * Return the title path generated by concatenating the parent's title path with the title.
	 *
	 * @memberof Mocha.Runnable
	 * @public
	 * @return {string}
	 */
pd.prototype.titlePath=function(){return this.parent.titlePath().concat([this.title])},
/**
	 * Clear the timeout.
	 *
	 * @private
	 */
pd.prototype.clearTimeout=function(){cd(this.timer)},
/**
	 * Reset the timeout.
	 *
	 * @private
	 */
pd.prototype.resetTimeout=function(){var e=this,t=this.timeout();0!==t&&(this.clearTimeout(),this.timer=ud((function(){0!==e.timeout()&&(e.callback(e._timeoutError(t)),e.timedOut=1)}),t))},
/**
	 * Set or get a list of whitelisted globals for this test run.
	 *
	 * @private
	 * @param {string[]} globals
	 */
pd.prototype.globals=function(e){if(!arguments.length)return this._allowedGlobals;this._allowedGlobals=e},
/**
	 * Run the test and invoke `fn(err)`.
	 *
	 * @param {Function} fn
	 * @private
	 */
pd.prototype.run=function(e){var t,r=this,n=new sd,o=this.ctx,i=0;if(this.isPending())return e();// Sometimes the ctx exists, but it is not runnable
// finished
function a(o){var a=r.timeout();if(!r.timedOut){if(t)// called multiple times
return function(e){i||(i=1,r.emit("error",ad(r,e)))}(o);r.clearTimeout(),r.duration=new sd-n,t=1,!o&&r.duration>a&&a>0&&(o=r._timeoutError(a)),e(o)}}// for .resetTimeout() and Runner#uncaught()
if(o&&o.runnable&&o.runnable(this),this.callback=a,this.fn&&"function"!=typeof this.fn.call)a(new TypeError("A runnable must be passed a function as its second argument."));else// explicit async with `done` argument
if(this.async){this.resetTimeout(),// allows skip() to be used in an explicit async context
this.skip=function(){// halt execution, the uncaught handler will ignore the failure.
throw this.pending=1,a(),new $h("async skip; aborting execution")};try{!function(e){var t=e.call(o,(function(e){return e instanceof Error||"[object Error]"===ld.call(e)?a(e):e?"[object Object]"===Object.prototype.toString.call(e)?a(new Error("done() invoked with non-Error: "+JSON.stringify(e))):a(new Error("done() invoked with non-Error: "+e)):t&&Yh.isPromise(t)?a(new Error("Resolution method is overspecified. Specify a callback *or* return a Promise; not both.")):void a()}))}(this.fn)}catch(e){if(// handles async runnables which actually run synchronously
i=1,e instanceof $h)return;// done() is already called in this.skip()
if(this.allowUncaught)throw e;a(pd.toValueOrError(e))}}// sync or promise-returning
else try{!function(e){var t=e.call(o);if(t&&"function"==typeof t.then)r.resetTimeout(),t.then((function(){// Return null so libraries like bluebird do not warn about
// subsequently constructed Promises.
return a(),null}),(function(e){a(e||new Error("Promise rejected with no or falsy reason"))}));else{if(r.asyncOnly)return a(new Error("--async-only option in use without declaring `done()` or returning a promise"));a()}}(this.fn)}catch(e){if(i=1,e instanceof $h)return a();if(this.allowUncaught)throw e;a(pd.toValueOrError(e))}},
/**
	 * Instantiates a "timeout" error
	 *
	 * @param {number} ms - Timeout (in milliseconds)
	 * @returns {Error} a "timeout" error
	 * @private
	 */
pd.prototype._timeoutError=function(e){var t="Timeout of "+e+'ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves.';return this.file&&(t+=" ("+this.file+")"),new Error(t)};var hd=Yh.defineConstants(
/**
	 * {@link Runnable}-related constants.
	 * @public
	 * @memberof Runnable
	 * @readonly
	 * @static
	 * @alias constants
	 * @enum {string}
	 */
{
/**
	   * Value of `state` prop when a `Runnable` has failed
	   */
STATE_FAILED:"failed",
/**
	   * Value of `state` prop when a `Runnable` has passed
	   */
STATE_PASSED:"passed",
/**
	   * Value of `state` prop when a `Runnable` has been skipped by user
	   */
STATE_PENDING:"pending"});
/**
	 * Given `value`, return identity if truthy, otherwise create an "invalid exception" error and return that.
	 * @param {*} [value] - Value to return, if present
	 * @returns {*|Error} `value`, otherwise an `Error`
	 * @private
	 */pd.toValueOrError=function(e){return e||id("Runnable failed with falsy or undefined exception. Please throw an Error instead.",e)},pd.constants=hd;var dd=Je.some,gd=lt("some"),md=at("some");// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
qe({target:"Array",proto:1,forced:!gd||!md},{some:function(e/* , thisArg */){return dd(this,e,arguments.length>1?arguments[1]:void 0)}});var yd=Yh.inherits,vd=bd;
/**
	 * Expose `Hook`.
	 */
/**
	 * Initialize a new `Hook` with the given `title` and callback `fn`
	 *
	 * @class
	 * @extends Runnable
	 * @param {String} title
	 * @param {Function} fn
	 */
function bd(e,t){fd.call(this,e,t),this.type="hook"}
/**
	 * Inherit from `Runnable.prototype`.
	 */yd(bd,fd),
/**
	 * Resets the state for a next run.
	 */
bd.prototype.reset=function(){fd.prototype.reset.call(this),delete this._error},
/**
	 * Get or set the test `err`.
	 *
	 * @memberof Hook
	 * @public
	 * @param {Error} err
	 * @return {Error}
	 */
bd.prototype.error=function(e){if(!arguments.length)return e=this._error,this._error=null,e;this._error=e},
/**
	 * Returns an object suitable for IPC.
	 * Functions are represented by keys beginning with `$$`.
	 * @private
	 * @returns {Object}
	 */
bd.prototype.serialize=function(){return{$$isPending:this.isPending(),$$titlePath:this.titlePath(),ctx:{currentTest:{title:this.ctx&&this.ctx.currentTest&&this.ctx.currentTest.title}},parent:{root:this.parent.root,title:this.parent.title},title:this.title,type:this.type}};var wd=r((function(e,t){
/**
	   * Module dependencies.
	   * @private
	   */
var r=Jr.EventEmitter,n=Yh.inherits,o=Kh("mocha:suite"),i=rd.createInvalidArgumentTypeError;
/**
	   * Constructs a new `Suite` instance with the given `title`, `ctx`, and `isRoot`.
	   *
	   * @public
	   * @class
	   * @extends EventEmitter
	   * @see {@link https://nodejs.org/api/events.html#events_class_eventemitter|EventEmitter}
	   * @param {string} title - Suite title.
	   * @param {Context} parentContext - Parent context instance.
	   * @param {boolean} [isRoot=false] - Whether this is the root suite.
	   */
function a(e,t,r){if(!Yh.isString(e))throw i('Suite argument "title" must be a string. Received type "'+qo(e)+'"',"title","string");function n(){}this.title=e,n.prototype=t,this.ctx=new n,this.suites=[],this.tests=[],this.root=1==r,this.pending=0,this._retries=-1,this._beforeEach=[],this._beforeAll=[],this._afterEach=[],this._afterAll=[],this._timeout=2e3,this._slow=75,this._bail=0,this._onlyTests=[],this._onlySuites=[],this.reset(),this.on("newListener",(function(e){u[e]&&Yh.deprecate('Event "'+e+'" is deprecated.  Please let the Mocha team know about your use case: https://git.io/v6Lwm')}))}
/**
	   * Inherit from `EventEmitter.prototype`.
	   */e.exports=a,
/**
	   * Create a new `Suite` with the given `title` and parent `Suite`.
	   *
	   * @public
	   * @param {Suite} parent - Parent suite (required!)
	   * @param {string} title - Title
	   * @return {Suite}
	   */
a.create=function(e,t){var r=new a(t,e.ctx);return r.parent=e,t=r.fullTitle(),e.addSuite(r),r},n(a,r),
/**
	   * Resets the state initially or for a next run.
	   */
a.prototype.reset=function(){function e(e){e.reset()}this.delayed=0,this.suites.forEach(e),this.tests.forEach(e),this._beforeEach.forEach(e),this._afterEach.forEach(e),this._beforeAll.forEach(e),this._afterAll.forEach(e)},
/**
	   * Return a clone of this `Suite`.
	   *
	   * @private
	   * @return {Suite}
	   */
a.prototype.clone=function(){var e=new a(this.title);return o("clone"),e.ctx=this.ctx,e.root=this.root,e.timeout(this.timeout()),e.retries(this.retries()),e.slow(this.slow()),e.bail(this.bail()),e},
/**
	   * Set or get timeout `ms` or short-hand such as "2s".
	   *
	   * @private
	   * @todo Do not attempt to set value if `ms` is undefined
	   * @param {number|string} ms
	   * @return {Suite|number} for chaining
	   */
a.prototype.timeout=function(e){if(!arguments.length)return this._timeout;"string"==typeof e&&(e=$p(e));// Clamp to range
var t=Math.pow(2,31)-1,r=[0,t];return e=Yh.clamp(e,r),o("timeout %d",e),this._timeout=parseInt(e,10),this},
/**
	   * Set or get number of times to retry a failed test.
	   *
	   * @private
	   * @param {number|string} n
	   * @return {Suite|number} for chaining
	   */
a.prototype.retries=function(e){return arguments.length?(o("retries %d",e),this._retries=parseInt(e,10)||0,this):this._retries},
/**
	   * Set or get slow `ms` or short-hand such as "2s".
	   *
	   * @private
	   * @param {number|string} ms
	   * @return {Suite|number} for chaining
	   */
a.prototype.slow=function(e){return arguments.length?("string"==typeof e&&(e=$p(e)),o("slow %d",e),this._slow=e,this):this._slow},
/**
	   * Set or get whether to bail after first error.
	   *
	   * @private
	   * @param {boolean} bail
	   * @return {Suite|number} for chaining
	   */
a.prototype.bail=function(e){return arguments.length?(o("bail %s",e),this._bail=e,this):this._bail},
/**
	   * Check if this suite or its parent suite is marked as pending.
	   *
	   * @private
	   */
a.prototype.isPending=function(){return this.pending||this.parent&&this.parent.isPending()},
/**
	   * Generic hook-creator.
	   * @private
	   * @param {string} title - Title of hook
	   * @param {Function} fn - Hook callback
	   * @returns {Hook} A new hook
	   */
a.prototype._createHook=function(e,t){var r=new vd(e,t);return r.parent=this,r.timeout(this.timeout()),r.retries(this.retries()),r.slow(this.slow()),r.ctx=this.ctx,r.file=this.file,r},
/**
	   * Run `fn(test[, done])` before running tests.
	   *
	   * @private
	   * @param {string} title
	   * @param {Function} fn
	   * @return {Suite} for chaining
	   */
a.prototype.beforeAll=function(e,t){if(this.isPending())return this;"function"==typeof e&&(e=(t=e).name),e='"before all" hook'+(e?": "+e:"");var r=this._createHook(e,t);return this._beforeAll.push(r),this.emit(s.EVENT_SUITE_ADD_HOOK_BEFORE_ALL,r),this},
/**
	   * Run `fn(test[, done])` after running tests.
	   *
	   * @private
	   * @param {string} title
	   * @param {Function} fn
	   * @return {Suite} for chaining
	   */
a.prototype.afterAll=function(e,t){if(this.isPending())return this;"function"==typeof e&&(e=(t=e).name),e='"after all" hook'+(e?": "+e:"");var r=this._createHook(e,t);return this._afterAll.push(r),this.emit(s.EVENT_SUITE_ADD_HOOK_AFTER_ALL,r),this},
/**
	   * Run `fn(test[, done])` before each test case.
	   *
	   * @private
	   * @param {string} title
	   * @param {Function} fn
	   * @return {Suite} for chaining
	   */
a.prototype.beforeEach=function(e,t){if(this.isPending())return this;"function"==typeof e&&(e=(t=e).name),e='"before each" hook'+(e?": "+e:"");var r=this._createHook(e,t);return this._beforeEach.push(r),this.emit(s.EVENT_SUITE_ADD_HOOK_BEFORE_EACH,r),this},
/**
	   * Run `fn(test[, done])` after each test case.
	   *
	   * @private
	   * @param {string} title
	   * @param {Function} fn
	   * @return {Suite} for chaining
	   */
a.prototype.afterEach=function(e,t){if(this.isPending())return this;"function"==typeof e&&(e=(t=e).name),e='"after each" hook'+(e?": "+e:"");var r=this._createHook(e,t);return this._afterEach.push(r),this.emit(s.EVENT_SUITE_ADD_HOOK_AFTER_EACH,r),this},
/**
	   * Add a test `suite`.
	   *
	   * @private
	   * @param {Suite} suite
	   * @return {Suite} for chaining
	   */
a.prototype.addSuite=function(e){return e.parent=this,e.root=0,e.timeout(this.timeout()),e.retries(this.retries()),e.slow(this.slow()),e.bail(this.bail()),this.suites.push(e),this.emit(s.EVENT_SUITE_ADD_SUITE,e),this},
/**
	   * Add a `test` to this suite.
	   *
	   * @private
	   * @param {Test} test
	   * @return {Suite} for chaining
	   */
a.prototype.addTest=function(e){return e.parent=this,e.timeout(this.timeout()),e.retries(this.retries()),e.slow(this.slow()),e.ctx=this.ctx,this.tests.push(e),this.emit(s.EVENT_SUITE_ADD_TEST,e),this},
/**
	   * Return the full title generated by recursively concatenating the parent's
	   * full title.
	   *
	   * @memberof Suite
	   * @public
	   * @return {string}
	   */
a.prototype.fullTitle=function(){return this.titlePath().join(" ")},
/**
	   * Return the title path generated by recursively concatenating the parent's
	   * title path.
	   *
	   * @memberof Suite
	   * @public
	   * @return {string}
	   */
a.prototype.titlePath=function(){var e=[];return this.parent&&(e=e.concat(this.parent.titlePath())),this.root||e.push(this.title),e},
/**
	   * Return the total number of tests.
	   *
	   * @memberof Suite
	   * @public
	   * @return {number}
	   */
a.prototype.total=function(){return this.suites.reduce((function(e,t){return e+t.total()}),0)+this.tests.length},
/**
	   * Iterates through each suite recursively to find all tests. Applies a
	   * function in the format `fn(test)`.
	   *
	   * @private
	   * @param {Function} fn
	   * @return {Suite}
	   */
a.prototype.eachTest=function(e){return this.tests.forEach(e),this.suites.forEach((function(t){t.eachTest(e)})),this},
/**
	   * This will run the root suite if we happen to be running in delayed mode.
	   * @private
	   */
a.prototype.run=function(){this.root&&this.emit(s.EVENT_ROOT_SUITE_RUN)},
/**
	   * Determines whether a suite has an `only` test or suite as a descendant.
	   *
	   * @private
	   * @returns {Boolean}
	   */
a.prototype.hasOnly=function(){return this._onlyTests.length>0||this._onlySuites.length>0||this.suites.some((function(e){return e.hasOnly()}))},
/**
	   * Filter suites based on `isOnly` logic.
	   *
	   * @private
	   * @returns {Boolean}
	   */
a.prototype.filterOnly=function(){if(this._onlyTests.length)// If the suite contains `only` tests, run those and ignore any nested suites.
this.tests=this._onlyTests,this.suites=[];else{// Otherwise, do not run any of the tests in this suite.
this.tests=[],this._onlySuites.forEach((function(e){// If there are other `only` tests/suites nested in the current `only` suite, then filter that `only` suite.
// Otherwise, all of the tests on this `only` suite should be run, so don't filter it.
e.hasOnly()&&e.filterOnly()}));// Run the `only` suites, as well as any other suites that have `only` tests/suites as descendants.
var e=this._onlySuites;this.suites=this.suites.filter((function(t){return-1!==e.indexOf(t)||t.filterOnly()}))}// Keep the suite only if there is something to run
return this.tests.length>0||this.suites.length>0},
/**
	   * Adds a suite to the list of subsuites marked `only`.
	   *
	   * @private
	   * @param {Suite} suite
	   */
a.prototype.appendOnlySuite=function(e){this._onlySuites.push(e)},
/**
	   * Marks a suite to be `only`.
	   *
	   * @private
	   */
a.prototype.markOnly=function(){this.parent&&this.parent.appendOnlySuite(this)},
/**
	   * Adds a test to the list of tests marked `only`.
	   *
	   * @private
	   * @param {Test} test
	   */
a.prototype.appendOnlyTest=function(e){this._onlyTests.push(e)},
/**
	   * Returns the array of hooks by hook name; see `HOOK_TYPE_*` constants.
	   * @private
	   */
a.prototype.getHooks=function(e){return this["_"+e]},
/**
	   * cleans all references from this suite and all child suites.
	   */
a.prototype.dispose=function(){this.suites.forEach((function(e){e.dispose()})),this.cleanReferences()},
/**
	   * Cleans up the references to all the deferred functions
	   * (before/after/beforeEach/afterEach) and tests of a Suite.
	   * These must be deleted otherwise a memory leak can happen,
	   * as those functions may reference variables from closures,
	   * thus those variables can never be garbage collected as long
	   * as the deferred functions exist.
	   *
	   * @private
	   */
a.prototype.cleanReferences=function(){function e(e){for(var t=0;t<e.length;t++)delete e[t].fn}Array.isArray(this._beforeAll)&&e(this._beforeAll),Array.isArray(this._beforeEach)&&e(this._beforeEach),Array.isArray(this._afterAll)&&e(this._afterAll),Array.isArray(this._afterEach)&&e(this._afterEach);for(var t=0;t<this.tests.length;t++)delete this.tests[t].fn},
/**
	   * Returns an object suitable for IPC.
	   * Functions are represented by keys beginning with `$$`.
	   * @private
	   * @returns {Object}
	   */
a.prototype.serialize=function(){return{_bail:this._bail,$$fullTitle:this.fullTitle(),$$isPending:this.isPending(),root:this.root,title:this.title}};var s=Yh.defineConstants(
/**
	   * {@link Suite}-related constants.
	   * @public
	   * @memberof Suite
	   * @alias constants
	   * @readonly
	   * @static
	   * @enum {string}
	   */
{
/**
	     * Event emitted after a test file has been loaded Not emitted in browser.
	     */
EVENT_FILE_POST_REQUIRE:"post-require",
/**
	     * Event emitted before a test file has been loaded. In browser, this is emitted once an interface has been selected.
	     */
EVENT_FILE_PRE_REQUIRE:"pre-require",
/**
	     * Event emitted immediately after a test file has been loaded. Not emitted in browser.
	     */
EVENT_FILE_REQUIRE:"require",
/**
	     * Event emitted when `global.run()` is called (use with `delay` option)
	     */
EVENT_ROOT_SUITE_RUN:"run",
/**
	     * Namespace for collection of a `Suite`'s "after all" hooks
	     */
HOOK_TYPE_AFTER_ALL:"afterAll",
/**
	     * Namespace for collection of a `Suite`'s "after each" hooks
	     */
HOOK_TYPE_AFTER_EACH:"afterEach",
/**
	     * Namespace for collection of a `Suite`'s "before all" hooks
	     */
HOOK_TYPE_BEFORE_ALL:"beforeAll",
/**
	     * Namespace for collection of a `Suite`'s "before all" hooks
	     */
HOOK_TYPE_BEFORE_EACH:"beforeEach",// the following events are all deprecated
/**
	     * Emitted after an "after all" `Hook` has been added to a `Suite`. Deprecated
	     */
EVENT_SUITE_ADD_HOOK_AFTER_ALL:"afterAll",
/**
	     * Emitted after an "after each" `Hook` has been added to a `Suite` Deprecated
	     */
EVENT_SUITE_ADD_HOOK_AFTER_EACH:"afterEach",
/**
	     * Emitted after an "before all" `Hook` has been added to a `Suite` Deprecated
	     */
EVENT_SUITE_ADD_HOOK_BEFORE_ALL:"beforeAll",
/**
	     * Emitted after an "before each" `Hook` has been added to a `Suite` Deprecated
	     */
EVENT_SUITE_ADD_HOOK_BEFORE_EACH:"beforeEach",
/**
	     * Emitted after a child `Suite` has been added to a `Suite`. Deprecated
	     */
EVENT_SUITE_ADD_SUITE:"suite",
/**
	     * Emitted after a `Test` has been added to a `Suite`. Deprecated
	     */
EVENT_SUITE_ADD_TEST:"test"}),u=Object.keys(s).filter((function(e){return"EVENT_SUITE_ADD"===e.substring(0,15)})).reduce((function(e,t){return e[s[t]]=1,e}),Yh.createMap());
/**
	   * @summary There are no known use cases for these events.
	   * @desc This is a `Set`-like object having all keys being the constant's string value and the value being `true`.
	   * @todo Remove eventually
	   * @type {Object<string,boolean>}
	   * @ignore
	   */a.constants=s})),Ed=Jr.EventEmitter,Ad=Yh.inherits,Td=Kh("mocha:runner"),xd=wd.constants.HOOK_TYPE_BEFORE_EACH,Sd=wd.constants.HOOK_TYPE_AFTER_EACH,_d=wd.constants.HOOK_TYPE_AFTER_ALL,Nd=wd.constants.HOOK_TYPE_BEFORE_ALL,Dd=wd.constants.EVENT_ROOT_SUITE_RUN,Cd=fd.constants.STATE_FAILED,kd=fd.constants.STATE_PASSED,Od=fd.constants.STATE_PENDING,Rd=Yh.dQuote,Ld=Yh.sQuote,qd=Yh.stackTraceFilter(),Id=Yh.stringify,Bd=Yh.type,Pd=rd.createInvalidExceptionError,jd=rd.createUnsupportedError,Fd=rd.createFatalError,Ud=["setTimeout","clearTimeout","setInterval","clearInterval","XMLHttpRequest","Date","setImmediate","clearImmediate"],Vd=Yh.defineConstants(
/**
	 * {@link Runner}-related constants.
	 * @public
	 * @memberof Runner
	 * @readonly
	 * @alias constants
	 * @static
	 * @enum {string}
	 */
{
/**
	   * Emitted when {@link Hook} execution begins
	   */
EVENT_HOOK_BEGIN:"hook",
/**
	   * Emitted when {@link Hook} execution ends
	   */
EVENT_HOOK_END:"hook end",
/**
	   * Emitted when Root {@link Suite} execution begins (all files have been parsed and hooks/tests are ready for execution)
	   */
EVENT_RUN_BEGIN:"start",
/**
	   * Emitted when Root {@link Suite} execution has been delayed via `delay` option
	   */
EVENT_DELAY_BEGIN:"waiting",
/**
	   * Emitted when delayed Root {@link Suite} execution is triggered by user via `global.run()`
	   */
EVENT_DELAY_END:"ready",
/**
	   * Emitted when Root {@link Suite} execution ends
	   */
EVENT_RUN_END:"end",
/**
	   * Emitted when {@link Suite} execution begins
	   */
EVENT_SUITE_BEGIN:"suite",
/**
	   * Emitted when {@link Suite} execution ends
	   */
EVENT_SUITE_END:"suite end",
/**
	   * Emitted when {@link Test} execution begins
	   */
EVENT_TEST_BEGIN:"test",
/**
	   * Emitted when {@link Test} execution ends
	   */
EVENT_TEST_END:"test end",
/**
	   * Emitted when {@link Test} execution fails
	   */
EVENT_TEST_FAIL:"fail",
/**
	   * Emitted when {@link Test} execution succeeds
	   */
EVENT_TEST_PASS:"pass",
/**
	   * Emitted when {@link Test} becomes pending
	   */
EVENT_TEST_PENDING:"pending",
/**
	   * Emitted when {@link Test} execution has failed, but will retry
	   */
EVENT_TEST_RETRY:"retry",
/**
	   * Initial state of Runner
	   */
STATE_IDLE:"idle",
/**
	   * State set to this value when the Runner has started running
	   */
STATE_RUNNING:"running",
/**
	   * State set to this value when the Runner has stopped
	   */
STATE_STOPPED:"stopped"}),Md=Hd;
/**
	 * Module dependencies.
	 * @private
	 */
/**
	 * Initialize a `Runner` at the Root {@link Suite}, which represents a hierarchy of {@link Suite|Suites} and {@link Test|Tests}.
	 *
	 * @extends external:EventEmitter
	 * @public
	 * @class
	 * @param {Suite} suite - Root suite
	 * @param {Object|boolean} [opts] - Options. If `boolean`, whether or not to delay execution of root suite until ready (for backwards compatibility).
	 * @param {boolean} [opts.delay] - Whether to delay execution of root suite until ready.
	 * @param {boolean} [opts.cleanReferencesAfterRun] - Whether to clean references to test fns and hooks when a suite is done.
	 */
function Hd(e,t){void 0===t&&(t={}),"boolean"==typeof t?(this._delay=t,t={}):this._delay=t.delay;var r=this;this._globals=[],this._abort=0,this.suite=e,this._opts=t,this.state=Vd.STATE_IDLE,this.total=e.total(),this.failures=0,this._eventListeners=[],this.on(Vd.EVENT_TEST_END,(function(e){if("test"===e.type&&e.retriedTest()&&e.parent){var t=e.parent.tests&&e.parent.tests.indexOf(e.retriedTest());t>-1&&(e.parent.tests[t]=e)}r.checkGlobals(e)})),this.on(Vd.EVENT_HOOK_END,(function(e){r.checkGlobals(e)})),this._defaultGrep=/.*/,this.grep(this._defaultGrep),this.globals(this.globalProps()),this.uncaught=this._uncaught.bind(this)}
/**
	 * Wrapper for setImmediate, process.nextTick, or browser polyfill.
	 *
	 * @param {Function} fn
	 * @private
	 */
/**
	 * Check if argument is an instance of Error object or a duck-typed equivalent.
	 *
	 * @private
	 * @param {Object} err - object to check
	 * @param {string} err.message - error message
	 * @returns {boolean}
	 */
function zd(e){return e instanceof Error||e&&"string"==typeof e.message}
/**
	 *
	 * Converts thrown non-extensible type into proper Error.
	 *
	 * @private
	 * @param {*} thrown - Non-extensible type thrown by code
	 * @return {Error}
	 */function Gd(e){return new Error("the "+Bd(e)+" "+Id(e)+" was thrown, throw an Error :)")}Hd.immediately=e.setImmediate||gr,
/**
	 * Inherit from `EventEmitter.prototype`.
	 */
Ad(Hd,Ed),
/**
	 * Replacement for `target.on(eventName, listener)` that does bookkeeping to remove them when this runner instance is disposed.
	 * @param {EventEmitter} target - The `EventEmitter`
	 * @param {string} eventName - The event name
	 * @param {string} fn - Listener function
	 * @private
	 */
Hd.prototype._addEventListener=function(e,t,r){e.on(t,r),this._eventListeners.push([e,t,r])},
/**
	 * Replacement for `target.removeListener(eventName, listener)` that also updates the bookkeeping.
	 * @param {EventEmitter} target - The `EventEmitter`
	 * @param {string} eventName - The event anme
	 * @param {function} listener - Listener function
	 * @private
	 */
Hd.prototype._removeEventListener=function(e,t,r){for(var n=-1,o=0;o<this._eventListeners.length;o++){var i=this._eventListeners[o];if(i[0]===e&&i[1]===t&&i[2]===r){n=o;break}}if(-1!==n){var a=this._eventListeners.splice(n,1)[0];a[0].removeListener(a[1],a[2])}},
/**
	 * Removes all event handlers set during a run on this instance.
	 * Remark: this does _not_ clean/dispose the tests or suites themselves.
	 */
Hd.prototype.dispose=function(){this.removeAllListeners(),this._eventListeners.forEach((function(e){e[0].removeListener(e[1],e[2])}))},
/**
	 * Run tests with full titles matching `re`. Updates runner.total
	 * with number of tests matched.
	 *
	 * @public
	 * @memberof Runner
	 * @param {RegExp} re
	 * @param {boolean} invert
	 * @return {Runner} Runner instance.
	 */
Hd.prototype.grep=function(e,t){return Td("grep(): setting to %s",e),this._grep=e,this._invert=t,this.total=this.grepTotal(this.suite),this},
/**
	 * Returns the number of tests matching the grep search for the
	 * given suite.
	 *
	 * @memberof Runner
	 * @public
	 * @param {Suite} suite
	 * @return {number}
	 */
Hd.prototype.grepTotal=function(e){var t=this,r=0;return e.eachTest((function(e){var n=t._grep.test(e.fullTitle());t._invert&&(n=!n),n&&r++})),r},
/**
	 * Return a list of global properties.
	 *
	 * @return {Array}
	 * @private
	 */
Hd.prototype.globalProps=function(){// non-enumerables
for(var t=Object.keys(e),r=0;r<Ud.length;++r)~t.indexOf(Ud[r])||t.push(Ud[r]);return t},
/**
	 * Allow the given `arr` of globals.
	 *
	 * @public
	 * @memberof Runner
	 * @param {Array} arr
	 * @return {Runner} Runner instance.
	 */
Hd.prototype.globals=function(e){return arguments.length?(Td("globals(): setting to %O",e),this._globals=this._globals.concat(e),this):this._globals},
/**
	 * Check for global variable leaks.
	 *
	 * @private
	 */
Hd.prototype.checkGlobals=function(t){if(this.checkLeaks){var r,n=this._globals,o=this.globalProps();if(t&&(n=n.concat(t._allowedGlobals||[])),this.prevGlobalsLength!==o.length&&(this.prevGlobalsLength=o.length,r=
/**
	 * Filter leaks with the given globals flagged as `ok`.
	 *
	 * @private
	 * @param {Array} ok
	 * @param {Array} globals
	 * @return {Array}
	 */
function(t,r){return r.filter((function(r){// Firefox and Chrome exposes iframes as index inside the window object
return/^\d+/.test(r)||e.navigator&&/^getInterface/.test(r)||e.navigator&&/^\d+/.test(r)||/^mocha-/.test(r)?0:!(t.filter((function(e){return~e.indexOf("*")?0===r.indexOf(e.split("*")[0]):r===e})).length||e.navigator&&"onerror"===r);// in firefox
// if runner runs in an iframe, this iframe's window.getInterface method
// not init at first it is assigned in some seconds
}))}(n,o),this._globals=this._globals.concat(r),r.length)){var i=new Error(cl.format("global leak(s) detected: %s",r.map(Ld).join(", ")));this.fail(t,i)}}},
/**
	 * Fail the given `test`.
	 *
	 * If `test` is a hook, failures work in the following pattern:
	 * - If bail, run corresponding `after each` and `after` hooks,
	 *   then exit
	 * - Failed `before` hook skips all tests in a suite and subsuites,
	 *   but jumps to corresponding `after` hook
	 * - Failed `before each` hook skips remaining tests in a
	 *   suite and jumps to corresponding `after each` hook,
	 *   which is run only once
	 * - Failed `after` hook does not alter execution order
	 * - Failed `after each` hook skips remaining tests in a
	 *   suite and subsuites, but executes other `after each`
	 *   hooks
	 *
	 * @private
	 * @param {Runnable} test
	 * @param {Error} err
	 * @param {boolean} [force=false] - Whether to fail a pending test.
	 */
Hd.prototype.fail=function(e,t,r){if(r=1==r,!e.isPending()||r){if(this.state===Vd.STATE_STOPPED){if(t.code===rd.constants.MULTIPLE_DONE)throw t;throw Fd("Test failed after root suite execution completed!",t)}++this.failures,Td("total number of failures: %d",this.failures),e.state=Cd,zd(t)||(t=Gd(t));try{t.stack=this.fullStackTrace||!t.stack?t.stack:qd(t.stack)}catch(e){// some environments do not take kindly to monkeying with the stack
}this.emit(Vd.EVENT_TEST_FAIL,e,t)}},
/**
	 * Run hook `name` callbacks and then invoke `fn()`.
	 *
	 * @private
	 * @param {string} name
	 * @param {Function} fn
	 */
Hd.prototype.hook=function(e,t){var r=this.suite,n=r.getHooks(e),o=this;Hd.immediately((function(){!function i(a){var s=n[a];if(!s)return t();function u(e){var t;e.originalTitle=e.originalTitle||e.title,e.ctx&&e.ctx.currentTest?e.title=e.originalTitle+" for "+Rd(e.ctx.currentTest.title):(t=e.parent.title?e.parent.title:e.parent.root?"{root}":"",e.title=e.originalTitle+" in "+Rd(t))}o.currentRunnable=s,s.ctx.currentTest=e===Nd?s.parent.tests[0]:e===_d?s.parent.tests[s.parent.tests.length-1]:o.test,u(s),s.allowUncaught=o.allowUncaught,o.emit(Vd.EVENT_HOOK_BEGIN,s),s.listeners("error").length||o._addEventListener(s,"error",(function(e){o.fail(s,e)})),s.run((function(c){var l=s.error();// conditional skip
if(l&&o.fail(o.test,l),s.pending)if(e===Sd)// TODO define and implement use case
o.test&&(o.test.pending=1);else{if(e===xd)// activates hook for next test
return o.test&&(o.test.pending=1),o.emit(Vd.EVENT_HOOK_END,s),s.pending=0,t(new Error("abort hookDown"));if(e!==Nd){s.pending=0;var f=jd("`this.skip` forbidden");return o.fail(s,f),t(f)}r.tests.forEach((function(e){e.pending=1})),r.suites.forEach((function(e){e.pending=1})),n=[]}else if(c)// stop executing hooks, notify callee of hook err
return o.fail(s,c),t(c);o.emit(Vd.EVENT_HOOK_END,s),delete s.ctx.currentTest,u(s),i(++a)}))}(0)}))},
/**
	 * Run hook `name` for the given array of `suites`
	 * in order, and callback `fn(err, errSuite)`.
	 *
	 * @private
	 * @param {string} name
	 * @param {Array} suites
	 * @param {Function} fn
	 */
Hd.prototype.hooks=function(e,t,r){var n=this,o=this.suite;!function i(a){if(n.suite=a,!a)return n.suite=o,r();n.hook(e,(function(e){if(e){var a=n.suite;return n.suite=o,r(e,a)}i(t.pop())}))}(t.pop())},
/**
	 * Run hooks from the top level down.
	 *
	 * @param {String} name
	 * @param {Function} fn
	 * @private
	 */
Hd.prototype.hookUp=function(e,t){var r=[this.suite].concat(this.parents()).reverse();this.hooks(e,r,t)},
/**
	 * Run hooks from the bottom up.
	 *
	 * @param {String} name
	 * @param {Function} fn
	 * @private
	 */
Hd.prototype.hookDown=function(e,t){var r=[this.suite].concat(this.parents());this.hooks(e,r,t)},
/**
	 * Return an array of parent Suites from
	 * closest to furthest.
	 *
	 * @return {Array}
	 * @private
	 */
Hd.prototype.parents=function(){for(var e=this.suite,t=[];e.parent;)e=e.parent,t.push(e);return t},
/**
	 * Run the current test and callback `fn(err)`.
	 *
	 * @param {Function} fn
	 * @private
	 */
Hd.prototype.runTest=function(e){var t=this,r=this.test;if(r){if(this.asyncOnly&&(r.asyncOnly=1),this._addEventListener(r,"error",(function(e){t.fail(r,e)})),this.allowUncaught)return r.allowUncaught=1,r.run(e);try{r.run(e)}catch(t){e(t)}}},
/**
	 * Run tests in the given `suite` and invoke the callback `fn()` when complete.
	 *
	 * @private
	 * @param {Suite} suite
	 * @param {Function} fn
	 */
Hd.prototype.runTests=function(e,t){var r,n=this,o=e.tests.slice();function i(e,r,o){// before/after Each hook for errSuite failed:
var a=n.suite;// for failed 'after each' hook start from errSuite parent,
// otherwise start from errSuite itself
n.suite=o?r.parent:r,n.suite?// call hookUp afterEach
n.hookUp(Sd,(function(e,o){// some hooks may fail even now
if(n.suite=a,e)return i(0,o,1);// report error suite
t(r)})):(// there is no need calling other 'after each' hooks
n.suite=a,t(r))}function a(s,u){if(// if we bail after first err
n.failures&&e._bail&&(o=[]),n._abort)return t();if(s)return i(0,u,1);// next test
// all done
if(!(r=o.shift()))return t();// grep
var c=n._grep.test(r.fullTitle());if(n._invert&&(c=!c),c){// static skip, no hooks are executed
if(r.isPending())return n.forbidPending?n.fail(r,new Error("Pending test forbidden"),1):(r.state=Od,n.emit(Vd.EVENT_TEST_PENDING,r)),n.emit(Vd.EVENT_TEST_END,r),a();// execute test and hook(s)
n.emit(Vd.EVENT_TEST_BEGIN,n.test=r),n.hookDown(xd,(function(e,t){// conditional skip within beforeEach
if(r.isPending()){n.forbidPending?n.fail(r,new Error("Pending test forbidden"),1):(r.state=Od,n.emit(Vd.EVENT_TEST_PENDING,r)),n.emit(Vd.EVENT_TEST_END,r);// skip inner afterEach hooks below errSuite level
var s=n.suite;return n.suite=t||n.suite,n.hookUp(Sd,(function(e,t){n.suite=s,a(e,t)}))}if(e)return i(0,t,0);n.currentRunnable=n.test,n.runTest((function(e){// conditional skip within it
if((r=n.test).pending)return n.forbidPending?n.fail(r,new Error("Pending test forbidden"),1):(r.state=Od,n.emit(Vd.EVENT_TEST_PENDING,r)),n.emit(Vd.EVENT_TEST_END,r),n.hookUp(Sd,a);if(e){var t=r.currentRetry();if(t<r.retries()){var i=r.clone();// Early return + hook trigger so that it doesn't
// increment the count wrong
return i.currentRetry(t+1),o.unshift(i),n.emit(Vd.EVENT_TEST_RETRY,r,e),n.hookUp(Sd,a)}return n.fail(r,e),n.emit(Vd.EVENT_TEST_END,r),n.hookUp(Sd,a)}r.state=kd,n.emit(Vd.EVENT_TEST_PASS,r),n.emit(Vd.EVENT_TEST_END,r),n.hookUp(Sd,a)}))}))}else// Run immediately only if we have defined a grep. When we
// define a grep — It can cause maximum callstack error if
// the grep is doing a large recursive loop by neglecting
// all tests. The run immediately function also comes with
// a performance cost. So we don't want to run immediately
// if we run the whole test suite, because running the whole
// test suite don't do any immediate recursive loops. Thus,
// allowing a JS runtime to breathe.
n._grep!==n._defaultGrep?Hd.immediately(a):a()}this.next=a,this.hookErr=i,a()},
/**
	 * Run the given `suite` and invoke the callback `fn()` when complete.
	 *
	 * @private
	 * @param {Suite} suite
	 * @param {Function} fn
	 */
Hd.prototype.runSuite=function(e,t){var r=0,n=this,o=this.grepTotal(e);if(Td("runSuite(): running %s",e.fullTitle()),!o||n.failures&&e._bail)return Td("runSuite(): bailing"),t();function i(t){if(t)// current suite failed on a hook from errSuite
return t===e?a():a(t);// errSuite is among the parents of current suite
// stop execution of errSuite and all sub-suites
if(n._abort)return a();var o=e.suites[r++];if(!o)return a();// Avoid grep neglecting large number of tests causing a
// huge recursive loop and thus a maximum call stack error.
// See comment in `this.runTests()` for more information.
n._grep!==n._defaultGrep?Hd.immediately((function(){n.runSuite(o,i)})):n.runSuite(o,i)}function a(r){n.suite=e,n.nextSuite=i,// remove reference to test
delete n.test,n.hook(_d,(function(){n.emit(Vd.EVENT_SUITE_END,e),t(r)}))}this.emit(Vd.EVENT_SUITE_BEGIN,this.suite=e),this.nextSuite=i,this.hook(Nd,(function(t){if(t)return a();n.runTests(e,i)}))},
/**
	 * Handle uncaught exceptions within runner.
	 *
	 * This function is bound to the instance as `Runner#uncaught` at instantiation
	 * time. It's intended to be listening on the `Process.uncaughtException` event.
	 * In order to not leak EE listeners, we need to ensure no more than a single
	 * `uncaughtException` listener exists per `Runner`.  The only way to do
	 * this--because this function needs the context (and we don't have lambdas)--is
	 * to use `Function.prototype.bind`. We need strict equality to unregister and
	 * _only_ unregister the _one_ listener we set from the
	 * `Process.uncaughtException` event; would be poor form to just remove
	 * everything. See {@link Runner#run} for where the event listener is registered
	 * and unregistered.
	 * @param {Error} err - Some uncaught error
	 * @private
	 */
Hd.prototype._uncaught=function(e){// this is defensive to prevent future developers from mis-calling this function.
// it's more likely that it'd be called with the incorrect context--say, the global
// `process` object--than it would to be called with a context that is not a "subclass"
// of `Runner`.
if(!(this instanceof Hd))throw Fd("Runner#uncaught() called with invalid context",this);if(e instanceof $h)Td("uncaught(): caught a Pending");else{// browser does not exit script when throwing in global.onerror()
if(this.allowUncaught&&!Yh.isBrowser())throw Td("uncaught(): bubbling exception due to --allow-uncaught"),e;if(this.state===Vd.STATE_STOPPED)throw Td("uncaught(): throwing after run has completed!"),e;e?Td("uncaught(): got truthy exception %O",e):(Td("uncaught(): undefined/falsy exception"),e=Pd("Caught falsy/undefined exception which would otherwise be uncaught. No stack trace found; try a debugger",e)),zd(e)||(e=Gd(e),Td('uncaught(): converted "error" %o to Error',e)),e.uncaught=1;var t=this.currentRunnable;if(!t)return t=new fd("Uncaught error outside test suite"),Td("uncaught(): no current Runnable; created a phony one"),t.parent=this.suite,void(this.state===Vd.STATE_RUNNING?(Td("uncaught(): failing gracefully"),this.fail(t,e)):(// Can't recover from this failure
Td("uncaught(): test run has not yet started; unrecoverable"),this.emit(Vd.EVENT_RUN_BEGIN),this.fail(t,e),this.emit(Vd.EVENT_RUN_END)));if(t.clearTimeout(),!t.isFailed())return t.isPending()?(Td("uncaught(): pending Runnable wound up failing!"),void// report 'pending test' retrospectively as failed
this.fail(t,e,1)):// we cannot recover gracefully if a Runnable has already passed
// then fails asynchronously
t.isPassed()?(Td("uncaught(): Runnable has already passed; bailing gracefully"),this.fail(t,e),void this.abort()):(Td("uncaught(): forcing Runnable to complete with Error"),t.callback(e));Td("uncaught(): Runnable has already failed")}},
/**
	 * Run the root suite and invoke `fn(failures)`
	 * on completion.
	 *
	 * @public
	 * @memberof Runner
	 * @param {Function} fn - Callback when finished
	 * @param {{files: string[], options: Options}} [opts] - For subclasses
	 * @return {Runner} Runner instance.
	 */
Hd.prototype.run=function(e,t){var r=this,n=this.suite;function o(){Td("run(): starting"),// If there is an `only` filter
n.hasOnly()&&(n.filterOnly(),Td("run(): filtered exclusive Runnables")),r.state=Vd.STATE_RUNNING,r._delay&&(r.emit(Vd.EVENT_DELAY_END),Td('run(): "delay" ended')),Td("run(): emitting %s",Vd.EVENT_RUN_BEGIN),r.emit(Vd.EVENT_RUN_BEGIN),Td("run(): emitted %s",Vd.EVENT_RUN_BEGIN),r.runSuite(n,(function(){Td("run(): root suite completed; emitting %s",Vd.EVENT_RUN_END),r.emit(Vd.EVENT_RUN_END),Td("run(): emitted %s",Vd.EVENT_RUN_END)}))}// references cleanup to avoid memory leaks
return e=e||function(){},this._opts.cleanReferencesAfterRun&&this.on(Vd.EVENT_SUITE_END,(function(e){e.cleanReferences()})),// callback
this.on(Vd.EVENT_RUN_END,(function(){r.state=Vd.STATE_STOPPED,Td(Vd.EVENT_RUN_END),Td("run(): emitted %s",Vd.EVENT_RUN_END),e(r.failures)})),r._removeEventListener(Dr,"uncaughtException",r.uncaught),r._addEventListener(Dr,"uncaughtException",r.uncaught),this._delay?(// for reporters, I guess.
// might be nice to debounce some dots while we wait.
this.emit(Vd.EVENT_DELAY_BEGIN,n),n.once(Dd,o),Td("run(): waiting for green light due to --delay")):Hd.immediately((function(){o()})),this},
/**
	 * Cleanly abort execution.
	 *
	 * @memberof Runner
	 * @public
	 * @return {Runner} Runner instance.
	 */
Hd.prototype.abort=function(){return Td("abort(): aborting"),this._abort=1,this},Hd.constants=Vd;var Yd=n(Wh),Wd=r((function(t,r){
/**
	   * @module Base
	   */
/**
	   * Module dependencies.
	   */
var n=Md.constants,o=n.EVENT_TEST_PASS,i=n.EVENT_TEST_FAIL,a=Yh.isBrowser();
/**
	   * Expose `Base`.
	   */
r=t.exports=h;
/**
	   * Check if both stdio streams are associated with a tty.
	   */
var s=a||Dr.stdout.isTTY&&Dr.stderr.isTTY,u=console.log;
/**
	   * Save log references to avoid tests interfering (see GH-3604).
	   */
/**
	   * Enable coloring by default, except in the browser interface.
	   */
r.useColors=!a&&(Yd.stdout||void 0!==Dr.env.MOCHA_COLORS),
/**
	   * Inline diffs instead of +/-
	   */
r.inlineDiffs=0,
/**
	   * Default color map.
	   */
r.colors={pass:90,fail:31,"bright pass":92,"bright fail":91,"bright yellow":93,pending:36,suite:0,"error title":0,"error message":31,"error stack":90,checkmark:32,fast:90,medium:33,slow:31,green:32,light:90,"diff gutter":90,"diff added":32,"diff removed":31,"diff added inline":"30;42","diff removed inline":"30;41"},
/**
	   * Default symbol map.
	   */
r.symbols={ok:"✓",err:"✖",dot:"․",comma:",",bang:"!"},// With node.js on Windows: use symbols available in terminal default fonts
"win32"===Dr.platform&&(r.symbols.ok="√",r.symbols.err="×",r.symbols.dot=".")
/**
	   * Color `str` with the given `type`,
	   * allowing colors to be disabled,
	   * as well as user-defined color
	   * schemes.
	   *
	   * @private
	   * @param {string} type
	   * @param {string} str
	   * @return {string}
	   */;var c=r.color=function(e,t){return r.useColors?"["+r.colors[e]+"m"+t+"[0m":String(t)};
/**
	   * Expose term window size, with some defaults for when stderr is not a tty.
	   */r.window={width:75},s&&(r.window.width=a?("innerHeight"in e?[e.innerHeight,e.innerWidth]:[640,480])[1]:Dr.stdout.getWindowSize(1)[0])
/**
	   * Expose some basic cursor interactions that are common among reporters.
	   */,r.cursor={hide:function(){s&&Dr.stdout.write("[?25l")},show:function(){s&&Dr.stdout.write("[?25h")},deleteLine:function(){s&&Dr.stdout.write("[2K")},beginningOfLine:function(){s&&Dr.stdout.write("[0G")},CR:function(){s?(r.cursor.deleteLine(),r.cursor.beginningOfLine()):Dr.stdout.write("\r")}};var l=r.showDiff=function(e){return e&&0!=e.showDiff&&(t=e.actual,r=e.expected,g.call(t)===g.call(r))&&void 0!==e.expected;
/**
	   * Checks that a / b have the same type.
	   *
	   * @private
	   * @param {Object} a
	   * @param {Object} b
	   * @return {boolean}
	   */
var t,r};function f(e){Yh.isString(e.actual)&&Yh.isString(e.expected)||(e.actual=Yh.stringify(e.actual),e.expected=Yh.stringify(e.expected))}
/**
	   * Returns a diff between 2 strings with coloured ANSI output.
	   *
	   * @description
	   * The diff will be either inline or unified dependent on the value
	   * of `Base.inlineDiff`.
	   *
	   * @param {string} actual
	   * @param {string} expected
	   * @return {string} Diff
	   */var p=r.generateDiff=function(e,t){try{return r.inlineDiffs?
/**
	   * Returns inline diff between 2 strings with coloured ANSI output.
	   *
	   * @private
	   * @param {String} actual
	   * @param {String} expected
	   * @return {string} Diff
	   */
function(e,t){var r=
/**
	   * Returns character diff for `err`.
	   *
	   * @private
	   * @param {String} actual
	   * @param {String} expected
	   * @return {string} the diff
	   */
function(e,t){return Hp.diffWordsWithSpace(e,t).map((function(e){return e.added?d("diff added inline",e.value):e.removed?d("diff removed inline",e.value):e.value})).join("")}
/**
	   * Colors lines for `str`, using the color `name`.
	   *
	   * @private
	   * @param {string} name
	   * @param {string} str
	   * @return {string}
	   */(e,t),n=r.split("\n");// linenos
if(n.length>4){var o=String(n.length).length;r=n.map((function(e,t){
/**
	   * Pads the given `str` to `len`.
	   *
	   * @private
	   * @param {string} str
	   * @param {string} len
	   * @return {string}
	   */return function(e,t){return e=String(e),Array(t-e.length+1).join(" ")+e}(++t,o)+" | "+e})).join("\n")}// legend
// indent
return r=(r="\n"+c("diff removed inline","actual")+" "+c("diff added inline","expected")+"\n\n"+r+"\n").replace(/^/gm,"      ")}
/**
	   * Returns unified diff between two strings with coloured ANSI output.
	   *
	   * @private
	   * @param {String} actual
	   * @param {String} expected
	   * @return {string} The diff.
	   */(e,t):function(e,t){var r=Hp.createPatch("string",e,t).split("\n").splice(5);return"\n      "+d("diff added","+ expected")+" "+d("diff removed","- actual")+"\n\n"+r.map((function(e){return"+"===e[0]?"      "+d("diff added",e):"-"===e[0]?"      "+d("diff removed",e):e.match(/@@/)?"--":e.match(/\\ No newline/)?null:"      "+e})).filter((function(e){return null!=e})).join("\n")}(e,t)}catch(e){return"\n      "+c("diff added","+ expected")+" "+c("diff removed","- actual:  failed to generate Mocha diff")+"\n"}};
/**
	   * Outputs the given `failures` as a list.
	   *
	   * @public
	   * @memberof Mocha.reporters.Base
	   * @variation 1
	   * @param {Object[]} failures - Each is Test instance with corresponding
	   *     Error property
	   */
/**
	   * Constructs a new `Base` reporter instance.
	   *
	   * @description
	   * All other reporters generally inherit from this reporter.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function h(e,t){var r=this.failures=[];if(!e)throw new TypeError("Missing runner argument");this.options=t||{},this.runner=e,this.stats=e.stats,// assigned so Reporters keep a closer reference
e.on(o,(function(e){e.duration>e.slow()?e.speed="slow":e.duration>e.slow()/2?e.speed="medium":e.speed="fast"})),e.on(i,(function(e,t){l(t)&&f(t),// more than one error per test
e.err&&t instanceof Error?e.err.multiple=(e.err.multiple||[]).concat(t):e.err=t,r.push(e)}))}
/**
	   * Outputs common epilogue used by many of the bundled reporters.
	   *
	   * @public
	   * @memberof Mocha.reporters
	   */function d(e,t){return t.split("\n").map((function(t){return c(e,t)})).join("\n")}
/**
	   * Object#toString reference.
	   */r.list=function(e){var t,n;h.consoleLog(),e.forEach((function(e,o){// format
var i,a,s,u=c("error title","  %s) %s:\n")+c("error message","     %s")+c("error stack","\n%s\n");// msg
e.err&&e.err.multiple?(n!==e&&(n=e,t=[e.err].concat(e.err.multiple)),a=t.shift()):a=e.err,s=a.message&&"function"==typeof a.message.toString?a.message+"":"function"==typeof a.inspect?a.inspect()+"":"";var d=a.stack||s,g=s?d.indexOf(s):-1;// explicitly show diff
if(-1===g?i=s:(g+=s.length,i=d.slice(0,g),// remove msg from stack
d=d.slice(g+1)),// uncaught
a.uncaught&&(i="Uncaught "+i),!r.hideDiff&&l(a)){f(a),u=c("error title","  %s) %s:\n%s")+c("error stack","\n%s\n");var m=s.match(/^([^:]+): expected/);i="\n      "+c("error message",m?m[1]:i),i+=p(a.actual,a.expected)}// indent stack trace
d=d.replace(/^/gm,"  ");// indented test title
var y="";e.titlePath().forEach((function(e,t){0!==t&&(y+="\n     ");for(var r=0;r<t;r++)y+="  ";y+=e})),h.consoleLog(u,o+1,y,i,d)}))},h.prototype.epilogue=function(){var e,t=this.stats;h.consoleLog(),// passes
e=c("bright pass"," ")+c("green"," %d passing")+c("light"," (%s)"),h.consoleLog(e,t.passes||0,$p(t.duration)),// pending
t.pending&&(e=c("pending"," ")+c("pending"," %d pending"),h.consoleLog(e,t.pending)),// failures
t.failures&&(e=c("fail","  %d failing"),h.consoleLog(e,t.failures),h.list(this.failures),h.consoleLog()),h.consoleLog()};var g=Object.prototype.toString;h.consoleLog=u,h.abstract=1})),$d=r((function(e,t){
/**
	   * @module Dot
	   */
/**
	   * Module dependencies.
	   */
var r=Yh.inherits,n=Md.constants,o=n.EVENT_TEST_PASS,i=n.EVENT_TEST_FAIL,a=n.EVENT_RUN_BEGIN,s=n.EVENT_TEST_PENDING,u=n.EVENT_RUN_END;
/**
	   * Constructs a new `Dot` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function c(e,t){Wd.call(this,e,t);var r=this,n=.75*Wd.window.width|0,c=-1;e.on(a,(function(){Dr.stdout.write("\n")})),e.on(s,(function(){++c%n==0&&Dr.stdout.write("\n  "),Dr.stdout.write(Wd.color("pending",Wd.symbols.comma))})),e.on(o,(function(e){++c%n==0&&Dr.stdout.write("\n  "),"slow"===e.speed?Dr.stdout.write(Wd.color("bright yellow",Wd.symbols.dot)):Dr.stdout.write(Wd.color(e.speed,Wd.symbols.dot))})),e.on(i,(function(){++c%n==0&&Dr.stdout.write("\n  "),Dr.stdout.write(Wd.color("fail",Wd.symbols.bang))})),e.once(u,(function(){Dr.stdout.write("\n"),r.epilogue()}))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=c,r(c,Wd),c.description="dot matrix representation"})),Jd=r((function(e,t){
/**
	   * @module Doc
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_TEST_PASS,o=r.EVENT_TEST_FAIL,i=r.EVENT_SUITE_BEGIN,a=r.EVENT_SUITE_END;
/**
	   * Constructs a new `Doc` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function s(e,t){Wd.call(this,e,t);var r=2;function s(){return Array(r).join("  ")}e.on(i,(function(e){e.root||(++r,Wd.consoleLog('%s<section class="suite">',s()),++r,Wd.consoleLog("%s<h1>%s</h1>",s(),Yh.escape(e.title)),Wd.consoleLog("%s<dl>",s()))})),e.on(a,(function(e){e.root||(Wd.consoleLog("%s</dl>",s()),--r,Wd.consoleLog("%s</section>",s()),--r)})),e.on(n,(function(e){Wd.consoleLog("%s  <dt>%s</dt>",s(),Yh.escape(e.title)),Wd.consoleLog("%s  <dt>%s</dt>",s(),Yh.escape(e.file));var t=Yh.escape(Yh.clean(e.body));Wd.consoleLog("%s  <dd><pre><code>%s</code></pre></dd>",s(),t)})),e.on(o,(function(e,t){Wd.consoleLog('%s  <dt class="error">%s</dt>',s(),Yh.escape(e.title)),Wd.consoleLog('%s  <dt class="error">%s</dt>',s(),Yh.escape(e.file));var r=Yh.escape(Yh.clean(e.body));Wd.consoleLog('%s  <dd class="error"><pre><code>%s</code></pre></dd>',s(),r),Wd.consoleLog('%s  <dd class="error">%s</dd>',s(),Yh.escape(t))}))}e.exports=s,s.description="HTML documentation"})),Kd=r((function(e,t){
/**
	   * @module TAP
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_TEST_PASS,o=r.EVENT_TEST_FAIL,i=r.EVENT_RUN_BEGIN,a=r.EVENT_RUN_END,s=r.EVENT_TEST_PENDING,u=r.EVENT_TEST_END,c=Yh.inherits,l=cl.format;
/**
	   * Constructs a new `TAP` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function f(e,t){Wd.call(this,e,t);var r=this,c=1,l="12";t&&t.reporterOptions&&t.reporterOptions.tapVersion&&(l=t.reporterOptions.tapVersion.toString()),this._producer=
/**
	   * Returns a `tapVersion`-appropriate TAP producer instance, if possible.
	   *
	   * @private
	   * @param {string} tapVersion - Version of TAP specification to produce.
	   * @returns {TAPProducer} specification-appropriate instance
	   * @throws {Error} if specification version has no associated producer.
	   */
function(e){var t={12:new g,13:new m}[e];if(!t)throw new Error("invalid or unsupported TAP version: "+JSON.stringify(e));return t}
/**
	   * @summary
	   * Constructs a new TAPProducer.
	   *
	   * @description
	   * <em>Only</em> to be used as an abstract base class.
	   *
	   * @private
	   * @constructor
	   */(l),e.once(i,(function(){r._producer.writeVersion()})),e.on(u,(function(){++c})),e.on(s,(function(e){r._producer.writePending(c,e)})),e.on(n,(function(e){r._producer.writePass(c,e)})),e.on(o,(function(e,t){r._producer.writeFail(c,e,t)})),e.once(a,(function(){r._producer.writeEpilogue(e.stats)}))}
/**
	   * Inherit from `Base.prototype`.
	   */
/**
	   * Returns a TAP-safe title of `test`.
	   *
	   * @private
	   * @param {Test} test - Test instance.
	   * @return {String} title with any hash character removed
	   */
function p(e){return e.fullTitle().replace(/#/g,"")}
/**
	   * Writes newline-terminated formatted string to reporter output stream.
	   *
	   * @private
	   * @param {string} format - `printf`-like format string
	   * @param {...*} [varArgs] - Format string arguments
	   */function h(e,t){var r=Array.from(arguments);r[0]+="\n",Dr.stdout.write(l.apply(null,r))}function d(){}
/**
	   * Writes the TAP version to reporter output stream.
	   *
	   * @abstract
	   */
/**
	   * @summary
	   * Constructs a new TAP12Producer.
	   *
	   * @description
	   * Produces output conforming to the TAP12 specification.
	   *
	   * @private
	   * @constructor
	   * @extends TAPProducer
	   * @see {@link https://testanything.org/tap-specification.html|Specification}
	   */
function g(){
/**
	     * Writes that test failed to reporter output stream, with error formatting.
	     * @override
	     */
this.writeFail=function(e,t,r){d.prototype.writeFail.call(this,e,t,r),r.message&&h(r.message.replace(/^/gm,"  ")),r.stack&&h(r.stack.replace(/^/gm,"  "))}}
/**
	   * Inherit from `TAPProducer.prototype`.
	   */
/**
	   * @summary
	   * Constructs a new TAP13Producer.
	   *
	   * @description
	   * Produces output conforming to the TAP13 specification.
	   *
	   * @private
	   * @constructor
	   * @extends TAPProducer
	   * @see {@link https://testanything.org/tap-version-13-specification.html|Specification}
	   */
function m(){function e(e){return Array(e+1).join("  ")}
/**
	     * Writes the TAP version to reporter output stream.
	     * @override
	     */
this.writeVersion=function(){h("TAP version 13")},
/**
	     * Writes that test failed to reporter output stream, with error formatting.
	     * @override
	     */
this.writeFail=function(t,r,n){d.prototype.writeFail.call(this,t,r,n),(null!=n.message||null!=n.stack)&&(h(e(1)+"---"),n.message&&(h(e(2)+"message: |-"),h(n.message.replace(/^/gm,e(3)))),n.stack&&(h(e(2)+"stack: |-"),h(n.stack.replace(/^/gm,e(3)))),h(e(1)+"..."))}}
/**
	   * Inherit from `TAPProducer.prototype`.
	   */e.exports=f,c(f,Wd),d.prototype.writeVersion=function(){},
/**
	   * Writes the plan to reporter output stream.
	   *
	   * @abstract
	   * @param {number} ntests - Number of tests that are planned to run.
	   */
d.prototype.writePlan=function(e){h("%d..%d",1,e)},
/**
	   * Writes that test passed to reporter output stream.
	   *
	   * @abstract
	   * @param {number} n - Index of test that passed.
	   * @param {Test} test - Instance containing test information.
	   */
d.prototype.writePass=function(e,t){h("ok %d %s",e,p(t))},
/**
	   * Writes that test was skipped to reporter output stream.
	   *
	   * @abstract
	   * @param {number} n - Index of test that was skipped.
	   * @param {Test} test - Instance containing test information.
	   */
d.prototype.writePending=function(e,t){h("ok %d %s # SKIP -",e,p(t))},
/**
	   * Writes that test failed to reporter output stream.
	   *
	   * @abstract
	   * @param {number} n - Index of test that failed.
	   * @param {Test} test - Instance containing test information.
	   * @param {Error} err - Reason the test failed.
	   */
d.prototype.writeFail=function(e,t,r){h("not ok %d %s",e,p(t))},
/**
	   * Writes the summary epilogue to reporter output stream.
	   *
	   * @abstract
	   * @param {Object} stats - Object containing run statistics.
	   */
d.prototype.writeEpilogue=function(e){// :TBD: Why is this not counting pending tests?
h("# tests "+(e.passes+e.failures)),h("# pass "+e.passes),// :TBD: Why are we not showing pending results?
h("# fail "+e.failures),this.writePlan(e.passes+e.failures+e.pending)},c(g,d),c(m,d),f.description="TAP-compatible output"})),Zd=r((function(e,t){
/**
	   * @module JSON
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_TEST_PASS,o=r.EVENT_TEST_FAIL,i=r.EVENT_TEST_END,a=r.EVENT_RUN_END,s=r.EVENT_TEST_PENDING;
/**
	   * Constructs a new `JSON` reporter instance.
	   *
	   * @public
	   * @class JSON
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function u(e,t){Wd.call(this,e,t);var r=this,u=[],l=[],f=[],p=[];e.on(i,(function(e){u.push(e)})),e.on(n,(function(e){p.push(e)})),e.on(o,(function(e){f.push(e)})),e.on(s,(function(e){l.push(e)})),e.once(a,(function(){var t={stats:r.stats,tests:u.map(c),pending:l.map(c),failures:f.map(c),passes:p.map(c)};e.testResults=t,Dr.stdout.write(JSON.stringify(t,null,2))}))}
/**
	   * Return a plain-object representation of `test`
	   * free of cyclic properties etc.
	   *
	   * @private
	   * @param {Object} test
	   * @return {Object}
	   */function c(e){var t=e.err||{};return t instanceof Error&&(t=
/**
	   * Transform an Error object into a JSON object.
	   *
	   * @private
	   * @param {Error} err
	   * @return {Object}
	   */
function(e){var t={};return Object.getOwnPropertyNames(e).forEach((function(r){t[r]=e[r]}),e),t}(t)),{title:e.title,fullTitle:e.fullTitle(),file:e.file,duration:e.duration,currentRetry:e.currentRetry(),err:l(t)}}
/**
	   * Replaces any circular references inside `obj` with '[object Object]'
	   *
	   * @private
	   * @param {Object} obj
	   * @return {Object}
	   */function l(e){var t=[];return JSON.parse(JSON.stringify(e,(function(e,r){if("object"===qo(r)&&null!==r){if(-1!==t.indexOf(r))// Instead of going in a circle, we'll print [object Object]
return""+r;t.push(r)}return r})))}e.exports=u,u.description="single JSON object"})),Qd="".repeat||function(e){var t=String(y(this)),r="",n=le(e);if(n<0||n==1/0)throw RangeError("Wrong number of repetitions");for(;n>0;(n>>>=1)&&(t+=t))1&n&&(r+=t);return r},Xd=1..toFixed,eg=Math.floor,tg=function(e,t,r){return 0===t?r:t%2==1?tg(e,t-1,r*e):tg(e*e,t/2,r)},rg=Xd&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!s((function(){// V8 ~ Android 4.3-
Xd.call({})}));// `Number.prototype.toFixed` method
// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed
qe({target:"Number",proto:1,forced:rg},{// eslint-disable-next-line max-statements
toFixed:function(e){var t,r,n,o,i=function(e){if("number"!=typeof e&&"Number"!=d(e))throw TypeError("Incorrect invocation");return+e}(this),a=le(e),s=[0,0,0,0,0,0],u="",c="0",l=function(e,t){for(var r=-1,n=t;++r<6;)n+=e*s[r],s[r]=n%1e7,n=eg(n/1e7)},f=function(e){for(var t=6,r=0;--t>=0;)r+=s[t],s[t]=eg(r/e),r=r%e*1e7},p=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==s[e]){var r=String(s[e]);t=""===t?r:t+Qd.call("0",7-r.length)+r}return t};if(a<0||a>20)throw RangeError("Incorrect fraction digits");// eslint-disable-next-line no-self-compare
if(i!=i)return"NaN";if(i<=-1e21||i>=1e21)return String(i);if(i<0&&(u="-",i=-i),i>1e-21)if(r=(t=function(e){for(var t=0,r=e;r>=4096;)t+=12,r/=4096;for(;r>=2;)t+=1,r/=2;return t}(i*tg(2,69,1))-69)<0?i*tg(2,-t,1):i/tg(2,t,1),r*=4503599627370496,(t=52-t)>0){for(l(0,r),n=a;n>=7;)l(1e7,0),n-=7;for(l(tg(10,n,1),0),n=t-1;n>=23;)f(1<<23),n-=23;f(1<<n),l(1,1),f(2),c=p()}else l(0,r),l(1<<-t,0),c=p()+Qd.call("0",a);return c=a>0?u+((o=c.length)<=a?"0."+Qd.call("0",a-o)+c:c.slice(0,o-a)+"."+c.slice(o-a)):u+c}});
/**
	 @module browser/Progress
	*/
/**
	 * Expose `Progress`.
	 */
var ng=og;
/**
	 * Initialize a new `Progress` indicator.
	 */function og(){this.percent=0,this.size(0),this.fontSize(11),this.font("helvetica, arial, sans-serif")}
/**
	 * Set progress size to `size`.
	 *
	 * @public
	 * @param {number} size
	 * @return {Progress} Progress instance.
	 */og.prototype.size=function(e){return this._size=e,this},
/**
	 * Set text to `text`.
	 *
	 * @public
	 * @param {string} text
	 * @return {Progress} Progress instance.
	 */
og.prototype.text=function(e){return this._text=e,this},
/**
	 * Set font size to `size`.
	 *
	 * @public
	 * @param {number} size
	 * @return {Progress} Progress instance.
	 */
og.prototype.fontSize=function(e){return this._fontSize=e,this},
/**
	 * Set font to `family`.
	 *
	 * @param {string} family
	 * @return {Progress} Progress instance.
	 */
og.prototype.font=function(e){return this._font=e,this},
/**
	 * Update percentage to `n`.
	 *
	 * @param {number} n
	 * @return {Progress} Progress instance.
	 */
og.prototype.update=function(e){return this.percent=e,this},
/**
	 * Draw on `ctx`.
	 *
	 * @param {CanvasRenderingContext2d} ctx
	 * @return {Progress} Progress instance.
	 */
og.prototype.draw=function(e){try{var t=Math.min(this.percent,100),r=this._size,n=r/2,o=n,i=n,a=n-1,s=this._fontSize;e.font=s+"px "+this._font;var u=2*Math.PI*(t/100);e.clearRect(0,0,r,r),// outer circle
e.strokeStyle="#9f9f9f",e.beginPath(),e.arc(o,i,a,0,u,0),e.stroke(),// inner circle
e.strokeStyle="#eee",e.beginPath(),e.arc(o,i,a-1,0,u,1),e.stroke();// text
var c=this._text||(0|t)+"%",l=e.measureText(c).width;e.fillText(c,o-l/2+1,i+s/2-1)}catch(e){// don't fail if we can't render progress
}return this};var ig=r((function(t,r){/* eslint-env browser */
/**
	   * @module HTML
	   */
/**
	   * Module dependencies.
	   */
var n=Md.constants,o=n.EVENT_TEST_PASS,i=n.EVENT_TEST_FAIL,a=n.EVENT_SUITE_BEGIN,s=n.EVENT_SUITE_END,u=n.EVENT_TEST_PENDING,c=Yh.escape,l=e.Date;
/**
	   * Constructs a new `HTML` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function f(e,t){Wd.call(this,e,t);var r,n,f,p=this,v=this.stats,b=h('<ul id="mocha-stats"><li class="progress"><canvas width="40" height="40"></canvas></li><li class="passes"><a href="javascript:void(0);">passes:</a> <em>0</em></li><li class="failures"><a href="javascript:void(0);">failures:</a> <em>0</em></li><li class="duration">duration: <em>0</em>s</li></ul>'),w=b.getElementsByTagName("li"),E=w[1].getElementsByTagName("em")[0],A=w[1].getElementsByTagName("a")[0],T=w[2].getElementsByTagName("em")[0],x=w[2].getElementsByTagName("a")[0],S=w[3].getElementsByTagName("em")[0],_=b.getElementsByTagName("canvas")[0],N=h('<ul id="mocha-report"></ul>'),D=[N],C=document.getElementById("mocha");if(_.getContext){var k=window.devicePixelRatio||1;_.style.width=_.width,_.style.height=_.height,_.width*=k,_.height*=k,(n=_.getContext("2d")).scale(k,k),r=new ng}if(!C)return f="#mocha div missing, add it to your document",void document.body.appendChild(h('<div id="mocha-error">%s</div>',f));// pass toggle
function O(e){// Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.
D[0]&&D[0].appendChild(e)}function R(){// TODO: add to stats
var t=v.tests/e.total*100|0;r&&r.update(t).draw(n);// update stats
var o=new l-v.start;m(E,v.passes),m(T,v.failures),m(S,(o/1e3).toFixed(2))}y(A,"click",(function(e){e.preventDefault(),g();var t=/pass/.test(N.className)?"":" pass";N.className=N.className.replace(/fail|pass/g,"")+t,N.className.trim()&&d("test pass")})),// failure toggle
y(x,"click",(function(e){e.preventDefault(),g();var t=/fail/.test(N.className)?"":" fail";N.className=N.className.replace(/fail|pass/g,"")+t,N.className.trim()&&d("test fail")})),C.appendChild(b),C.appendChild(N),r&&r.size(40),e.on(a,(function(e){if(!e.root){// suite
var t=h('<li class="suite"><h1><a href="%s">%s</a></h1></li>',p.suiteURL(e),c(e.title));// container
D[0].appendChild(t),D.unshift(document.createElement("ul")),t.appendChild(D[0])}})),e.on(s,(function(e){e.root?R():D.shift()})),e.on(o,(function(e){var t=p.testURL(e),r=h('<li class="test pass %e"><h2>%e<span class="duration">%ems</span> <a href="%s" class="replay">&#x2023;</a></h2></li>',e.speed,e.title,e.duration,t);p.addCodeToggle(r,e.body),O(r),R()})),e.on(i,(function(e){var t,r=h('<li class="test fail"><h2>%e <a href="%e" class="replay">&#x2023;</a></h2></li>',e.title,p.testURL(e)),n=e.err.toString();if(// <=IE7 stringifies to [Object Error]. Since it can be overloaded, we
// check for the result of the stringifying.
"[object Error]"===n&&(n=e.err.message),e.err.stack){var o=e.err.stack.indexOf(e.err.message);t=-1===o?e.err.stack:e.err.stack.substr(e.err.message.length+o)}else e.err.sourceURL&&void 0!==e.err.line&&(// Safari doesn't give you a stack. Let's at least provide a source line.
t="\n("+e.err.sourceURL+":"+e.err.line+")");t=t||"",e.err.htmlMessage&&t?r.appendChild(h('<div class="html-error">%s\n<pre class="error">%e</pre></div>',e.err.htmlMessage,t)):e.err.htmlMessage?r.appendChild(h('<div class="html-error">%s</div>',e.err.htmlMessage)):r.appendChild(h('<pre class="error">%e%e</pre>',n,t)),p.addCodeToggle(r,e.body),O(r),R()})),e.on(u,(function(e){O(h('<li class="test pass pending"><h2>%e</h2></li>',e.title)),R()}))}
/**
	   * Makes a URL, preserving querystring ("search") parameters.
	   *
	   * @param {string} s
	   * @return {string} A new URL.
	   */function p(e){var t=window.location.search;// Remove previous grep query parameter if present
return t&&(t=t.replace(/[?&]grep=[^&\s]*/g,"").replace(/^&/,"?")),window.location.pathname+(t?t+"&":"?")+"grep="+encodeURIComponent(Ap(e))}
/**
	   * Provide suite URL.
	   *
	   * @param {Object} [suite]
	   */
/**
	   * Return a DOM fragment from `html`.
	   *
	   * @param {string} html
	   */
function h(e){var t=arguments,r=document.createElement("div"),n=1;return r.innerHTML=e.replace(/%([se])/g,(function(e,r){switch(r){case"s":return String(t[n++]);case"e":return c(t[n++]);// no default
}})),r.firstChild}
/**
	   * Check for suites that do not have elements
	   * with `classname`, and hide them.
	   *
	   * @param {text} classname
	   */function d(e){for(var t=document.getElementsByClassName("suite"),r=0;r<t.length;r++)t[r].getElementsByClassName(e).length||(t[r].className+=" hidden")}
/**
	   * Unhide .hidden suites.
	   */function g(){for(var e=document.getElementsByClassName("suite hidden");e.length>0;)e[0].className=e[0].className.replace("suite hidden","suite")}
/**
	   * Set an element's text contents.
	   *
	   * @param {HTMLElement} el
	   * @param {string} contents
	   */function m(e,t){e.textContent?e.textContent=t:e.innerText=t}
/**
	   * Listen on `event` with callback `fn`.
	   */function y(e,t,r){e.addEventListener?e.addEventListener(t,r,0):e.attachEvent("on"+t,r)}t.exports=f,f.prototype.suiteURL=function(e){return p(e.fullTitle())},
/**
	   * Provide test URL.
	   *
	   * @param {Object} [test]
	   */
f.prototype.testURL=function(e){return p(e.fullTitle())},
/**
	   * Adds code toggle functionality for the provided test's list element.
	   *
	   * @param {HTMLLIElement} el
	   * @param {string} contents
	   */
f.prototype.addCodeToggle=function(e,t){y(e.getElementsByTagName("h2")[0],"click",(function(){r.style.display="none"===r.style.display?"block":"none"}));var r=h("<pre><code>%e</code></pre>",Yh.clean(t));e.appendChild(r),r.style.display="none"},f.browserOnly=1})),ag=r((function(e,t){
/**
	   * @module List
	   */
/**
	   * Module dependencies.
	   */
var r=Yh.inherits,n=Md.constants,o=n.EVENT_RUN_BEGIN,i=n.EVENT_RUN_END,a=n.EVENT_TEST_BEGIN,s=n.EVENT_TEST_FAIL,u=n.EVENT_TEST_PASS,c=n.EVENT_TEST_PENDING,l=Wd.color,f=Wd.cursor;
/**
	   * Constructs a new `List` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function p(e,t){Wd.call(this,e,t);var r=0;e.on(o,(function(){Wd.consoleLog()})),e.on(a,(function(e){Dr.stdout.write(l("pass","    "+e.fullTitle()+": "))})),e.on(c,(function(e){var t=l("checkmark","  -")+l("pending"," %s");Wd.consoleLog(t,e.fullTitle())})),e.on(u,(function(e){var t=l("checkmark","  "+Wd.symbols.ok)+l("pass"," %s: ")+l(e.speed,"%dms");f.CR(),Wd.consoleLog(t,e.fullTitle(),e.duration)})),e.on(s,(function(e){f.CR(),Wd.consoleLog(l("fail","  %d) %s"),++r,e.fullTitle())})),e.once(i,this.epilogue.bind(this))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=p,r(p,Wd),p.description='like "spec" reporter but flat'})),sg=r((function(e,t){
/**
	   * @module Min
	   */
/**
	   * Module dependencies.
	   */
var r=Yh.inherits,n=Md.constants,o=n.EVENT_RUN_END,i=n.EVENT_RUN_BEGIN;
/**
	   * Constructs a new `Min` reporter instance.
	   *
	   * @description
	   * This minimal test reporter is best used with '--watch'.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function a(e,t){Wd.call(this,e,t),e.on(i,(function(){// clear screen
Dr.stdout.write("[2J"),// set cursor position
Dr.stdout.write("[1;3H")})),e.once(o,this.epilogue.bind(this))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=a,r(a,Wd),a.description="essentially just a summary"})),ug=r((function(e,t){
/**
	   * @module Spec
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_RUN_BEGIN,o=r.EVENT_RUN_END,i=r.EVENT_SUITE_BEGIN,a=r.EVENT_SUITE_END,s=r.EVENT_TEST_FAIL,u=r.EVENT_TEST_PASS,c=r.EVENT_TEST_PENDING,l=Yh.inherits,f=Wd.color;
/**
	   * Constructs a new `Spec` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function p(e,t){Wd.call(this,e,t);var r=0,l=0;function p(){return Array(r).join("  ")}e.on(n,(function(){Wd.consoleLog()})),e.on(i,(function(e){++r,Wd.consoleLog(f("suite","%s%s"),p(),e.title)})),e.on(a,(function(){1==--r&&Wd.consoleLog()})),e.on(c,(function(e){var t=p()+f("pending","  - %s");Wd.consoleLog(t,e.title)})),e.on(u,(function(e){var t;"fast"===e.speed?(t=p()+f("checkmark","  "+Wd.symbols.ok)+f("pass"," %s"),Wd.consoleLog(t,e.title)):(t=p()+f("checkmark","  "+Wd.symbols.ok)+f("pass"," %s")+f(e.speed," (%dms)"),Wd.consoleLog(t,e.title,e.duration))})),e.on(s,(function(e){Wd.consoleLog(p()+f("fail","  %d) %s"),++l,e.title)})),e.once(o,this.epilogue.bind(this))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=p,l(p,Wd),p.description="hierarchical & verbose [default]"})),cg=r((function(e,t){
/**
	   * @module Nyan
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=Yh.inherits,o=r.EVENT_RUN_BEGIN,i=r.EVENT_TEST_PENDING,a=r.EVENT_TEST_PASS,s=r.EVENT_RUN_END,u=r.EVENT_TEST_FAIL;
/**
	   * Constructs a new `Nyan` reporter instance.
	   *
	   * @public
	   * @class Nyan
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function c(e,t){Wd.call(this,e,t);var r=this,n=.75*Wd.window.width|0,c=this.nyanCatWidth=11;this.colorIndex=0,this.numberOfLines=4,this.rainbowColors=r.generateColors(),this.scoreboardWidth=5,this.tick=0,this.trajectories=[[],[],[],[]],this.trajectoryWidthMax=n-c,e.on(o,(function(){Wd.cursor.hide(),r.draw()})),e.on(i,(function(){r.draw()})),e.on(a,(function(){r.draw()})),e.on(u,(function(){r.draw()})),e.once(s,(function(){Wd.cursor.show();for(var e=0;e<r.numberOfLines;e++)l("\n");r.epilogue()}))}
/**
	   * Inherit from `Base.prototype`.
	   */
/**
	   * Stdout helper.
	   *
	   * @param {string} string A message to write to stdout.
	   */
function l(e){Dr.stdout.write(e)}e.exports=c,n(c,Wd),
/**
	   * Draw the nyan cat
	   *
	   * @private
	   */
c.prototype.draw=function(){this.appendRainbow(),this.drawScoreboard(),this.drawRainbow(),this.drawNyanCat(),this.tick=!this.tick},
/**
	   * Draw the "scoreboard" showing the number
	   * of passes, failures and pending tests.
	   *
	   * @private
	   */
c.prototype.drawScoreboard=function(){var e=this.stats;function t(e,t){l(" "),l(Wd.color(e,t)),l("\n")}t("green",e.passes),t("fail",e.failures),t("pending",e.pending),l("\n"),this.cursorUp(this.numberOfLines)},
/**
	   * Append the rainbow.
	   *
	   * @private
	   */
c.prototype.appendRainbow=function(){for(var e=this.tick?"_":"-",t=this.rainbowify(e),r=0;r<this.numberOfLines;r++){var n=this.trajectories[r];n.length>=this.trajectoryWidthMax&&n.shift(),n.push(t)}},
/**
	   * Draw the rainbow.
	   *
	   * @private
	   */
c.prototype.drawRainbow=function(){var e=this;this.trajectories.forEach((function(t){l("["+e.scoreboardWidth+"C"),l(t.join("")),l("\n")})),this.cursorUp(this.numberOfLines)},
/**
	   * Draw the nyan cat
	   *
	   * @private
	   */
c.prototype.drawNyanCat=function(){var e="["+(this.scoreboardWidth+this.trajectories[0].length)+"C",t="";l(e),l("_,------,"),l("\n"),l(e),l("_|"+(t=this.tick?"  ":"   ")+"/\\_/\\ "),l("\n"),l(e),t=this.tick?"_":"__",l((this.tick?"~":"^")+"|"+t+this.face()+" "),l("\n"),l(e),l((t=this.tick?" ":"  ")+'""  "" '),l("\n"),this.cursorUp(this.numberOfLines)},
/**
	   * Draw nyan cat face.
	   *
	   * @private
	   * @return {string}
	   */
c.prototype.face=function(){var e=this.stats;return e.failures?"( x .x)":e.pending?"( o .o)":e.passes?"( ^ .^)":"( - .-)"},
/**
	   * Move cursor up `n`.
	   *
	   * @private
	   * @param {number} n
	   */
c.prototype.cursorUp=function(e){l("["+e+"A")},
/**
	   * Move cursor down `n`.
	   *
	   * @private
	   * @param {number} n
	   */
c.prototype.cursorDown=function(e){l("["+e+"B")},
/**
	   * Generate rainbow colors.
	   *
	   * @private
	   * @return {Array}
	   */
c.prototype.generateColors=function(){for(var e=[],t=0;t<42;t++){var r=Math.floor(Math.PI/3),n=t*(1/6),o=Math.floor(3*Math.sin(n)+3),i=Math.floor(3*Math.sin(n+2*r)+3),a=Math.floor(3*Math.sin(n+4*r)+3);e.push(36*o+6*i+a+16)}return e},
/**
	   * Apply rainbow to the given `str`.
	   *
	   * @private
	   * @param {string} str
	   * @return {string}
	   */
c.prototype.rainbowify=function(e){if(!Wd.useColors)return e;var t=this.rainbowColors[this.colorIndex%this.rainbowColors.length];return this.colorIndex+=1,"[38;5;"+t+"m"+e+"[0m"},c.description='"nyan cat"'})),lg={},fg=r((function(t,r){
/**
	   * @module XUnit
	   */
/**
	   * Module dependencies.
	   */
var n=rd.createUnsupportedError,o=Md.constants,i=o.EVENT_TEST_PASS,a=o.EVENT_TEST_FAIL,s=o.EVENT_RUN_END,u=o.EVENT_TEST_PENDING,c=fd.constants.STATE_FAILED,l=Yh.inherits,f=Yh.escape,p=e.Date;
/**
	   * Constructs a new `XUnit` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function h(e,t){Wd.call(this,e,t);var r,o=this.stats,c=[],l=this;if(t&&t.reporterOptions){if(t.reporterOptions.output){if(!lg.createWriteStream)throw n("file output not supported in browser");lg.mkdirSync(Cp.dirname(t.reporterOptions.output),{recursive:1}),l.fileStream=lg.createWriteStream(t.reporterOptions.output)}// get the suite name from the reporter options (if provided)
r=t.reporterOptions.suiteName}// fall back to the default suite name
r=r||"Mocha Tests",e.on(u,(function(e){c.push(e)})),e.on(i,(function(e){c.push(e)})),e.on(a,(function(e){c.push(e)})),e.once(s,(function(){l.write(d("testsuite",{name:r,tests:o.tests,failures:0,errors:o.failures,skipped:o.tests-o.failures-o.passes,timestamp:(new p).toUTCString(),time:o.duration/1e3||0},0)),c.forEach((function(e){l.test(e)})),l.write("</testsuite>")}))}
/**
	   * Inherit from `Base.prototype`.
	   */
/**
	   * HTML tag helper.
	   *
	   * @param name
	   * @param attrs
	   * @param close
	   * @param content
	   * @return {string}
	   */
function d(e,t,r,n){var o,i=r?"/>":">",a=[];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&a.push(s+'="'+f(t[s])+'"');return o="<"+e+(a.length?" "+a.join(" "):"")+i,n&&(o+=n+"</"+e+i),o}t.exports=h,l(h,Wd),
/**
	   * Override done to close the stream (if it's a file).
	   *
	   * @param failures
	   * @param {Function} fn
	   */
h.prototype.done=function(e,t){this.fileStream?this.fileStream.end((function(){t(e)})):t(e)},
/**
	   * Write out the given line.
	   *
	   * @param {string} line
	   */
h.prototype.write=function(e){this.fileStream?this.fileStream.write(e+"\n"):"object"===qo(Dr)&&Dr.stdout?Dr.stdout.write(e+"\n"):Wd.consoleLog(e)},
/**
	   * Output tag for the given `test.`
	   *
	   * @param {Test} test
	   */
h.prototype.test=function(e){Wd.useColors=0;var t={classname:e.parent.fullTitle(),name:e.title,time:e.duration/1e3||0};if(e.state===c){var r=e.err,n=!Wd.hideDiff&&Wd.showDiff(r)?"\n"+Wd.generateDiff(r.actual,r.expected):"";this.write(d("testcase",t,0,d("failure",{},0,f(r.message)+f(n)+"\n"+f(r.stack))))}else e.isPending()?this.write(d("testcase",t,0,d("skipped",{},1))):this.write(d("testcase",t,1))},h.description="XUnit-compatible XML output"})),pg=r((function(e,t){
/**
	   * @module Markdown
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_RUN_END,o=r.EVENT_SUITE_BEGIN,i=r.EVENT_SUITE_END,a=r.EVENT_TEST_PASS;
/**
	   * Constructs a new `Markdown` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function s(e,t){Wd.call(this,e,t);var r=0,s="";function u(e){return function e(t,r){++r;var n,o="";for(var i in t)"suite"!==i&&("$"!==i&&(n=" - ["+i.substring(1)+"]",n+="(#"+Yh.slug(t[i].suite.fullTitle())+")\n",o+=Array(r).join("  ")+n),o+=e(t[i],r));return o}(function e(t,r){var n=r,o="$"+t.title;return r=r[o]=r[o]||{suite:t},t.suites.forEach((function(t){e(t,r)})),n}(e,{}),0)}u(e.suite),e.on(o,(function(e){++r;var t,n=Yh.slug(e.fullTitle());s+='<a name="'+n+'"></a>\n',s+=(t=e.title,Array(r).join("#")+" "+t+"\n")})),e.on(i,(function(){--r})),e.on(a,(function(e){var t=Yh.clean(e.body);s+=e.title+".\n",s+="\n```js\n",s+=t+"\n",s+="```\n\n"})),e.once(n,(function(){Dr.stdout.write("# TOC\n"),Dr.stdout.write(u(e.suite)),Dr.stdout.write(s)}))}e.exports=s,s.description="GitHub Flavored Markdown"})),hg=r((function(e,t){
/**
	   * @module Progress
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_RUN_BEGIN,o=r.EVENT_TEST_END,i=r.EVENT_RUN_END,a=Yh.inherits,s=Wd.color,u=Wd.cursor;
/**
	   * Constructs a new `Progress` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function c(e,t){Wd.call(this,e,t);var r=this,a=.5*Wd.window.width|0,c=e.total,l=0,f=-1,p=(// default chars
t=t||{}).reporterOptions||{};t.open=p.open||"[",t.complete=p.complete||"▬",t.incomplete=p.incomplete||Wd.symbols.dot,t.close=p.close||"]",t.verbose=p.verbose||0,// tests started
e.on(n,(function(){Dr.stdout.write("\n"),u.hide()})),// tests complete
e.on(o,(function(){l++;var e=a*(l/c)|0,r=a-e;(e!==f||t.verbose)&&(f=e,u.CR(),Dr.stdout.write("[J"),Dr.stdout.write(s("progress","  "+t.open)),Dr.stdout.write(Array(e).join(t.complete)),Dr.stdout.write(Array(r).join(t.incomplete)),Dr.stdout.write(s("progress",t.close)),t.verbose&&Dr.stdout.write(s("progress"," "+l+" of "+c)))})),// tests are complete, output some stats
// and the failures if any
e.once(i,(function(){u.show(),Dr.stdout.write("\n"),r.epilogue()}))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=c,
/**
	   * General progress bar color.
	   */
Wd.colors.progress=90,a(c,Wd),c.description="a progress bar"})),dg=r((function(e,t){
/**
	   * @module Landing
	   */
/**
	   * Module dependencies.
	   */
var r=Yh.inherits,n=Md.constants,o=n.EVENT_RUN_BEGIN,i=n.EVENT_RUN_END,a=n.EVENT_TEST_END,s=fd.constants.STATE_FAILED,u=Wd.cursor,c=Wd.color;
/**
	   * Constructs a new `Landing` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function l(e,t){Wd.call(this,e,t);var r=this,n=.75*Wd.window.width|0,l=Dr.stdout,f=c("plane","✈"),p=-1,h=0,d=0;function g(){var e=Array(n).join("-");return"  "+c("runway",e)}e.on(o,(function(){l.write("\n\n\n  "),u.hide()})),e.on(a,(function(e){// check if the plane crashed
var t=-1===p?n*++h/++d|0:p;// show the crash
e.state===s&&(f=c("plane crash","✈"),p=t),// render landing strip
l.write("["+(n+1)+"D[2A"),l.write(g()),l.write("\n  "),l.write(c("runway",Array(t).join("⋅"))),l.write(f),l.write(c("runway",Array(n-t).join("⋅")+"\n")),l.write(g()),l.write("[0m")})),e.once(i,(function(){u.show(),Dr.stdout.write("\n"),r.epilogue()})),// if cursor is hidden when we ctrl-C, then it will remain hidden unless...
Dr.once("SIGINT",(function(){u.show(),gr((function(){Dr.kill(Dr.pid,"SIGINT")}))}))}
/**
	   * Inherit from `Base.prototype`.
	   */e.exports=l,
/**
	   * Airplane color.
	   */
Wd.colors.plane=0,
/**
	   * Airplane crash color.
	   */
Wd.colors["plane crash"]=31,
/**
	   * Runway color.
	   */
Wd.colors.runway=90,r(l,Wd),l.description="Unicode landing strip"})),gg=r((function(e,t){
/**
	   * @module JSONStream
	   */
/**
	   * Module dependencies.
	   */
var r=Md.constants,n=r.EVENT_TEST_PASS,o=r.EVENT_TEST_FAIL,i=r.EVENT_RUN_BEGIN,a=r.EVENT_RUN_END;
/**
	   * Constructs a new `JSONStream` reporter instance.
	   *
	   * @public
	   * @class
	   * @memberof Mocha.reporters
	   * @extends Mocha.reporters.Base
	   * @param {Runner} runner - Instance triggers reporter actions.
	   * @param {Object} [options] - runner options
	   */
function s(e,t){Wd.call(this,e,t);var r=this,s=e.total;e.once(i,(function(){u(["start",{total:s}])})),e.on(n,(function(e){u(["pass",c(e)])})),e.on(o,(function(e,t){(e=c(e)).err=t.message,e.stack=t.stack||null,u(["fail",e])})),e.once(a,(function(){u(["end",r.stats])}))}
/**
	   * Mocha event to be written to the output stream.
	   * @typedef {Array} JSONStream~MochaEvent
	   */
/**
	   * Writes Mocha event to reporter output stream.
	   *
	   * @private
	   * @param {JSONStream~MochaEvent} event - Mocha event to be output.
	   */function u(e){Dr.stdout.write(JSON.stringify(e)+"\n")}
/**
	   * Returns an object literal representation of `test`
	   * free of cyclic properties, etc.
	   *
	   * @private
	   * @param {Test} test - Instance used as data source.
	   * @return {Object} object containing pared-down test instance data
	   */function c(e){return{title:e.title,fullTitle:e.fullTitle(),file:e.file,duration:e.duration,currentRetry:e.currentRetry()}}e.exports=s,s.description="newline delimited JSON events"})),mg=r((function(e,t){// for dynamic (try/catch) requires, which Browserify doesn't handle.
t.Base=t.base=Wd,t.Dot=t.dot=$d,t.Doc=t.doc=Jd,t.TAP=t.tap=Kd,t.JSON=t.json=Zd,t.HTML=t.html=ig,t.List=t.list=ag,t.Min=t.min=sg,t.Spec=t.spec=ug,t.Nyan=t.nyan=cg,t.XUnit=t.xunit=fg,t.Markdown=t.markdown=pg,t.Progress=t.progress=hg,t.Landing=t.landing=dg,t.JSONStream=t["json-stream"]=gg})),yg="https://ibin.co/4QuRuGjXvl36.png",vg={name:"mocha",version:"8.1.1",homepage:"https://mochajs.org/",notifyLogo:yg},bg=n(Object.freeze({__proto__:null,name:"mocha",version:"8.1.1",homepage:"https://mochajs.org/",notifyLogo:yg,default:vg})),wg=e.Date,Eg=e.setTimeout,Ag=Md.constants.EVENT_RUN_END,Tg=Yh.isBrowser;
/**
	 * @summary
	 * Determines if notification should proceed.
	 *
	 * @description
	 * Notification shall <strong>not</strong> proceed unless `value` is true.
	 *
	 * `value` will equal one of:
	 * <ul>
	 *   <li><code>true</code> (from `isPermitted`)</li>
	 *   <li><code>false</code> (from `isPermitted`)</li>
	 *   <li><code>undefined</code> (from `Promise.race`)</li>
	 * </ul>
	 *
	 * @private
	 * @param {boolean|undefined} value - Determines if notification permissible.
	 * @returns {Promise<undefined>} Notification can proceed
	 */
function xg(e){if(!e){var t="not permitted by user ("+(0==e?"blocked":"unacknowledged")+")";return Promise.reject(new Error(t))}return Promise.resolve()}
/**
	 * Displays the notification.
	 *
	 * @private
	 * @param {Runner} runner - Runner instance.
	 */
/**
	 * As notifications are tangential to our purpose, just log the error.
	 *
	 * @private
	 * @param {Error} err - Why notification didn't happen.
	 */
function Sg(e){console.error("notification error:",e.message)}var _g=function(){var e="Notification"in window,t="function"==typeof Promise;return Tg()&&e&&t},Ng=function(e){var t={granted:function(){return Promise.resolve(1)},denied:function(){return Promise.resolve(0)},default:function(){return Notification.requestPermission().then((function(e){return"granted"===e}))}}[Notification.permission]();
/**
	   * Attempt notification.
	   */e.once(Ag,(function(){// If user hasn't responded yet... "No notification for you!" (Seinfeld)
Promise.race([t,Promise.resolve(void 0)]).then(xg).then((function(){!function(e){var t,r,n,o=e.stats,i={cross:"❌",tick:"✅"},a=bg.notifyLogo;o.failures?(t=o.failures+" of "+o.tests+" tests failed",r=i.cross+" "+t,n="Failed"):(t=o.passes+" tests passed in "+o.duration+"ms",r=i.tick+" "+t,n="Passed");// Send notification
var s={badge:a,body:r,dir:"ltr",icon:a,lang:"en-US",name:"mocha",requireInteraction:0,timestamp:wg.now()},u=new Notification(n,s);Eg(u.close.bind(u),4e3)}(e)})).catch(Sg)}))},Dg=["js","cjs","mjs"],Cg={diff:1,extension:Dg,package:"./package.json",reporter:"spec",slow:75,timeout:2e3,ui:"bdd","watch-ignore":["node_modules",".git"]},kg=Object.freeze({__proto__:null,diff:1,extension:Dg,reporter:"spec",slow:75,timeout:2e3,ui:"bdd",default:Cg}),Og=Md.constants,Rg=Og.EVENT_TEST_PASS,Lg=Og.EVENT_TEST_FAIL,qg=Og.EVENT_SUITE_BEGIN,Ig=Og.EVENT_RUN_BEGIN,Bg=Og.EVENT_TEST_PENDING,Pg=Og.EVENT_RUN_END,jg=Og.EVENT_TEST_END,Fg=e.Date,Ug=
/**
	 * Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.
	 *
	 * @private
	 * @param {Runner} runner - Runner instance
	 * @throws {TypeError} If falsy `runner`
	 */
function(e){
/**
	   * @type StatsCollector
	   */
var t={suites:0,tests:0,passes:0,pending:0,failures:0};if(!e)throw new TypeError("Missing runner argument");e.stats=t,e.once(Ig,(function(){t.start=new Fg})),e.on(qg,(function(e){e.root||t.suites++})),e.on(Rg,(function(){t.passes++})),e.on(Lg,(function(){t.failures++})),e.on(Bg,(function(){t.pending++})),e.on(jg,(function(){t.tests++})),e.once(Pg,(function(){t.end=new Fg,t.duration=t.end-t.start}))},Vg=rd.createInvalidArgumentTypeError,Mg=Yh.isString,Hg=zg;
/**
	 * Initialize a new `Test` with the given `title` and callback `fn`.
	 *
	 * @public
	 * @class
	 * @extends Runnable
	 * @param {String} title - Test title (required)
	 * @param {Function} [fn] - Test callback.  If omitted, the Test is considered "pending"
	 */
function zg(e,t){if(!Mg(e))throw Vg('Test argument "title" should be a string. Received type "'+qo(e)+'"',"title","string");this.type="test",fd.call(this,e,t),this.reset()}
/**
	 * Inherit from `Runnable.prototype`.
	 */Yh.inherits(zg,fd),
/**
	 * Resets the state initially or for a next run.
	 */
zg.prototype.reset=function(){fd.prototype.reset.call(this),this.pending=!this.fn,delete this.state},
/**
	 * Set or get retried test
	 *
	 * @private
	 */
zg.prototype.retriedTest=function(e){if(!arguments.length)return this._retriedTest;this._retriedTest=e},
/**
	 * Add test to the list of tests marked `only`.
	 *
	 * @private
	 */
zg.prototype.markOnly=function(){this.parent.appendOnlyTest(this)},zg.prototype.clone=function(){var e=new zg(this.title,this.fn);return e.timeout(this.timeout()),e.slow(this.slow()),e.retries(this.retries()),e.currentRetry(this.currentRetry()),e.retriedTest(this.retriedTest()||this),e.globals(this.globals()),e.parent=this.parent,e.file=this.file,e.ctx=this.ctx,e},
/**
	 * Returns an minimal object suitable for transmission over IPC.
	 * Functions are represented by keys beginning with `$$`.
	 * @private
	 * @returns {Object}
	 */
zg.prototype.serialize=function(){return{$$currentRetry:this._currentRetry,$$fullTitle:this.fullTitle(),$$isPending:this.pending,$$retriedTest:this._retriedTest||null,$$slow:this._slow,$$titlePath:this.titlePath(),body:this.body,duration:this.duration,err:this.err,parent:{$$fullTitle:this.parent.fullTitle()},speed:this.speed,state:this.state,title:this.title,type:this.type,file:this.file}};
/**
	 @module interfaces/common
	*/
var Gg=rd.createMissingArgumentError,Yg=rd.createUnsupportedError,Wg=rd.createForbiddenExclusivityError,$g=function(e,t,r){return{
/**
	     * This is only present if flag --delay is passed into Mocha. It triggers
	     * root suite execution.
	     *
	     * @param {Suite} suite The root suite.
	     * @return {Function} A function which runs the root suite
	     */
runWithSuite:function(e){return function(){e.run()}},
/**
	     * Execute before running tests.
	     *
	     * @param {string} name
	     * @param {Function} fn
	     */
before:function(t,r){e[0].beforeAll(t,r)},
/**
	     * Execute after running tests.
	     *
	     * @param {string} name
	     * @param {Function} fn
	     */
after:function(t,r){e[0].afterAll(t,r)},
/**
	     * Execute before each test case.
	     *
	     * @param {string} name
	     * @param {Function} fn
	     */
beforeEach:function(t,r){e[0].beforeEach(t,r)},
/**
	     * Execute after each test case.
	     *
	     * @param {string} name
	     * @param {Function} fn
	     */
afterEach:function(t,r){e[0].afterEach(t,r)},suite:{
/**
	       * Create an exclusive Suite; convenience function
	       * See docstring for create() below.
	       *
	       * @param {Object} opts
	       * @returns {Suite}
	       */
only:function(e){if(r.options.forbidOnly)throw Wg(r);return e.isOnly=1,this.create(e)},
/**
	       * Create a Suite, but skip it; convenience function
	       * See docstring for create() below.
	       *
	       * @param {Object} opts
	       * @returns {Suite}
	       */
skip:function(e){return e.pending=1,this.create(e)},
/**
	       * Creates a suite.
	       *
	       * @param {Object} opts Options
	       * @param {string} opts.title Title of Suite
	       * @param {Function} [opts.fn] Suite Function (not always applicable)
	       * @param {boolean} [opts.pending] Is Suite pending?
	       * @param {string} [opts.file] Filepath where this Suite resides
	       * @param {boolean} [opts.isOnly] Is Suite exclusive?
	       * @returns {Suite}
	       */
create:function(t){var n=wd.create(e[0],t.title);if(n.pending=Boolean(t.pending),n.file=t.file,e.unshift(n),t.isOnly&&n.markOnly(),n.pending&&r.options.forbidPending&&
/**
	   * Check if the suite should be tested.
	   *
	   * @private
	   * @param {Suite} suite - suite to check
	   * @returns {boolean}
	   */
function(e){return!r.options.grep||r.options.grep&&r.options.grep.test(e.fullTitle())&&!r.options.invert}(n))throw Yg("Pending test forbidden");if("function"==typeof t.fn)t.fn.call(n),e.shift();else{if(void 0===t.fn&&!n.pending)throw Gg('Suite "'+n.fullTitle()+'" was defined but no callback was supplied. Supply a callback or explicitly skip the suite.',"callback","function");!t.fn&&n.pending&&e.shift()}return n}},test:{
/**
	       * Exclusive test-case.
	       *
	       * @param {Object} mocha
	       * @param {Function} test
	       * @returns {*}
	       */
only:function(e,t){if(e.options.forbidOnly)throw Wg(e);return t.markOnly(),t},
/**
	       * Pending test case.
	       *
	       * @param {string} title
	       */
skip:function(e){t.test(e)},
/**
	       * Number of retry attempts
	       *
	       * @param {number} n
	       */
retries:function(e){t.retries(e)}}}},Jg=wd.constants.EVENT_FILE_PRE_REQUIRE,Kg=function(e){var t=[e];e.on(Jg,(function(r,n,o){var i=$g(t,r,o);r.before=i.before,r.after=i.after,r.beforeEach=i.beforeEach,r.afterEach=i.afterEach,r.run=o.options.delay&&i.runWithSuite(e),
/**
	     * Describe a "suite" with the given `title`
	     * and callback `fn` containing nested suites
	     * and/or tests.
	     */
r.describe=r.context=function(e,t){return i.suite.create({title:e,file:n,fn:t})},
/**
	     * Pending describe.
	     */
r.xdescribe=r.xcontext=r.describe.skip=function(e,t){return i.suite.skip({title:e,file:n,fn:t})},
/**
	     * Exclusive suite.
	     */
r.describe.only=function(e,t){return i.suite.only({title:e,file:n,fn:t})},
/**
	     * Describe a specification or test-case
	     * with the given `title` and callback `fn`
	     * acting as a thunk.
	     */
r.it=r.specify=function(e,r){var o=t[0];o.isPending()&&(r=null);var i=new Hg(e,r);return i.file=n,o.addTest(i),i},
/**
	     * Exclusive test-case.
	     */
r.it.only=function(e,t){return i.test.only(o,r.it(e,t))},
/**
	     * Pending test case.
	     */
r.xit=r.xspecify=r.it.skip=function(e){return r.it(e)},
/**
	     * Number of attempts to retry.
	     */
r.it.retries=function(e){r.retries(e)}}))};Kg.description="BDD or RSpec style [default]";var Zg=wd.constants.EVENT_FILE_PRE_REQUIRE,Qg=function(e){var t=[e];e.on(Zg,(function(r,n,o){var i=$g(t,r,o);r.setup=i.beforeEach,r.teardown=i.afterEach,r.suiteSetup=i.before,r.suiteTeardown=i.after,r.run=o.options.delay&&i.runWithSuite(e),
/**
	     * Describe a "suite" with the given `title` and callback `fn` containing
	     * nested suites and/or tests.
	     */
r.suite=function(e,t){return i.suite.create({title:e,file:n,fn:t})},
/**
	     * Pending suite.
	     */
r.suite.skip=function(e,t){return i.suite.skip({title:e,file:n,fn:t})},
/**
	     * Exclusive test-case.
	     */
r.suite.only=function(e,t){return i.suite.only({title:e,file:n,fn:t})},
/**
	     * Describe a specification or test-case with the given `title` and
	     * callback `fn` acting as a thunk.
	     */
r.test=function(e,r){var o=t[0];o.isPending()&&(r=null);var i=new Hg(e,r);return i.file=n,o.addTest(i),i},
/**
	     * Exclusive test-case.
	     */
r.test.only=function(e,t){return i.test.only(o,r.test(e,t))},r.test.skip=i.test.skip,r.test.retries=i.test.retries}))};
/**
	 * TDD-style interface:
	 *
	 *      suite('Array', function() {
	 *        suite('#indexOf()', function() {
	 *          suiteSetup(function() {
	 *
	 *          });
	 *
	 *          test('should return -1 when not present', function() {
	 *
	 *          });
	 *
	 *          test('should return the index when present', function() {
	 *
	 *          });
	 *
	 *          suiteTeardown(function() {
	 *
	 *          });
	 *        });
	 *      });
	 *
	 * @param {Suite} suite Root suite.
	 */Qg.description='traditional "suite"/"test" instead of BDD\'s "describe"/"it"';var Xg=wd.constants.EVENT_FILE_PRE_REQUIRE,em=function(e){var t=[e];e.on(Xg,(function(r,n,o){var i=$g(t,r,o);r.before=i.before,r.after=i.after,r.beforeEach=i.beforeEach,r.afterEach=i.afterEach,r.run=o.options.delay&&i.runWithSuite(e),
/**
	     * Describe a "suite" with the given `title`.
	     */
r.suite=function(e){return t.length>1&&t.shift(),i.suite.create({title:e,file:n,fn:0})},
/**
	     * Exclusive Suite.
	     */
r.suite.only=function(e){return t.length>1&&t.shift(),i.suite.only({title:e,file:n,fn:0})},
/**
	     * Describe a specification or test-case
	     * with the given `title` and callback `fn`
	     * acting as a thunk.
	     */
r.test=function(e,r){var o=new Hg(e,r);return o.file=n,t[0].addTest(o),o},
/**
	     * Exclusive test-case.
	     */
r.test.only=function(e,t){return i.test.only(o,r.test(e,t))},r.test.skip=i.test.skip,r.test.retries=i.test.retries}))};
/**
	 * QUnit-style interface:
	 *
	 *     suite('Array');
	 *
	 *     test('#length', function() {
	 *       var arr = [1,2,3];
	 *       ok(arr.length == 3);
	 *     });
	 *
	 *     test('#indexOf()', function() {
	 *       var arr = [1,2,3];
	 *       ok(arr.indexOf(1) == 0);
	 *       ok(arr.indexOf(2) == 1);
	 *       ok(arr.indexOf(3) == 2);
	 *     });
	 *
	 *     suite('String');
	 *
	 *     test('#length', function() {
	 *       ok('foo'.length == 3);
	 *     });
	 *
	 * @param {Suite} suite Root suite.
	 */em.description="QUnit style";
/**
	 * Exports-style (as Node.js module) interface:
	 *
	 *     exports.Array = {
	 *       '#indexOf()': {
	 *         'should return -1 when the value is not present': function() {
	 *
	 *         },
	 *
	 *         'should return the correct index when the value is present': function() {
	 *
	 *         }
	 *       }
	 *     };
	 *
	 * @param {Suite} suite Root suite.
	 */
var tm=function(e){var t=[e];e.on(wd.constants.EVENT_FILE_REQUIRE,(function e(r,n){var o;for(var i in r)if("function"==typeof r[i]){var a=r[i];switch(i){case"before":t[0].beforeAll(a);break;case"after":t[0].afterAll(a);break;case"beforeEach":t[0].beforeEach(a);break;case"afterEach":t[0].afterEach(a);break;default:var s=new Hg(i,a);s.file=n,t[0].addTest(s)}}else o=wd.create(t[0],i),t.unshift(o),e(r[i],n),t.shift()}))};tm.description='Node.js module ("exports") style';var rm={bdd:Kg,tdd:Qg,qunit:em,exports:tm},nm=om;
/**
	 * Initialize a new `Context`.
	 *
	 * @private
	 */
function om(){}
/**
	 * Set or get the context `Runnable` to `runnable`.
	 *
	 * @private
	 * @param {Runnable} runnable
	 * @return {Context} context
	 */om.prototype.runnable=function(e){return arguments.length?(this.test=this._runnable=e,this):this._runnable},
/**
	 * Set or get test timeout `ms`.
	 *
	 * @private
	 * @param {number} ms
	 * @return {Context} self
	 */
om.prototype.timeout=function(e){return arguments.length?(this.runnable().timeout(e),this):this.runnable().timeout()},
/**
	 * Set or get test slowness threshold `ms`.
	 *
	 * @private
	 * @param {number} ms
	 * @return {Context} self
	 */
om.prototype.slow=function(e){return arguments.length?(this.runnable().slow(e),this):this.runnable().slow()},
/**
	 * Mark a test as skipped.
	 *
	 * @private
	 * @throws Pending
	 */
om.prototype.skip=function(){this.runnable().skip()},
/**
	 * Set or get a number of allowed retries on failed tests
	 *
	 * @private
	 * @param {number} n
	 * @return {Context} self
	 */
om.prototype.retries=function(e){return arguments.length?(this.runnable().retries(e),this):this.runnable().retries()};var im=n(kg),am=r((function(t,r){
/*!
	   * mocha
	   * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>
	   * MIT Licensed
	   */
var n=Yh.supportsEsModules(1)?Yd:void 0,i=rd.createInvalidReporterError,a=rd.createInvalidInterfaceError,s=rd.createMochaInstanceAlreadyDisposedError,u=rd.createMochaInstanceAlreadyRunningError,c=wd.constants.EVENT_FILE_PRE_REQUIRE,l=wd.constants.EVENT_FILE_POST_REQUIRE,f=wd.constants.EVENT_FILE_REQUIRE,p=Yh.sQuote,h=Kh("mocha:mocha");r=t.exports=m;
/**
	   * A Mocha instance is a finite state machine.
	   * These are the states it can be in.
	   * @private
	   */
var d=Yh.defineConstants({
/**
	     * Initial state of the mocha instance
	     * @private
	     */
INIT:"init",
/**
	     * Mocha instance is running tests
	     * @private
	     */
RUNNING:"running",
/**
	     * Mocha instance is done running tests and references to test functions and hooks are cleaned.
	     * You can reset this state by unloading the test files.
	     * @private
	     */
REFERENCES_CLEANED:"referencesCleaned",
/**
	     * Mocha instance is disposed and can no longer be used.
	     * @private
	     */
DISPOSED:"disposed"});
/**
	   * To require local UIs and reporters when running in node.
	   */if(!Yh.isBrowser()&&void 0!==t.paths){var g=Yh.cwd();t.paths.push(g,Cp.join(g,"node_modules"))}
/**
	   * Expose internals.
	   * @private
	   */
/**
	   * Constructs a new Mocha instance with `options`.
	   *
	   * @public
	   * @class Mocha
	   * @param {Object} [options] - Settings object.
	   * @param {boolean} [options.allowUncaught] - Propagate uncaught errors?
	   * @param {boolean} [options.asyncOnly] - Force `done` callback or promise?
	   * @param {boolean} [options.bail] - Bail after first test failure?
	   * @param {boolean} [options.checkLeaks] - Check for global variable leaks?
	   * @param {boolean} [options.color] - Color TTY output from reporter?
	   * @param {boolean} [options.delay] - Delay root suite execution?
	   * @param {boolean} [options.diff] - Show diff on failure?
	   * @param {string} [options.fgrep] - Test filter given string.
	   * @param {boolean} [options.forbidOnly] - Tests marked `only` fail the suite?
	   * @param {boolean} [options.forbidPending] - Pending tests fail the suite?
	   * @param {boolean} [options.fullTrace] - Full stacktrace upon failure?
	   * @param {string[]} [options.global] - Variables expected in global scope.
	   * @param {RegExp|string} [options.grep] - Test filter given regular expression.
	   * @param {boolean} [options.growl] - Enable desktop notifications?
	   * @param {boolean} [options.inlineDiffs] - Display inline diffs?
	   * @param {boolean} [options.invert] - Invert test filter matches?
	   * @param {boolean} [options.noHighlighting] - Disable syntax highlighting?
	   * @param {string|constructor} [options.reporter] - Reporter name or constructor.
	   * @param {Object} [options.reporterOption] - Reporter settings object.
	   * @param {number} [options.retries] - Number of times to retry failed tests.
	   * @param {number} [options.slow] - Slow threshold value.
	   * @param {number|string} [options.timeout] - Timeout threshold value.
	   * @param {string} [options.ui] - Interface name.
	   * @param {boolean} [options.parallel] - Run jobs in parallel
	   * @param {number} [options.jobs] - Max number of worker processes for parallel runs
	   * @param {MochaRootHookObject} [options.rootHooks] - Hooks to bootstrap the root
	   * suite with
	   * @param {boolean} [options.isWorker] - Should be `true` if `Mocha` process is running in a worker process.
	   */
function m(e){e=Yh.assign({},im,e||{}),this.files=[],this.options=e,// root suite
this.suite=new r.Suite("",new r.Context,1),this._cleanReferencesAfterRun=1,this._state=d.INIT,this.grep(e.grep).fgrep(e.fgrep).ui(e.ui).reporter(e.reporter,e.reporterOption||e.reporterOptions).slow(e.slow).global(e.global),// this guard exists because Suite#timeout does not consider `undefined` to be valid input
void 0!==e.timeout&&this.timeout(0==e.timeout?0:e.timeout),"retries"in e&&this.retries(e.retries),["allowUncaught","asyncOnly","bail","checkLeaks","color","delay","diff","forbidOnly","forbidPending","fullTrace","growl","inlineDiffs","invert"].forEach((function(t){e[t]&&this[t]()}),this),e.rootHooks&&this.rootHooks(e.rootHooks)
/**
	     * The class which we'll instantiate in {@link Mocha#run}.  Defaults to
	     * {@link Runner} in serial mode; changes in parallel mode.
	     * @memberof Mocha
	     * @private
	     */,this._runnerClass=r.Runner,
/**
	     * Whether or not to call {@link Mocha#loadFiles} implicitly when calling
	     * {@link Mocha#run}.  If this is `true`, then it's up to the consumer to call
	     * {@link Mocha#loadFiles} _or_ {@link Mocha#loadFilesAsync}.
	     * @private
	     * @memberof Mocha
	     */
this._lazyLoadFiles=0,
/**
	     * It's useful for a Mocha instance to know if it's running in a worker process.
	     * We could derive this via other means, but it's helpful to have a flag to refer to.
	     * @memberof Mocha
	     * @private
	     */
this.isWorker=Boolean(e.isWorker),e.parallel&&(void 0===e.jobs||e.jobs>1)&&(h("attempting to enable parallel mode"),this.parallelMode(1))}
/**
	   * Enables or disables bailing on the first failure.
	   *
	   * @public
	   * @see [CLI option](../#-bail-b)
	   * @param {boolean} [bail=true] - Whether to bail on first error.
	   * @returns {Mocha} this
	   * @chainable
	   */r.utils=Yh,r.interfaces=rm,
/**
	   * @public
	   * @memberof Mocha
	   */
r.reporters=mg,r.Runnable=fd,r.Context=nm,
/**
	   *
	   * @memberof Mocha
	   */
r.Runner=Md,r.Suite=wd,r.Hook=vd,r.Test=Hg,m.prototype.bail=function(e){return this.suite.bail(0!=e),this},
/**
	   * @summary
	   * Adds `file` to be loaded for execution.
	   *
	   * @description
	   * Useful for generic setup code that must be included within test suite.
	   *
	   * @public
	   * @see [CLI option](../#-file-filedirectoryglob)
	   * @param {string} file - Pathname of file to be loaded.
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.addFile=function(e){return this.files.push(e),this},
/**
	   * Sets reporter to `reporter`, defaults to "spec".
	   *
	   * @public
	   * @see [CLI option](../#-reporter-name-r-name)
	   * @see [Reporters](../#reporters)
	   * @param {String|Function} reporterName - Reporter name or constructor.
	   * @param {Object} [reporterOptions] - Options used to configure the reporter.
	   * @returns {Mocha} this
	   * @chainable
	   * @throws {Error} if requested reporter cannot be loaded
	   * @example
	   *
	   * // Use XUnit reporter and direct its output to file
	   * mocha.reporter('xunit', { output: '/path/to/testspec.xunit.xml' });
	   */
m.prototype.reporter=function(e,t){if("function"==typeof e)this._reporter=e;else{var r;// Try to load a built-in reporter.
// Try to load reporters from process.cwd() and node_modules
if(mg[e=e||"spec"]&&(r=mg[e]),!r)try{r=o()}catch(t){if("MODULE_NOT_FOUND"===t.code||t.message.indexOf("Cannot find module")>=0)// Try to load reporters from a path (absolute or relative)
try{r=o(Cp.resolve(Yh.cwd(),e))}catch(r){"MODULE_NOT_FOUND"===r.code||r.message.indexOf("Cannot find module")>=0?Yh.warn(p(e)+" reporter not found"):Yh.warn(p(e)+" reporter blew up with error:\n"+t.stack)}else Yh.warn(p(e)+" reporter blew up with error:\n"+t.stack)}if(!r)throw i("invalid reporter "+p(e),e);this._reporter=r}return this.options.reporterOption=t,// alias option name is used in public reporters xunit/tap/progress
this.options.reporterOptions=t,this},
/**
	   * Sets test UI `name`, defaults to "bdd".
	   *
	   * @public
	   * @see [CLI option](../#-ui-name-u-name)
	   * @see [Interface DSLs](../#interfaces)
	   * @param {string|Function} [ui=bdd] - Interface name or class.
	   * @returns {Mocha} this
	   * @chainable
	   * @throws {Error} if requested interface cannot be loaded
	   */
m.prototype.ui=function(e){var t;if("function"==typeof e)t=e;else if(e=e||"bdd",!(t=r.interfaces[e]))try{t=o()}catch(t){throw a("invalid interface "+p(e),e)}return t(this.suite),this.suite.on(c,(function(e){r.afterEach=e.afterEach||e.teardown,r.after=e.after||e.suiteTeardown,r.beforeEach=e.beforeEach||e.setup,r.before=e.before||e.suiteSetup,r.describe=e.describe||e.suite,r.it=e.it||e.test,r.xit=e.xit||e.test&&e.test.skip,r.setup=e.setup||e.beforeEach,r.suiteSetup=e.suiteSetup||e.before,r.suiteTeardown=e.suiteTeardown||e.after,r.suite=e.suite||e.describe,r.teardown=e.teardown||e.afterEach,r.test=e.test||e.it,r.run=e.run})),this},
/**
	   * Loads `files` prior to execution. Does not support ES Modules.
	   *
	   * @description
	   * The implementation relies on Node's `require` to execute
	   * the test interface functions and will be subject to its cache.
	   * Supports only CommonJS modules. To load ES modules, use Mocha#loadFilesAsync.
	   *
	   * @private
	   * @see {@link Mocha#addFile}
	   * @see {@link Mocha#run}
	   * @see {@link Mocha#unloadFiles}
	   * @see {@link Mocha#loadFilesAsync}
	   * @param {Function} [fn] - Callback invoked upon completion.
	   */
m.prototype.loadFiles=function(t){var r=this,n=this.suite;this.files.forEach((function(t){t=Cp.resolve(t),n.emit(c,e,t,r),n.emit(f,o(),t,r),n.emit(l,e,t,r)})),t&&t()},
/**
	   * Loads `files` prior to execution. Supports Node ES Modules.
	   *
	   * @description
	   * The implementation relies on Node's `require` and `import` to execute
	   * the test interface functions and will be subject to its cache.
	   * Supports both CJS and ESM modules.
	   *
	   * @public
	   * @see {@link Mocha#addFile}
	   * @see {@link Mocha#run}
	   * @see {@link Mocha#unloadFiles}
	   * @returns {Promise}
	   * @example
	   *
	   * // loads ESM (and CJS) test files asynchronously, then runs root suite
	   * mocha.loadFilesAsync()
	   *   .then(() => mocha.run(failures => process.exitCode = failures ? 1 : 0))
	   *   .catch(() => process.exitCode = 1);
	   */
m.prototype.loadFilesAsync=function(){var t=this,r=this.suite;return this.lazyLoadFiles(1),n?n.loadFilesAsync(this.files,(function(n){r.emit(c,e,n,t)}),(function(n,o){r.emit(f,o,n,t),r.emit(l,e,n,t)})):new Promise((function(e){t.loadFiles(e)}))},
/**
	   * Removes a previously loaded file from Node's `require` cache.
	   *
	   * @private
	   * @static
	   * @see {@link Mocha#unloadFiles}
	   * @param {string} file - Pathname of file to be unloaded.
	   */
m.unloadFile=function(e){delete o.cache[o.resolve(e)]},
/**
	   * Unloads `files` from Node's `require` cache.
	   *
	   * @description
	   * This allows required files to be "freshly" reloaded, providing the ability
	   * to reuse a Mocha instance programmatically.
	   * Note: does not clear ESM module files from the cache
	   *
	   * <strong>Intended for consumers &mdash; not used internally</strong>
	   *
	   * @public
	   * @see {@link Mocha#run}
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.unloadFiles=function(){if(this._state===d.DISPOSED)throw s("Mocha instance is already disposed, it cannot be used again.",this._cleanReferencesAfterRun,this);return this.files.forEach((function(e){m.unloadFile(e)})),this._state=d.INIT,this},
/**
	   * Sets `grep` filter after escaping RegExp special characters.
	   *
	   * @public
	   * @see {@link Mocha#grep}
	   * @param {string} str - Value to be converted to a regexp.
	   * @returns {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Select tests whose full title begins with `"foo"` followed by a period
	   * mocha.fgrep('foo.');
	   */
m.prototype.fgrep=function(e){return e?this.grep(new RegExp(Ap(e))):this},
/**
	   * @summary
	   * Sets `grep` filter used to select specific tests for execution.
	   *
	   * @description
	   * If `re` is a regexp-like string, it will be converted to regexp.
	   * The regexp is tested against the full title of each test (i.e., the
	   * name of the test preceded by titles of each its ancestral suites).
	   * As such, using an <em>exact-match</em> fixed pattern against the
	   * test name itself will not yield any matches.
	   * <br>
	   * <strong>Previous filter value will be overwritten on each call!</strong>
	   *
	   * @public
	   * @see [CLI option](../#-grep-regexp-g-regexp)
	   * @see {@link Mocha#fgrep}
	   * @see {@link Mocha#invert}
	   * @param {RegExp|String} re - Regular expression used to select tests.
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Select tests whose full title contains `"match"`, ignoring case
	   * mocha.grep(/match/i);
	   * @example
	   *
	   * // Same as above but with regexp-like string argument
	   * mocha.grep('/match/i');
	   * @example
	   *
	   * // ## Anti-example
	   * // Given embedded test `it('only-this-test')`...
	   * mocha.grep('/^only-this-test$/');    // NO! Use `.only()` to do this!
	   */
m.prototype.grep=function(e){if(Yh.isString(e)){// extract args if it's regex-like, i.e: [string, pattern, flag]
var t=e.match(/^\/(.*)\/(g|i|)$|.*/);this.options.grep=new RegExp(t[1]||t[0],t[2])}else this.options.grep=e;return this},
/**
	   * Inverts `grep` matches.
	   *
	   * @public
	   * @see {@link Mocha#grep}
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Select tests whose full title does *not* contain `"match"`, ignoring case
	   * mocha.grep(/match/i).invert();
	   */
m.prototype.invert=function(){return this.options.invert=1,this},
/**
	   * Enables or disables checking for global variables leaked while running tests.
	   *
	   * @public
	   * @see [CLI option](../#-check-leaks)
	   * @param {boolean} [checkLeaks=true] - Whether to check for global variable leaks.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.checkLeaks=function(e){return this.options.checkLeaks=0!=e,this},
/**
	   * Enables or disables whether or not to dispose after each test run.
	   * Disable this to ensure you can run the test suite multiple times.
	   * If disabled, be sure to dispose mocha when you're done to prevent memory leaks.
	   * @public
	   * @see {@link Mocha#dispose}
	   * @param {boolean} cleanReferencesAfterRun
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.cleanReferencesAfterRun=function(e){return this._cleanReferencesAfterRun=0!=e,this},
/**
	   * Manually dispose this mocha instance. Mark this instance as `disposed` and unable to run more tests.
	   * It also removes function references to tests functions and hooks, so variables trapped in closures can be cleaned by the garbage collector.
	   * @public
	   */
m.prototype.dispose=function(){if(this._state===d.RUNNING)throw u("Cannot dispose while the mocha instance is still running tests.");this.unloadFiles(),this._previousRunner&&this._previousRunner.dispose(),this.suite.dispose(),this._state=d.DISPOSED},
/**
	   * Displays full stack trace upon test failure.
	   *
	   * @public
	   * @see [CLI option](../#-full-trace)
	   * @param {boolean} [fullTrace=true] - Whether to print full stacktrace upon failure.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.fullTrace=function(e){return this.options.fullTrace=0!=e,this},
/**
	   * Enables desktop notification support if prerequisite software installed.
	   *
	   * @public
	   * @see [CLI option](../#-growl-g)
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.growl=function(){if(this.options.growl=this.isGrowlCapable(),!this.options.growl){var e=Yh.isBrowser()?"notification support not available in this browser...":"notification support prerequisites not installed...";console.error(e+" cannot enable!")}return this},
/**
	   * @summary
	   * Determines if Growl support seems likely.
	   *
	   * @description
	   * <strong>Not available when run in browser.</strong>
	   *
	   * @private
	   * @see {@link Growl#isCapable}
	   * @see {@link Mocha#growl}
	   * @return {boolean} whether Growl support can be expected
	   */
m.prototype.isGrowlCapable=_g,
/**
	   * Implements desktop notifications using a pseudo-reporter.
	   *
	   * @private
	   * @see {@link Mocha#growl}
	   * @see {@link Growl#notify}
	   * @param {Runner} runner - Runner instance.
	   */
m.prototype._growl=Ng,
/**
	   * Specifies whitelist of variable names to be expected in global scope.
	   *
	   * @public
	   * @see [CLI option](../#-global-variable-name)
	   * @see {@link Mocha#checkLeaks}
	   * @param {String[]|String} global - Accepted global variable name(s).
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Specify variables to be expected in global scope
	   * mocha.global(['jQuery', 'MyLib']);
	   */
m.prototype.global=function(e){return this.options.global=(this.options.global||[]).concat(e).filter(Boolean).filter((function(e,t,r){return r.indexOf(e)===t})),this},// for backwards compability, 'globals' is an alias of 'global'
m.prototype.globals=m.prototype.global,
/**
	   * Enables or disables TTY color output by screen-oriented reporters.
	   *
	   * @public
	   * @see [CLI option](../#-color-c-colors)
	   * @param {boolean} [color=true] - Whether to enable color output.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.color=function(e){return this.options.color=0!=e,this},
/**
	   * Enables or disables reporter to use inline diffs (rather than +/-)
	   * in test failure output.
	   *
	   * @public
	   * @see [CLI option](../#-inline-diffs)
	   * @param {boolean} [inlineDiffs=true] - Whether to use inline diffs.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.inlineDiffs=function(e){return this.options.inlineDiffs=0!=e,this},
/**
	   * Enables or disables reporter to include diff in test failure output.
	   *
	   * @public
	   * @see [CLI option](../#-diff)
	   * @param {boolean} [diff=true] - Whether to show diff on failure.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.diff=function(e){return this.options.diff=0!=e,this},
/**
	   * @summary
	   * Sets timeout threshold value.
	   *
	   * @description
	   * A string argument can use shorthand (such as "2s") and will be converted.
	   * If the value is `0`, timeouts will be disabled.
	   *
	   * @public
	   * @see [CLI option](../#-timeout-ms-t-ms)
	   * @see [Timeouts](../#timeouts)
	   * @param {number|string} msecs - Timeout threshold value.
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Sets timeout to one second
	   * mocha.timeout(1000);
	   * @example
	   *
	   * // Same as above but using string argument
	   * mocha.timeout('1s');
	   */
m.prototype.timeout=function(e){return this.suite.timeout(e),this},
/**
	   * Sets the number of times to retry failed tests.
	   *
	   * @public
	   * @see [CLI option](../#-retries-n)
	   * @see [Retry Tests](../#retry-tests)
	   * @param {number} retry - Number of times to retry failed tests.
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Allow any failed test to retry one more time
	   * mocha.retries(1);
	   */
m.prototype.retries=function(e){return this.suite.retries(e),this},
/**
	   * Sets slowness threshold value.
	   *
	   * @public
	   * @see [CLI option](../#-slow-ms-s-ms)
	   * @param {number} msecs - Slowness threshold value.
	   * @return {Mocha} this
	   * @chainable
	   * @example
	   *
	   * // Sets "slow" threshold to half a second
	   * mocha.slow(500);
	   * @example
	   *
	   * // Same as above but using string argument
	   * mocha.slow('0.5s');
	   */
m.prototype.slow=function(e){return this.suite.slow(e),this},
/**
	   * Forces all tests to either accept a `done` callback or return a promise.
	   *
	   * @public
	   * @see [CLI option](../#-async-only-a)
	   * @param {boolean} [asyncOnly=true] - Wether to force `done` callback or promise.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.asyncOnly=function(e){return this.options.asyncOnly=0!=e,this},
/**
	   * Disables syntax highlighting (in browser).
	   *
	   * @public
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.noHighlighting=function(){return this.options.noHighlighting=1,this},
/**
	   * Enables or disables uncaught errors to propagate.
	   *
	   * @public
	   * @see [CLI option](../#-allow-uncaught)
	   * @param {boolean} [allowUncaught=true] - Whether to propagate uncaught errors.
	   * @return {Mocha} this
	   * @chainable
	   */
m.prototype.allowUncaught=function(e){return this.options.allowUncaught=0!=e,this},
/**
	   * @summary
	   * Delays root suite execution.
	   *
	   * @description
	   * Used to perform asynch operations before any suites are run.
	   *
	   * @public
	   * @see [delayed root suite](../#delayed-root-suite)
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.delay=function(){return this.options.delay=1,this},
/**
	   * Causes tests marked `only` to fail the suite.
	   *
	   * @public
	   * @see [CLI option](../#-forbid-only)
	   * @param {boolean} [forbidOnly=true] - Whether tests marked `only` fail the suite.
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.forbidOnly=function(e){return this.options.forbidOnly=0!=e,this},
/**
	   * Causes pending tests and tests marked `skip` to fail the suite.
	   *
	   * @public
	   * @see [CLI option](../#-forbid-pending)
	   * @param {boolean} [forbidPending=true] - Whether pending tests fail the suite.
	   * @returns {Mocha} this
	   * @chainable
	   */
m.prototype.forbidPending=function(e){return this.options.forbidPending=0!=e,this},
/**
	   * Throws an error if mocha is in the wrong state to be able to transition to a "running" state.
	   * @private
	   */
m.prototype._guardRunningStateTransition=function(){if(this._state===d.RUNNING)throw u("Mocha instance is currently running tests, cannot start a next test run until this one is done",this);if(this._state===d.DISPOSED||this._state===d.REFERENCES_CLEANED)throw s("Mocha instance is already disposed, cannot start a new test run. Please create a new mocha instance. Be sure to set disable `cleanReferencesAfterRun` when you want to reuse the same mocha instance for multiple test runs.",this._cleanReferencesAfterRun,this)},
/**
	   * Mocha version as specified by "package.json".
	   *
	   * @name Mocha#version
	   * @type string
	   * @readonly
	   */
Object.defineProperty(m.prototype,"version",{value:bg.version,configurable:0,enumerable:1,writable:0}),
/**
	   * Callback to be invoked when test execution is complete.
	   *
	   * @private
	   * @callback DoneCB
	   * @param {number} failures - Number of failures that occurred.
	   */
/**
	   * Runs root suite and invokes `fn()` when complete.
	   *
	   * @description
	   * To run tests multiple times (or to run tests in files that are
	   * already in the `require` cache), make sure to clear them from
	   * the cache first!
	   *
	   * @public
	   * @see {@link Mocha#unloadFiles}
	   * @see {@link Runner#run}
	   * @param {DoneCB} [fn] - Callback invoked when test execution completed.
	   * @returns {Runner} runner instance
	   * @example
	   *
	   * // exit with non-zero status if there were test failures
	   * mocha.run(failures => process.exitCode = failures ? 1 : 0);
	   */
m.prototype.run=function(e){this._guardRunningStateTransition(),this._state=d.RUNNING,this._previousRunner&&(this._previousRunner.dispose(),this.suite.reset()),this.files.length&&!this._lazyLoadFiles&&this.loadFiles();var t=this,n=this.suite,o=this.options;o.files=this.files;var i=new this._runnerClass(n,{delay:o.delay,cleanReferencesAfterRun:this._cleanReferencesAfterRun});Ug(i);var a=new this._reporter(i,o);return i.checkLeaks=1==o.checkLeaks,i.fullStackTrace=o.fullTrace,i.asyncOnly=o.asyncOnly,i.allowUncaught=o.allowUncaught,i.forbidOnly=o.forbidOnly,i.forbidPending=o.forbidPending,o.grep&&i.grep(o.grep,o.invert),o.global&&i.globals(o.global),o.growl&&this._growl(i),void 0!==o.color&&(r.reporters.Base.useColors=o.color),r.reporters.Base.inlineDiffs=o.inlineDiffs,r.reporters.Base.hideDiff=!o.diff,i.run((function(r){t._previousRunner=i,t._cleanReferencesAfterRun?t._state=d.REFERENCES_CLEANED:t._state=d.INIT,e=e||Yh.noop,a.done?a.done(r,e):e(r)}),{files:this.files,options:o})},
/**
	   * Assigns hooks to the root suite
	   * @param {MochaRootHookObject} [hooks] - Hooks to assign to root suite
	   * @chainable
	   */
m.prototype.rootHooks=function(e){if("object"===Yh.type(e)){var t=[].concat(e.beforeAll||[]),r=[].concat(e.beforeEach||[]),n=[].concat(e.afterAll||[]),o=[].concat(e.afterEach||[]),i=this.suite;t.forEach((function(e){i.beforeAll(e)})),r.forEach((function(e){i.beforeEach(e)})),n.forEach((function(e){i.afterAll(e)})),o.forEach((function(e){i.afterEach(e)}))}return this},
/**
	   * Toggles parallel mode.
	   *
	   * Must be run before calling {@link Mocha#run}. Changes the `Runner` class to
	   * use; also enables lazy file loading if not already done so.
	   * @param {boolean} [enable] - If `true`, enable; otherwise disable.
	   * @throws If run in browser
	   * @throws If Mocha not in "INIT" state
	   * @returns {Mocha}
	   * @chainable
	   * @public
	   */
m.prototype.parallelMode=function(e){if(Yh.isBrowser())throw rd.createUnsupportedError("parallel mode is only supported in Node.js");var t=1==e;if(t===this.options.parallel&&this._lazyLoadFiles&&this._runnerClass!==r.Runner)return this;if(this._state!==d.INIT)throw rd.createUnsupportedError("cannot change parallel mode after having called run()");// lazyLoadFiles may have been set `true` otherwise (for ESM loading),
// so keep `true` if so.
return this.options.parallel=t,// swap Runner class
this._runnerClass=t?Yd:r.Runner,this.lazyLoadFiles(this._lazyLoadFiles||t)},
/**
	   * Disables implicit call to {@link Mocha#loadFiles} in {@link Mocha#run}. This
	   * setting is used by watch mode, parallel mode, and for loading ESM files.
	   * @todo This should throw if we've already loaded files; such behavior
	   * necessitates adding a new state.
	   * @param {boolean} [enable] - If `true`, disable eager loading of files in
	   * {@link Mocha#run}
	   * @chainable
	   * @public
	   */
m.prototype.lazyLoadFiles=function(e){return this._lazyLoadFiles=1==e,h("set lazy load to %s",e),this}}));/* eslint no-unused-vars: off */ /* eslint-env commonjs */
/**
	 * Shim process.stdout.
	 */
Dr.stdout=ef({label:0});
/**
	 * Create a Mocha instance.
	 *
	 * @return {undefined}
	 */
var sm=new am({reporter:"html"}),um=e.Date,cm=e.setTimeout,lm=[],fm=e.onerror;
/**
	 * Save timer references to avoid Sinon interfering (see GH-237).
	 */
/**
	 * Remove uncaughtException listener.
	 * Revert to original onerror handler if previously defined.
	 */
Dr.removeListener=function(t,r){if("uncaughtException"===t){e.onerror=fm||function(){};var n=lm.indexOf(r);-1!==n&&lm.splice(n,1)}},
/**
	 * Implements listenerCount for 'uncaughtException'.
	 */
Dr.listenerCount=function(e){return"uncaughtException"===e?lm.length:0},
/**
	 * Implements uncaughtException listener.
	 */
Dr.on=function(t,r){"uncaughtException"===t&&(e.onerror=function(e,t,n){return r(new Error(e+" ("+t+":"+n+")")),!sm.options.allowUncaught},lm.push(r))},Dr.listeners=function(e){return"uncaughtException"===e?lm:[]},// The BDD UI is registered by default, but no UI will be functional in the
// browser without an explicit call to the overridden `mocha.ui` (see below).
// Ensure that this default UI does not expose its methods to the global scope.
sm.suite.removeAllListeners("pre-require");var pm,hm=[];function dm(){for(var e=(new um).getTime();hm.length&&(new um).getTime()-e<100;)hm.shift()();pm=hm.length?cm(dm,0):null}
/**
	 * High-performance override of Runner.immediately.
	 */return am.Runner.immediately=function(e){hm.push(e),pm||(pm=cm(dm,0))},
/**
	 * Function to allow assertion libraries to throw errors directly into mocha.
	 * This is useful when running tests in a browser because window.onerror will
	 * only receive the 'message' attribute of the Error.
	 */
sm.throwError=function(e){throw lm.forEach((function(t){t(e)})),e},
/**
	 * Override ui to ensure that the ui functions are initialized.
	 * Normally this would happen in Mocha.prototype.loadFiles.
	 */
sm.ui=function(t){return am.prototype.ui.call(this,t),this.suite.emit("pre-require",e,null,this),this},
/**
	 * Setup mocha with the given setting options.
	 */
sm.setup=function(e){"string"==typeof e&&(e={ui:e}),1==e.delay&&this.delay();var t=this;return Object.keys(e).filter((function(e){return"delay"!==e})).forEach((function(r){Object.prototype.hasOwnProperty.call(e,r)&&t[r](e[r])})),this},
/**
	 * Run mocha, returning the Runner.
	 */
sm.run=function(t){var r=sm.options;sm.globals("location");var n=(e.location.search||"").replace("?","").split("&").reduce((function(e,t){var r=t.indexOf("="),n=t.slice(0,r),o=t.slice(++r);// Due to how the URLSearchParams API treats spaces
return e[n]=decodeURIComponent(o.replace(/\+/g,"%20")),e}),{});return n.grep&&sm.grep(n.grep),n.fgrep&&sm.fgrep(n.fgrep),n.invert&&sm.invert(),am.prototype.run.call(sm,(function(n){// The DOM Document is not available in Web Workers.
var o=e.document;o&&o.getElementById("mocha")&&1!=r.noHighlighting&&af("code"),t&&t(n)}))},
/**
	 * Expose the process shim.
	 * https://github.com/mochajs/mocha/pull/916
	 */
am.process=Dr,
/**
	 * Expose mocha.
	 */
sm.Mocha=am,sm.mocha=sm,Object.assign(sm,e)},e.exports=r()}).call(this,r(9))
/***/}
/******/]);